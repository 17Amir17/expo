diff --git a/node_modules/metro-transform-worker/src/index.js b/node_modules/metro-transform-worker/src/index.js
index cae11e7..87b2b06 100644
--- a/node_modules/metro-transform-worker/src/index.js
+++ b/node_modules/metro-transform-worker/src/index.js
@@ -63,6 +63,7 @@ const minifyCode = async (
       map,
       // functionMap is overridden by the serializer
       functionMap: null,
+      clientReferences: null,
       path: filename,
       // isIgnored is overriden by the serializer
       isIgnored: false,
@@ -226,7 +227,7 @@ async function transformJS(file, { config, options, projectRoot }) {
       throw error;
     }
     if (config.unstable_disableModuleWrapping === true) {
-      wrappedAst = ast;
+      wrappedAst = ast;
     } else {
       ({ ast: wrappedAst } = JsFileWrapping.wrapModule(
         ast,
@@ -288,6 +289,7 @@ async function transformJS(file, { config, options, projectRoot }) {
         lineCount: countLines(code),
         map,
         functionMap: file.functionMap,
+        clientReferences: file.clientReferences,
       },
       type: file.type,
     },
@@ -333,6 +335,7 @@ async function transformJSWithBabel(file, context) {
   const jsFile = {
     ...file,
     ast: transformResult.ast,
+    clientReferences: transformResult.metadata.clientReferences,
     functionMap:
       transformResult.metadata?.metro?.functionMap ??
       // Fallback to deprecated explicitly-generated `functionMap`
@@ -452,6 +455,7 @@ module.exports = {
       code: sourceCode,
       type: options.type === "script" ? "js/script" : "js/module",
       functionMap: null,
+      clientReferences: null,
     };
     return await transformJSWithBabel(file, context);
   },
