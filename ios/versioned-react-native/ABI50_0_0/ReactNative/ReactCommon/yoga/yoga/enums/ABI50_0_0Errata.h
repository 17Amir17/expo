/*
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// @generated by enums.py
// clang-format off
#pragma once

#include <cstdint>
#include <ABI50_0_0yoga/ABI50_0_0YGEnums.h>
#include <ABI50_0_0yoga/enums/ABI50_0_0YogaEnums.h>

namespace ABI50_0_0facebook::yoga {

enum class Errata : uint32_t {
  None = ABI50_0_0YGErrataNone,
  StretchFlexBasis = ABI50_0_0YGErrataStretchFlexBasis,
  All = ABI50_0_0YGErrataAll,
  Classic = ABI50_0_0YGErrataClassic,
};

ABI50_0_0YG_DEFINE_ENUM_FLAG_OPERATORS(Errata)

template <>
constexpr inline int32_t ordinalCount<Errata>() {
  return 4;
} 

template <>
constexpr inline int32_t bitCount<Errata>() {
  return 2;
} 

constexpr inline Errata scopedEnum(ABI50_0_0YGErrata unscoped) {
  return static_cast<Errata>(unscoped);
}

constexpr inline ABI50_0_0YGErrata unscopedEnum(Errata scoped) {
  return static_cast<ABI50_0_0YGErrata>(scoped);
}

inline const char* toString(Errata e) {
  return ABI50_0_0YGErrataToString(unscopedEnum(e));
}

} // namespace ABI50_0_0facebook::yoga
