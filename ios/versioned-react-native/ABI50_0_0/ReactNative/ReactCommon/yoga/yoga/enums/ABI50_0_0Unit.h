/*
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// @generated by enums.py
// clang-format off
#pragma once

#include <cstdint>
#include <ABI50_0_0yoga/ABI50_0_0YGEnums.h>
#include <ABI50_0_0yoga/enums/ABI50_0_0YogaEnums.h>

namespace ABI50_0_0facebook::yoga {

enum class Unit : uint8_t {
  Undefined = ABI50_0_0YGUnitUndefined,
  Point = ABI50_0_0YGUnitPoint,
  Percent = ABI50_0_0YGUnitPercent,
  Auto = ABI50_0_0YGUnitAuto,
};

template <>
constexpr inline int32_t ordinalCount<Unit>() {
  return 4;
} 

template <>
constexpr inline int32_t bitCount<Unit>() {
  return 2;
} 

constexpr inline Unit scopedEnum(ABI50_0_0YGUnit unscoped) {
  return static_cast<Unit>(unscoped);
}

constexpr inline ABI50_0_0YGUnit unscopedEnum(Unit scoped) {
  return static_cast<ABI50_0_0YGUnit>(scoped);
}

inline const char* toString(Unit e) {
  return ABI50_0_0YGUnitToString(unscopedEnum(e));
}

} // namespace ABI50_0_0facebook::yoga
