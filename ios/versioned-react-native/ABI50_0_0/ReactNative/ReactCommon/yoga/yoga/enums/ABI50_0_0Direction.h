/*
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// @generated by enums.py
// clang-format off
#pragma once

#include <cstdint>
#include <ABI50_0_0yoga/ABI50_0_0YGEnums.h>
#include <ABI50_0_0yoga/enums/ABI50_0_0YogaEnums.h>

namespace ABI50_0_0facebook::yoga {

enum class Direction : uint8_t {
  Inherit = ABI50_0_0YGDirectionInherit,
  LTR = ABI50_0_0YGDirectionLTR,
  RTL = ABI50_0_0YGDirectionRTL,
};

template <>
constexpr inline int32_t ordinalCount<Direction>() {
  return 3;
} 

template <>
constexpr inline int32_t bitCount<Direction>() {
  return 2;
} 

constexpr inline Direction scopedEnum(ABI50_0_0YGDirection unscoped) {
  return static_cast<Direction>(unscoped);
}

constexpr inline ABI50_0_0YGDirection unscopedEnum(Direction scoped) {
  return static_cast<ABI50_0_0YGDirection>(scoped);
}

inline const char* toString(Direction e) {
  return ABI50_0_0YGDirectionToString(unscopedEnum(e));
}

} // namespace ABI50_0_0facebook::yoga
