/*
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// @generated by enums.py
// clang-format off
#pragma once

#include <cstdint>
#include <ABI50_0_0yoga/ABI50_0_0YGEnums.h>
#include <ABI50_0_0yoga/enums/ABI50_0_0YogaEnums.h>

namespace ABI50_0_0facebook::yoga {

enum class Edge : uint8_t {
  Left = ABI50_0_0YGEdgeLeft,
  Top = ABI50_0_0YGEdgeTop,
  Right = ABI50_0_0YGEdgeRight,
  Bottom = ABI50_0_0YGEdgeBottom,
  Start = ABI50_0_0YGEdgeStart,
  End = ABI50_0_0YGEdgeEnd,
  Horizontal = ABI50_0_0YGEdgeHorizontal,
  Vertical = ABI50_0_0YGEdgeVertical,
  All = ABI50_0_0YGEdgeAll,
};

template <>
constexpr inline int32_t ordinalCount<Edge>() {
  return 9;
} 

template <>
constexpr inline int32_t bitCount<Edge>() {
  return 4;
} 

constexpr inline Edge scopedEnum(ABI50_0_0YGEdge unscoped) {
  return static_cast<Edge>(unscoped);
}

constexpr inline ABI50_0_0YGEdge unscopedEnum(Edge scoped) {
  return static_cast<ABI50_0_0YGEdge>(scoped);
}

inline const char* toString(Edge e) {
  return ABI50_0_0YGEdgeToString(unscopedEnum(e));
}

} // namespace ABI50_0_0facebook::yoga
