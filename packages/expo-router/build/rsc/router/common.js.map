{"version":3,"file":"common.js","sourceRoot":"","sources":["../../../src/rsc/router/common.ts"],"names":[],"mappings":";;;AAKA,SAAgB,eAAe,CAAC,IAAY;IAC1C,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAClD,MAAM,KAAK,GAAG,IAAI,GAAG,EAAU,CAAC;IAChC,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,IAAI,SAAS,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE;QACtD,MAAM,EAAE,GAAG,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC9D,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;KACf;IACD,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5C,OAAO,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC3B,CAAC;AATD,0CASC;AAED,SAAgB,cAAc,CAAC,IAAY;IACzC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;QACzB,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;KAC/C;IACD,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC;AALD,wCAKC;AAED,SAAgB,gBAAgB,CAAC,KAAa;IAC5C,OAAO,GAAG,GAAG,KAAK,CAAC;AACrB,CAAC;AAFD,4CAEC;AAEY,QAAA,cAAc,GAAG,kBAAkB,CAAC;AAEjD,oEAAoE;AACvD,QAAA,cAAc,GAAG,cAAc,CAAC","sourcesContent":["export type RouteProps = {\n  path: string;\n  searchParams: URLSearchParams;\n};\n\nexport function getComponentIds(path: string): readonly string[] {\n  const pathItems = path.split('/').filter(Boolean);\n  const idSet = new Set<string>();\n  for (let index = 0; index <= pathItems.length; ++index) {\n    const id = [...pathItems.slice(0, index), 'layout'].join('/');\n    idSet.add(id);\n  }\n  idSet.add([...pathItems, 'page'].join('/'));\n  return Array.from(idSet);\n}\n\nexport function getInputString(path: string): string {\n  if (!path.startsWith('/')) {\n    throw new Error('Path should start with `/`');\n  }\n  return path.slice(1);\n}\n\nexport function parseInputString(input: string): string {\n  return '/' + input;\n}\n\nexport const PARAM_KEY_SKIP = 'expo_router_skip';\n\n// It starts with \"/\" to avoid conflicing with normal component ids.\nexport const SHOULD_SKIP_ID = '/SHOULD_SKIP';\n\n// The key is componentId\nexport type ShouldSkip = Record<\n  string,\n  {\n    path?: boolean; // if we compare path\n    keys?: string[]; // searchParams keys to compare\n  }\n>;\n"]}