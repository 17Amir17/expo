{"version":3,"file":"expo-definedRouter.js","sourceRoot":"","sources":["../../../src/rsc/router/expo-definedRouter.tsx"],"names":[],"mappings":"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","sourcesContent":["// import { fileURLToPath } from 'node:url';\n// import path from 'node:path';\n// import { existsSync } from 'node:fs';\n// import fsPromises from 'node:fs/promises';\nimport React, { lazy, createElement } from 'react';\n// import { glob } from 'glob';\nimport { defineRouter } from './defineRouter';\n\nimport { ctx } from 'expo-router/_ctx';\nimport { getRoutes } from '../../getRoutes';\nimport { getServerManifest } from '../../getServerManifest';\nimport { Route, RouteNode } from '../../Route';\n\n// const routesDir = path.join(\n//   path.dirname(fileURLToPath(import.meta.url)),\n//   'routes',\n// );\n\nconst getMappingAndItems = async (id: string) => {\n  const mapping: Record<string, string> = {};\n  const items = id.split('/');\n  for (let i = 0; i < items.length - 1; ++i) {\n    // const dir = path.join(routesDir, ...items.slice(0, i));\n    // if (!existsSync(dir)) {\n    //   return null;\n    // }\n    // TODO: Check logic\n    const files = ctx.keys();\n    if (!files.includes(items[i]!)) {\n      const slug = files.find((file) => file.match(/^(\\[\\w+\\]|_\\w+_)$/));\n      if (slug) {\n        mapping[slug.slice(1, -1)] = items[i]!;\n        items[i] = slug;\n      }\n    }\n  }\n\n  return { mapping, items };\n};\n\nconst getPathConfig = async () => {\n  const files = ctx.keys();\n  return files.map((file) => {\n    const names = file.split('/').filter(Boolean).slice(0, -1);\n    const pathSpec = names.map((name) => {\n      const match = name.match(/^(\\[\\w+\\]|_\\w+_)$/);\n      if (match) {\n        return { type: 'group', name: match[1]!.slice(1, -1) } as const;\n      }\n      return { type: 'literal', name } as const;\n    });\n    return {\n      path: pathSpec,\n      isStatic: pathSpec.every(({ type }) => type === 'literal'),\n    };\n  });\n};\n\nconst routes = getRoutes(ctx, {\n  importMode: 'lazy',\n});\n\nfunction wakuRouteIdToExpoRoute(route: RouteNode, routeId: string) {\n  // Route like `layout` or `page` to match `_layout` or `index`\n  // Route like `second/layout` or `second/page` to match `second/_layout` or `second`\n  const parts = routeId.split('/');\n\n  let currentRoute = route;\n  console.log('0.', parts);\n  for (let i = 0; i < parts.length; i++) {\n    const part = parts[i];\n\n    console.log('1.', part);\n    if (i === parts.length - 1) {\n      if (part === 'layout' && currentRoute.type === 'layout') {\n        return null;\n        // return route;\n      } else if (part === 'page') {\n        console.log('2.', part);\n        if (route.type === 'layout') {\n          console.log('3.', part);\n          // TODO: Obviously not right, doesn't account for nested index or groups.\n          return route.children.find((child) => child.type === 'route' && child.route === 'index');\n        }\n        return route;\n      } else {\n        return null;\n      }\n    }\n    currentRoute = currentRoute.children.find((child) => child.route === part);\n  }\n\n  return currentRoute;\n}\n\nexport default defineRouter(\n  // getPathConfig\n  () => getPathConfig(),\n  // getComponent (id is \"**/layout\" or \"**/page\")\n  async (id, unstable_setShouldSkip) => {\n    unstable_setShouldSkip({}); // always skip if possible\n\n    const route = wakuRouteIdToExpoRoute(routes, id);\n    console.log('getComponent', id, route);\n    if (!route) {\n      console.error('No route found for', id, ctx.keys());\n      return null;\n    }\n\n    // const result = await getMappingAndItems(id);\n    // if (result === null) {\n    //   return null;\n    // }\n\n    const { loadRoute, children, ...rest } = route;\n\n    // const { mapping, items } = result;\n    const RouteNode = lazy(async () => {\n      const value = await loadRoute();\n      return value;\n    });\n\n    console.log('Loading route:', RouteNode);\n\n    // const Route = ctx(id); // getRoute(items);\n    const Component = (props: Record<string, unknown>) =>\n      createElement(RouteNode, {\n        ...props,\n        // ...mapping,\n      });\n    // const Component = (props: Record<string, unknown>) => (\n    //   <Route node={stripFunctions(route)}>\n    //     {createElement(RouteNode, {\n    //       ...props,\n    //       // ...mapping,\n    //     })}\n    //   </Route>\n    // );\n    return Component;\n  }\n);\n\nfunction stripFunctions(routeNode: RouteNode): RouteNode {\n  return {\n    ...routeNode,\n    children: routeNode.children.map(stripFunctions),\n    loadRoute: null,\n  };\n}\n"]}