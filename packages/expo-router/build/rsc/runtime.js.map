{"version":3,"file":"runtime.js","sourceRoot":"","sources":["../../src/rsc/runtime.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAEH,qEAAqE;AACrE,MAAM,oBAAoB,GAAG,IAAI,GAAG,EAAE,CAAC;AAEvC,UAAU,CAAC,sBAAsB,GAAG,CAAC,EAAE,EAAE,EAAE;IACzC,4DAA4D;IAC5D,0NAA0N;IAC1N,8CAA8C;IAC9C,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC;IACxB,MAAM,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACnD,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,EAAE,EAAE,cAAc,CAAC,CAAC;IAC1D,MAAM,eAAe,GAAG,MAAM,CAAC,GAAG,uBAAuB,mBAAmB,CAAC,CAAC;IAC9E,OAAO,eAAe,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;QACnC,MAAM,CAAC,GAAG,GAAG,CAAC,cAAc,CAAC,CAAC;QAC9B,oBAAoB,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;QACvC,OAAO,CAAC,CAAC;IACX,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;QACX,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;QAClD,MAAM,CAAC,CAAC;IACV,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC;AAEF,UAAU,CAAC,mBAAmB,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,oBAAoB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC","sourcesContent":["/**\n * Copyright Â© 2024 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// Runtime code for patching Webpack's require function to use Metro.\nconst rscClientModuleCache = new Map();\n\nglobalThis.__webpack_chunk_load__ = (id) => {\n  // ID is a URL with the opaque Metro require ID as the hash.\n  // http://localhost:8081/node_modules/react-native-web/dist/exports/Text/index.js.bundle?platform=web&dev=true&hot=false&transform.engine=hermes&transform.routerRoot=src%2Fapp&modulesOnly=true&runModule=false#798513620\n  // This is generated in a proxy in the server.\n  const url = new URL(id);\n  const numericMetroId = parseInt(url.hash.slice(1));\n  console.log('__webpack_chunk_load__', id, numericMetroId);\n  const loadBundleAsync = global[`${__METRO_GLOBAL_PREFIX__}__loadBundleAsync`];\n  return loadBundleAsync(id).then(() => {\n    const m = __r(numericMetroId);\n    rscClientModuleCache.set(id, m);\n    console.log('loaded module.2:', id, m);\n    return m;\n  }).catch(e => {\n    console.error('error loading RSC module:', id, e);\n    throw e;\n  })\n};\n\nglobalThis.__webpack_require__ = (id) => rscClientModuleCache.get(id);\n"]}