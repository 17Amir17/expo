{"version":3,"file":"runtime.js","sourceRoot":"","sources":["../../src/rsc/runtime.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAEH,qEAAqE;AACrE,MAAM,oBAAoB,GAAG,IAAI,GAAG,EAAE,CAAC;AAQvC,oFAAoF;AACpF,SAAS,qBAAqB;IAC5B,MAAM,KAAK,GAAG,IAAI,GAAG,EAAyB,CAAC;IAE/C,MAAM,UAAU,GAAG,OAAO,CAAC,uCAAuC,CAEjE,CAAC;IAEF,6DAA6D;IAC7D,IAAI,CAAC,UAAU,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM;QAAE,OAAO,IAAI,CAAC;IAEhE,OAAO,KAAK,UAAU,yBAAyB,CAAC,IAAY;QAC1D,IAAI,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YACnB,OAAO,KAAK,CAAC,GAAG,CAAC,IAAI,CAAE,CAAC;SACzB;QAED,YAAY;QACZ,MAAM,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACjD,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACnB,MAAM,KAAK,CAAC;QACd,CAAC,CAAC,CAAC;QAEH,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAEzB,OAAO,OAAO,CAAC;IACjB,CAAC,CAAC;AACJ,CAAC;AAED,MAAM,WAAW,GAAG,qBAAqB,EAAE,CAAC;AAE5C,UAAU,CAAC,sBAAsB,GAAG,CAAC,EAAE,EAAE,EAAE;IACzC,4DAA4D;IAC5D,0NAA0N;IAC1N,8CAA8C;IAC9C,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IAErE,MAAM,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACnD,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,EAAE,EAAE,cAAc,CAAC,CAAC;IAE1D,IAAI,iBAAgC,CAAC;IACrC,IAAI,WAAW,EAAE;QACf,OAAO,CAAC,GAAG,CAAC,sCAAsC,EAAE,cAAc,CAAC,CAAC;QACpE,iBAAiB,GAAG,WAAW,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC;KACzD;SAAM;QACL,MAAM,eAAe,GAAG,MAAM,CAAC,GAAG,uBAAuB,mBAAmB,CAAC,CAAC;QAC9E,iBAAiB,GAAG,eAAe,CAAC,EAAE,CAAC,CAAC;KACzC;IAED,OAAO,iBAAiB;SACrB,IAAI,CAAC,GAAG,EAAE;QACT,MAAM,CAAC,GAAG,GAAG,CAAC,cAAc,CAAC,CAAC;QAC9B,oBAAoB,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QAChC,IAAI,CAAC,CAAC,EAAE;YACN,MAAM,IAAI,KAAK,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;SAC7C;QACD,uDAAuD;QACvD,oDAAoD;QACpD,YAAY;QACZ,OAAO,CAAC,CAAC;IACX,CAAC,CAAC;SACD,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;QACX,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;QAClD,MAAM,CAAC,CAAC;IACV,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AAEF,UAAU,CAAC,mBAAmB,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,oBAAoB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC","sourcesContent":["/**\n * Copyright Â© 2024 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// Runtime code for patching Webpack's require function to use Metro.\nconst rscClientModuleCache = new Map();\n\n/**\n * Must satisfy the requirements of the Metro bundler.\n * https://github.com/react-native-community/discussions-and-proposals/blob/main/proposals/0605-lazy-bundling.md#__loadbundleasync-in-metro\n */\ntype AsyncRequire = (path: string) => Promise<void>;\n\n/** Create an `loadBundleAsync` function in the expected shape for Metro bundler. */\nfunction buildProdAsyncRequire(): AsyncRequire | null {\n  const cache = new Map<string, Promise<void>>();\n\n  const boundaries = require('expo-router/virtual-client-boundaries') as {\n    [key: string]: () => Promise<any>;\n  };\n\n  // TODO: Expose \"is connected to dev server\" to disable this.\n  if (!boundaries || !Object.keys(boundaries).length) return null;\n\n  return async function universal_loadBundleAsync(path: string): Promise<void> {\n    if (cache.has(path)) {\n      return cache.get(path)!;\n    }\n\n    // debugger;\n    const promise = boundaries[path]().catch((error) => {\n      cache.delete(path);\n      throw error;\n    });\n\n    cache.set(path, promise);\n\n    return promise;\n  };\n}\n\nconst prodFetcher = buildProdAsyncRequire();\n\nglobalThis.__webpack_chunk_load__ = (id) => {\n  // ID is a URL with the opaque Metro require ID as the hash.\n  // http://localhost:8081/node_modules/react-native-web/dist/exports/Text/index.js.bundle?platform=web&dev=true&hot=false&transform.engine=hermes&transform.routerRoot=src%2Fapp&modulesOnly=true&runModule=false#798513620\n  // This is generated in a proxy in the server.\n  const url = new URL(id, id.startsWith('/') ? 'http://e' : undefined);\n\n  const numericMetroId = parseInt(url.hash.slice(1));\n  console.log('__webpack_chunk_load__', id, numericMetroId);\n\n  let loadBundlePromise: Promise<void>;\n  if (prodFetcher) {\n    console.log('__webpack_chunk_load__ > production:', numericMetroId);\n    loadBundlePromise = prodFetcher(String(numericMetroId));\n  } else {\n    const loadBundleAsync = global[`${__METRO_GLOBAL_PREFIX__}__loadBundleAsync`];\n    loadBundlePromise = loadBundleAsync(id);\n  }\n\n  return loadBundlePromise\n    .then(() => {\n      const m = __r(numericMetroId);\n      rscClientModuleCache.set(id, m);\n      if (!m) {\n        throw new Error(`Module \"${id}\" not found`);\n      }\n      // NOTE: DO NOT LOG MODULES AS THIS BREAKS REACT NATIVE\n      // console.log(`Remote client module \"${id}\" >`, m);\n      // debugger;\n      return m;\n    })\n    .catch((e) => {\n      console.error('error loading RSC module:', id, e);\n      throw e;\n    });\n};\n\nglobalThis.__webpack_require__ = (id) => rscClientModuleCache.get(id);\n"]}