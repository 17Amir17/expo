{"version":3,"file":"getRoutes.js","sourceRoot":"","sources":["../../src/global-state/getRoutes.ts"],"names":[],"mappings":"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","sourcesContent":["import { Platform } from 'react-native';\n\nimport { DynamicConvention, RouteNode } from '../Route';\nimport {\n  matchDeepDynamicRouteName,\n  matchDynamicName,\n  matchGroupName,\n  removeSupportedExtensions,\n} from '../matchers';\nimport { RequireContext } from '../types';\n\nexport type Options = {\n  ignore?: RegExp[];\n  preserveApiRoutes?: boolean;\n  ignoreRequireErrors?: boolean;\n  ignoreEntryPoints?: boolean;\n  unstable_platformExtensions?: boolean;\n  /* Used using testing for easier comparison */\n  unstable_stripLoadRoute?: boolean;\n  unstable_improvedErrorMessages?: boolean;\n};\n\ntype DirectoryNode = {\n  layout?: RouteNode[];\n  files: Map<string, RouteNode[]>;\n  subdirectories: Map<string, DirectoryNode>;\n};\n\nconst validPlatforms = new Set(['android', 'ios', 'windows', 'osx', 'native', 'web']);\n\n/** Given a Metro context module, return an array of nested routes. */\nexport function getRoutes(contextModule: RequireContext, options: Options = {}): RouteNode | null {\n  const { directoryTree, hasRoutes, hasLayout } = getDirectoryTree(contextModule, options);\n\n  // If there are no routes\n  if (!hasLayout && !hasRoutes) {\n    return null;\n  }\n\n  // Only include the sitemap if there are routes.\n  if (hasRoutes) {\n    appendSitemapRoute(directoryTree);\n  }\n\n  appendNotFoundRoute(directoryTree);\n  return hoistRoutesToNearestLayout(directoryTree, options);\n}\n\nfunction getDirectoryTree(contextModule: RequireContext, options: Options) {\n  const ignoreList = getIgnoreList(options);\n  let hasRoutes = false;\n  let hasLayout = false;\n\n  const directory: DirectoryNode = {\n    files: new Map(),\n    subdirectories: new Map(),\n  };\n\n  for (const filePath of contextModule.keys()) {\n    if (ignoreList.some((regex) => regex.test(filePath))) {\n      continue;\n    }\n\n    const meta = getFileMeta(filePath, options);\n\n    // This is a file that should be ignored. e.g maybe it has an invalid platform\n    if (meta.specificity < 0) {\n      continue;\n    }\n\n    const leaves: DirectoryNode[] = [];\n    for (const key of extrapolateGroups(meta.key)) {\n      let node = directory;\n      const subdirectoryParts = key.replace(meta.filename, '').split('/').filter(Boolean);\n\n      for (const part of subdirectoryParts) {\n        let child = node.subdirectories.get(part);\n        if (!child) {\n          child = {\n            files: new Map(),\n            subdirectories: new Map(),\n          };\n          node.subdirectories.set(part, child);\n        }\n        node = child;\n      }\n      leaves.push(node);\n    }\n\n    const node: RouteNode = {\n      loadRoute() {\n        if (options.ignoreRequireErrors) {\n          try {\n            return contextModule(filePath);\n          } catch {\n            return {};\n          }\n        } else {\n          return contextModule(filePath);\n        }\n      },\n      contextKey: filePath,\n      entryPoints: [filePath],\n      route: meta.name, // This is overwritten during hoisting\n      dynamic: null, // This is calculated during hoisting\n      children: [],\n    };\n\n    if (meta.isLayout) {\n      hasLayout ||= leaves.length > 0;\n      for (const leaf of leaves) {\n        leaf.layout ??= [];\n\n        const existing = leaf.layout[meta.specificity];\n\n        if (existing) {\n          throw new Error(\n            `The layouts \"${filePath}\" and ${existing.contextKey} conflict in \"${meta.dirname}. Please remove one of these files.`\n          );\n        } else {\n          leaf.layout[meta.specificity] = node;\n        }\n      }\n    } else if (meta.isApi) {\n      // TODO\n    } else {\n      hasRoutes ||= leaves.length > 0;\n      for (const leaf of leaves) {\n        let nodes = leaf.files.get(meta.name);\n\n        if (!nodes) {\n          nodes = [];\n          leaf.files.set(meta.name, nodes);\n        }\n\n        const existing = nodes[meta.specificity];\n\n        if (process.env.NODE_ENV === 'production') {\n          nodes[meta.specificity] = node;\n        } else {\n          if (existing) {\n            if (options.unstable_improvedErrorMessages) {\n              throw new Error(\n                `The routes \"${filePath}\" and ${existing.contextKey} conflict in \"${meta.dirname}. Please remove one of these files.`\n              );\n            } else {\n              throw new Error(\n                `Multiple files match the route name \"./${meta.filepathWithoutExtensions}\".`\n              );\n            }\n          } else {\n            nodes[meta.specificity] = node;\n          }\n        }\n      }\n    }\n  }\n\n  if (!directory.layout) {\n    directory.layout = [\n      {\n        loadRoute: () => ({\n          default: (require('./views/Navigator') as typeof import('../views/Navigator'))\n            .DefaultNavigator,\n        }),\n        // Generate a fake file name for the directory\n        contextKey: './_layout.tsx',\n        entryPoints: ['expo-router/build/views/Navigator.js'],\n        route: '',\n        generated: true,\n        dynamic: null,\n        children: [],\n      },\n    ];\n  }\n\n  return { hasRoutes, hasLayout, directoryTree: directory };\n}\n\nfunction appendSitemapRoute(directory: DirectoryNode) {\n  if (directory.files.has('_sitemap')) {\n    return;\n  }\n\n  directory.files.set('_sitemap', [\n    {\n      loadRoute() {\n        const { Sitemap, getNavOptions } = require('./views/Sitemap');\n        return { default: Sitemap, getNavOptions };\n      },\n      route: '_sitemap',\n      contextKey: './_sitemap.tsx',\n      generated: true,\n      internal: true,\n      dynamic: null,\n      children: [],\n      entryPoints: ['expo-router/build/views/Sitemap.js'],\n    },\n  ]);\n}\n\nfunction appendNotFoundRoute(directory: DirectoryNode) {\n  if (directory.files.has('+not-found')) {\n    return;\n  }\n\n  directory.files.set('+not-found', [\n    {\n      loadRoute() {\n        return { default: require('../views/Unmatched').Unmatched };\n      },\n      route: '+not-found',\n      contextKey: './+not-found.tsx',\n      generated: true,\n      internal: true,\n      dynamic: [{ name: '+not-found', deep: true, notFound: true }],\n      children: [],\n      entryPoints: ['expo-router/build/views/Unmatched.js'],\n    },\n  ]);\n}\n\nfunction hoistRoutesToNearestLayout(\n  directory: DirectoryNode,\n  options: Options,\n  parent?: RouteNode,\n  entryPoints: string[] = [],\n  pathToRemove = ''\n) {\n  if (directory.layout) {\n    const layout = getMostSpecific(directory.layout);\n    if (parent) {\n      parent.children.push(layout);\n    }\n\n    parent = layout;\n    const newRoute = parent.route.replace(pathToRemove, '');\n    pathToRemove = parent.route ? `${parent.route}/` : '';\n    parent.route = newRoute;\n\n    parent.dynamic = generateDynamic(parent.route);\n\n    if (parent.entryPoints) {\n      entryPoints = [...entryPoints, ...parent.entryPoints];\n      // Layouts never have entryPoints\n      delete parent.entryPoints;\n    }\n\n    if (options.unstable_stripLoadRoute) {\n      delete (parent as any).loadRoute;\n    }\n  }\n\n  // This should never occur, but it makes the type system happy\n  if (!parent) return null;\n\n  for (const routes of directory.files.values()) {\n    const route = getMostSpecific(routes);\n    const name = route.route.replace(pathToRemove, '');\n\n    const childEntryPoints = new Set(entryPoints);\n    if (route.entryPoints?.[0]) {\n      childEntryPoints.add(route.entryPoints[0]);\n    }\n\n    const child = {\n      ...route,\n      route: name,\n      dynamic: generateDynamic(name),\n      entryPoints: [...childEntryPoints],\n    };\n\n    if (options.ignoreEntryPoints) {\n      delete (child as any).entryPoints;\n    }\n\n    if (options.unstable_stripLoadRoute) {\n      delete (child as any).loadRoute;\n    }\n\n    parent.children.push(child);\n  }\n\n  for (const child of directory.subdirectories.values()) {\n    hoistRoutesToNearestLayout(child, options, parent, entryPoints, pathToRemove);\n  }\n\n  return parent;\n}\n\nfunction getMostSpecific(routes: RouteNode[]) {\n  const route = routes[routes.length - 1];\n\n  if (!routes[0]) {\n    throw new Error(`${route.contextKey} does not contain a non-platform fallback route`);\n  }\n\n  return routes[routes.length - 1];\n}\n\nfunction getFileMeta(key: string, options: Options) {\n  // Remove the leading `./`\n  key = key.replace(/^\\.\\//, '');\n\n  const parts = key.split('/');\n  const dirname = parts.slice(0, -1).join('/');\n  const filename = parts[parts.length - 1];\n  const filepathWithoutExtensions = removeSupportedExtensions(key);\n  const filenameWithoutExtensions = removeSupportedExtensions(filename);\n  const isLayout = filename.startsWith('_layout.');\n  const isApi = key.match(/\\+api\\.[jt]sx?$/);\n  let name = isLayout\n    ? filepathWithoutExtensions.replace(/\\/?_layout$/, '')\n    : filepathWithoutExtensions;\n\n  if (filenameWithoutExtensions.startsWith('(') && filenameWithoutExtensions.endsWith(')')) {\n    if (options.unstable_improvedErrorMessages) {\n      throw new Error(`Invalid route ./${key}. Routes cannot end with \\`(group)\\` syntax`);\n    } else {\n      throw new Error(\n        `Using deprecated Layout Route format: Move \\`./app/${key}\\` to \\`./app/${filepathWithoutExtensions}/_layout.js\\``\n      );\n    }\n  }\n\n  const filenameParts = filenameWithoutExtensions.split('.');\n  const platform = filenameParts[filenameParts.length - 1];\n  const hasPlatform = validPlatforms.has(platform);\n\n  let specificity = 0;\n  if (options.unstable_platformExtensions && hasPlatform) {\n    if (platform === Platform.OS) {\n      specificity = 2;\n    } else if (platform === 'native' && Platform.OS !== 'web') {\n      specificity = 1;\n    } else {\n      specificity = -1;\n    }\n    name = name.replace(new RegExp(`.${platform}$`), '');\n  } else if (hasPlatform) {\n    if (validPlatforms.has(platform)) {\n      throw new Error('invalid route with platform extension');\n    }\n  }\n\n  return {\n    key,\n    name,\n    specificity,\n    dirname,\n    filename,\n    isLayout,\n    isApi,\n    filepathWithoutExtensions,\n  };\n}\n\nfunction getIgnoreList(options?: Options) {\n  const ignore: RegExp[] = [/^\\.\\/\\+html\\.[tj]sx?$/, ...(options?.ignore ?? [])];\n  if (options?.preserveApiRoutes !== true) {\n    ignore.push(/\\+api\\.[tj]sx?$/);\n  }\n  return ignore;\n}\n\nfunction extrapolateGroups(key: string, keys: Set<string> = new Set()): Set<string> {\n  const match = matchGroupName(key);\n\n  if (!match) {\n    keys.add(key);\n    return keys;\n  }\n\n  const groups = match?.split(',');\n  const groupsSet = new Set(groups);\n\n  if (groupsSet.size !== groups.length) {\n    throw new Error(`Array syntax cannot contain duplicate group name \"${groups}\" in \"${key}\".`);\n  }\n\n  if (groups.length === 1) {\n    keys.add(key);\n    return keys;\n  }\n\n  for (const group of groups) {\n    extrapolateGroups(key.replace(match, group.trim()), keys);\n  }\n\n  return keys;\n}\n\nfunction generateDynamic(path: string) {\n  const dynamic: RouteNode['dynamic'] = path\n    .split('/')\n    .map((part) => {\n      if (part === '+not-found') {\n        return {\n          name: '+not-found',\n          deep: true,\n          notFound: true,\n        };\n      }\n\n      const deepDynamicName = matchDeepDynamicRouteName(part);\n      const dynamicName = deepDynamicName ?? matchDynamicName(part);\n\n      if (!dynamicName) return null;\n      return { name: dynamicName, deep: !!deepDynamicName };\n    })\n    .filter((part): part is DynamicConvention => !!part);\n\n  if (dynamic?.length === 0) {\n    return null;\n  }\n\n  return dynamic;\n}\n"]}