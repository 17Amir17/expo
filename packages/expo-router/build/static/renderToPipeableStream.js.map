{"version":3,"file":"renderToPipeableStream.js","sourceRoot":"","sources":["../../src/static/renderToPipeableStream.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright Â© 2023 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport path from 'path';\nimport { ctx } from '../../_ctx';\n\ntype WebpackManifestSubType = {\n  // \"id\": \"./src/index.client.js\",\n  id: string;\n  // ['main']\n  chunks: string[];\n  // \"name\": \"\"\n  name: string;\n};\n// type WebpackManifest = {\n//   // \"file:///Users/evanbacon/Documents/GitHub/server-components-demo/src/index.client.js\"\n//   [filepath: string]: {\n//     // \"*\"\n//     [name: string]: WebpackManifestSubType;\n//   };\n// };\n\n// NOTE: MUST MATCH THE IMPL IN ExpoMetroConfig.ts\nfunction stringToHash(str: string): number {\n  let hash = 0;\n  if (str.length === 0) return hash;\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n    hash |= 0; // Convert to 32bit integer\n  }\n  return hash;\n}\n\nexport const fileURLToFilePath = (fileURL: string) => {\n  if (!fileURL.startsWith('file://')) {\n    throw new Error('Not a file URL');\n  }\n  return decodeURI(fileURL.slice('file://'.length));\n};\n\nexport async function renderToPipeableStream(\n  { $$route: route, ...props }: { $$route: string },\n  { mode, url, serverRoot }: { mode: string; serverRoot: string; url: URL }\n  // moduleMap: WebpackManifest\n) {\n  const { renderToReadableStream } = require('react-server-dom-webpack/server.edge');\n\n  if (!ctx.keys().includes(route)) {\n    throw new Error(\n      'Failed to find route: ' + route + '. Expected one of: ' + ctx.keys().join(', ')\n    );\n  }\n\n  const { default: Component } = await ctx(route);\n  console.log('Initial component', Component, route);\n  // const node = getNodeFinder()(route);\n\n  // if (node?._route) {\n\n  // const { default: Component } = node._route.loadRoute();\n  // const rsc = renderToPipeableStream(\n  //   // TODO: Does this support async?\n  //   // <Component {...props} />,\n  //   React.createElement(Component, props),\n  //   moduleMap\n  // );\n\n  // return await pipeTo(rsc.pipe);\n\n  // method === 'GET'\n  // const renderContext: RenderContext = {\n  //   rerender: () => {\n  //     throw new Error('Cannot rerender');\n  //   },\n  //   context,\n  // };\n\n  const isDev = mode === 'development';\n\n  if (isDev) {\n    url.searchParams.set('modulesOnly', 'true');\n    url.searchParams.set('runModule', 'false');\n\n    // TODO: Maybe add a new param to execute and return the module exports.\n  }\n\n  const resolveClientEntry = (\n    file: string // filePath or fileURL\n  ) => {\n    if (isDev) {\n      const filePath = file.startsWith('file://') ? fileURLToFilePath(file) : file;\n      const metroOpaqueId = stringToHash(filePath);\n      const relativeFilePath = path.relative(serverRoot, filePath);\n      // TODO: May need to remove the original extension.\n      url.pathname = relativeFilePath + '.bundle';\n      // Pass the Metro runtime ID back in the hash so we can emulate Webpack requiring.\n      url.hash = String(metroOpaqueId);\n    } else {\n      if (!file.startsWith('@id/')) {\n        throw new Error('Unexpected client entry in PRD');\n      }\n      url.pathname = file.slice('@id/'.length);\n    }\n    return url.toString();\n  };\n\n  const bundlerConfig = new Proxy(\n    {},\n    {\n      get(_target, encodedId: string) {\n        console.log('Get manifest entry:', encodedId);\n        // const [file, name] = encodedId.split('#') as [string, string];\n        // return moduleMap[encodedId];\n\n        const [\n          // File is the on-disk location of the module, this is injected during the \"use client\" transformation (babel).\n          file,\n          // The name of the import (e.g. \"default\" or \"\")\n          name,\n        ] = encodedId.split('#') as [string, string];\n\n        // We'll augment the file path with the incoming RSC request which will forward the metro props required to make a cache hit, e.g. platform=web&...\n        // This is similar to how we handle lazy bundling.\n        const id = resolveClientEntry(file);\n        console.log('Returning server module:', id, 'for', encodedId);\n        // moduleIdCallback?.(id);\n        return { id, chunks: [id], name, async: true };\n      },\n    }\n  );\n\n  //   moduleMap\n\n  const elements = React.createElement(Component, props);\n  return renderToReadableStream(elements, bundlerConfig);\n\n  // return rsc.pipe;\n  // }\n\n  // throw new Error('Failed to render server component at: ' + route);\n}\n\nimport { Writable } from 'stream';\n\nasync function pipeTo(pipe) {\n  const rscStream = new ReadableStream({\n    start(controller) {\n      pipe(\n        new Writable({\n          write(chunk, encoding, callback) {\n            controller.enqueue(chunk);\n            callback();\n          },\n          destroy(error, callback) {\n            if (error) {\n              controller.error(error);\n            } else {\n              controller.close();\n            }\n            callback(error);\n          },\n        })\n      );\n    },\n  });\n\n  const res = await rscStream.getReader().read();\n  return res.value.toString().trim();\n}\n"]}