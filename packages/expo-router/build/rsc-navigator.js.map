{"version":3,"file":"rsc-navigator.js","sourceRoot":"","sources":["../src/rsc-navigator.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;AACb,2CAAuC;AACvC,kDAAsE;AAEtE,qFAAqE;AACrE,8DAAsE;AAGtE,SAAwB,gBAAgB,CAAC,EACvC,OAAO,GAAG,UAAG,EACb,QAAQ,EAAE,eAAe;AACzB,0CAA0C;AAC1C,QAAQ,GACT;IACC,MAAM,KAAK,GAAG,IAAA,sCAAuB,EAAC,OAAO,EAAE,eAAe,CAAC,CAAC;IAEhE,oCAAoC;IACpC,8BAA8B;IAC9B,kDAAkD;IAClD,+DAA+D;IAC/D,eAAe;IACf,2BAA2B;IAC3B,uBAAuB;IACvB,4BAA4B;IAC5B,SAAS;IACT,aAAa;IACb,4DAA4D;IAC5D,mBAAmB;IACnB,MAAM;IACN,IAAI;IAEJ,yCAAyC;IAEzC,OAAO,CACL,CAAC,6BAA2B,CAC1B,GAAG,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,CACzB,YAAY,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,CACjC,OAAO,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;IACvB,wCAAwC;IACxC,aAAa,CAAC,CAAC;YACb,OAAO,EAAE,KAAK;SACf,CAAC,CACF;MAAA,CAAC,QAAQ,CACX;IAAA,EAAE,6BAA2B,CAAC,CAC/B,CAAC;AACJ,CAAC;AArCD,mCAqCC","sourcesContent":["'use client';\nimport { ctx } from 'expo-router/_ctx';\nimport React, { Fragment, FunctionComponent, ReactNode } from 'react';\n\nimport UpstreamNavigationContainer from './fork/NavigationContainer';\nimport { useInitializeExpoRouter } from './global-state/router-store';\nimport { SplashScreen } from './views/Splash';\n\nexport default function ContextNavigator({\n  context = ctx,\n  location: initialLocation,\n  //   wrapper: WrapperComponent = Fragment,\n  children,\n}) {\n  const store = useInitializeExpoRouter(context, initialLocation);\n\n  // if (store.shouldShowTutorial()) {\n  //   SplashScreen.hideAsync();\n  //   if (process.env.NODE_ENV === 'development') {\n  //     const Tutorial = require('./onboard/Tutorial').Tutorial;\n  //     return (\n  //       <WrapperComponent>\n  //         <Tutorial />\n  //       </WrapperComponent>\n  //     );\n  //   } else {\n  //     // Ensure tutorial styles are stripped in production.\n  //     return null;\n  //   }\n  // }\n\n  // const Component = store.rootComponent;\n\n  return (\n    <UpstreamNavigationContainer\n      ref={store.navigationRef}\n      initialState={store.initialState}\n      linking={store.linking}\n      // onUnhandledAction={onUnhandledAction}\n      documentTitle={{\n        enabled: false,\n      }}>\n      {children}\n    </UpstreamNavigationContainer>\n  );\n}\n"]}