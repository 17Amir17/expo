{"version":3,"file":"routes-manifest.js","sourceRoot":"","sources":["../src/routes-manifest.ts"],"names":[],"mappings":"AAAA,sBAAsB;AACtB,OAAO,EAAE,iBAAiB,EAAE,MAAM,wBAAwB,CAAC;AAC3D,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AACxC,OAAO,EAAE,GAAG,EAAE,MAAM,SAAS,CAAC;AA8B9B,MAAM,CAAC,KAAK,UAAU,oBAAoB;IACxC,MAAM,SAAS,GAAG,SAAS,CAAC,GAAG,EAAE;QAC/B,iBAAiB,EAAE,IAAI;QACvB,mBAAmB,EAAE,IAAI;KAC1B,CAAC,CAAC;IAEH,IAAI,CAAC,SAAS,EAAE;QACd,OAAO,IAAI,CAAC;KACb;IACD,OAAO,iBAAiB,CAAC,SAAS,CAAC,CAAC;AACtC,CAAC","sourcesContent":["// no relative imports\nimport { getServerManifest } from './getMatchableManifest';\nimport { getRoutes } from './getRoutes';\nimport { ctx } from '../_ctx';\n\nexport type RouteInfo<TRegex = string> = {\n  // dynamic:\n  //   | {\n  //       name: string;\n  //       deep: boolean;\n  //     }[]\n  //   | null;\n  // generated: boolean | undefined;\n  // type: string;\n  // file: string;\n  // regex: TRegex;\n  // src: string;\n\n  page: string;\n  namedRegex: TRegex;\n  routeKeys: { [named: string]: string };\n};\n\nexport type ExpoRoutesManifestV1<TRegex = string> = {\n  // functions: RouteInfo<TRegex>[];\n  // staticHtml: RouteInfo<TRegex>[];\n  // staticHtmlPaths: string[];\n\n  dynamicRoutes: RouteInfo<TRegex>[];\n  staticRoutes: RouteInfo<TRegex>[];\n  notFoundRoutes: RouteInfo<TRegex>[];\n};\n\nexport async function createRoutesManifest(): Promise<any> {\n  const routeTree = getRoutes(ctx, {\n    preserveApiRoutes: true,\n    ignoreRequireErrors: true,\n  });\n\n  if (!routeTree) {\n    return null;\n  }\n  return getServerManifest(routeTree);\n}\n"]}