{"version":3,"file":"BlurView.web.js","sourceRoot":"","sources":["../src/BlurView.web.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,IAAI,EAAE,MAAM,cAAc,CAAC;AAGpC,OAAO,kBAAkB,MAAM,sBAAsB,CAAC;AACtD,OAAO,wBAAwB,MAAM,4BAA4B,CAAC;AAClE,OAAO,aAAa,MAAM,iBAAiB,CAAC;AAE5C,MAAM,UAAU,GAAG,wBAAwB,EAAE,CAAC;AAE9C,MAAM,UAAU,UAAU,CAAC,EAAE,IAAI,GAAG,SAAS,EAAE,SAAS,GAAG,EAAE,EAAE,KAAK,EAAE,GAAG,KAAK,EAAiB;IAC7F,MAAM,SAAS,GAAG,YAAY,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;IAEpD,MAAM,aAAa,GACjB,UAAU;QACV,aAAa,CAAC,SAAS,CAAC;QACxB,mDAAmD;QACnD,sDAAsD;QACtD,UAAU,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAEvE,IAAI,UAAU,IAAI,aAAa,CAAC,SAAS,CAAC,EAAE;QAC1C,OAAO,oBAAC,UAAU,CAAC,OAAO,CAAC,IAAI,OAAK,KAAK,EAAE,KAAK,EAAE,CAAC,KAAK,EAAE,SAAS,EAAE,aAAa,CAAC,GAAI,CAAC;KACzF;IACD,OAAO,oBAAC,IAAI,OAAK,KAAK,EAAE,KAAK,EAAE,CAAC,KAAK,EAAE,SAAS,CAAC,GAAI,CAAC;AACxD,CAAC;AAED,uGAAuG;AACvG,4EAA4E;AAC5E,MAAM,CAAC,OAAO,OAAO,QAAS,SAAQ,KAAK,CAAC,SAAwB;IAClE,MAAM;QACJ,OAAO,oBAAC,UAAU,OAAK,IAAI,CAAC,KAAK,GAAI,CAAC;IACxC,CAAC;CACF;AAED,SAAS,eAAe;IACtB,gEAAgE;IAChE,yFAAyF;IACzF,OAAO,CACL,OAAO,GAAG,KAAK,WAAW;QAC1B,CAAC,GAAG,CAAC,QAAQ,CAAC,yBAAyB,EAAE,WAAW,CAAC;YACnD,GAAG,CAAC,QAAQ,CAAC,iBAAiB,EAAE,WAAW,CAAC,CAAC,CAChD,CAAC;AACJ,CAAC;AAED,SAAS,YAAY,CAAC,EACpB,SAAS,EACT,IAAI,GAIL;IACC,IAAI,cAAc,GAAG,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC;IAC5E,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;IAE/C,MAAM,KAAK,GAA2B;QACpC,eAAe,EAAE,kBAAkB,CAAC,cAAc,EAAE,IAAI,CAAC;KAC1D,CAAC;IAEF,IAAI,eAAe,EAAE,EAAE;QACrB,MAAM,IAAI,GAAG,uBAAuB,cAAc,GAAG,GAAG,KAAK,CAAC;QAC9D,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC;QAC5B,iBAAiB;QACjB,KAAK,CAAC,oBAAoB,GAAG,IAAI,CAAC;KACnC;IAED,OAAO,KAAK,CAAC;AACf,CAAC","sourcesContent":["import * as React from 'react';\nimport { View } from 'react-native';\n\nimport { BlurTint, BlurViewProps, SharedValue } from './BlurView.types';\nimport getBackgroundColor from './getBackgroundColor';\nimport getReanimatedIfAvailable from './getReanimatedIfAvailable';\nimport isSharedValue from './isSharedValue';\n\nconst Reanimated = getReanimatedIfAvailable();\n\nexport function FnBlurView({ tint = 'default', intensity = 50, style, ...props }: BlurViewProps) {\n  const blurStyle = getBlurStyle({ tint, intensity });\n\n  const animatedStyle =\n    Reanimated &&\n    isSharedValue(intensity) &&\n    // Presence of this hook will not change at runtime\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    Reanimated.useAnimatedStyle(() => getBlurStyle({ intensity, tint }));\n\n  if (Reanimated && isSharedValue(intensity)) {\n    return <Reanimated.default.View {...props} style={[style, blurStyle, animatedStyle]} />;\n  }\n  return <View {...props} style={[style, blurStyle]} />;\n}\n\n// Function component if required by reanimated and class-based component is required by React Animated\n// Wrapping function component with class-based component fixes the conflict\nexport default class BlurView extends React.Component<BlurViewProps> {\n  render() {\n    return <FnBlurView {...this.props} />;\n  }\n}\n\nfunction isBlurSupported(): boolean {\n  // https://developer.mozilla.org/en-US/docs/Web/API/CSS/supports\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter#Browser_compatibility\n  return (\n    typeof CSS !== 'undefined' &&\n    (CSS.supports('-webkit-backdrop-filter', 'blur(1px)') ||\n      CSS.supports('backdrop-filter', 'blur(1px)'))\n  );\n}\n\nfunction getBlurStyle({\n  intensity,\n  tint,\n}: {\n  intensity: number | SharedValue<number>;\n  tint: BlurTint;\n}): Record<string, string> {\n  let intensityValue = isSharedValue(intensity) ? intensity.value : intensity;\n  intensityValue = Math.min(intensityValue, 100);\n\n  const style: Record<string, string> = {\n    backgroundColor: getBackgroundColor(intensityValue, tint),\n  };\n\n  if (isBlurSupported()) {\n    const blur = `saturate(180%) blur(${intensityValue * 0.2}px)`;\n    style.backdropFilter = blur;\n    // Safari support\n    style.WebkitBackdropFilter = blur;\n  }\n\n  return style;\n}\n"]}