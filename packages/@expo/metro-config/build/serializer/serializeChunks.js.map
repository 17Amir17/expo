{"version":3,"file":"serializeChunks.js","names":["_assert","data","_interopRequireDefault","require","_getAssets","_sourceMapString","_bundleToString","_countLines","_path","_pathToRegexp","_jscSafeUrl","_exportHermes","_exportPath","_baseJSBundle","_getCssDeps","obj","__esModule","default","graphToSerialAssetsAsync","config","serializeChunkOptions","props","_config$serializer","_config$transformer$a","_config$transformer","_getPlatformOption","_config$transformer$p","_config$transformer2","entryFile","preModules","graph","options","cssDeps","getCssSerialAssets","dependencies","projectRoot","processModuleFilter","rscClientReferenceManifest","forEach","module","output","clientReferences","_options$serverRoot","entry","path","relative","serverRoot","exports","exp","key","currentUrl","URL","jscSafeUrl","toNormalUrl","sourceUrl","console","log","pathname","replace","searchParams","delete","set","id","chunks","dev","toString","name","rscManifestChunkTemplate","find","endsWith","rscAsset","code","JSON","stringify","lineCount","countLines","filename","metadata","originFilename","source","type","Set","test","pathToRegExp","map","chunkSettings","gatherChunks","entryChunk","values","chunk","isAsync","hasAbsolutePath","dep","deps","has","toCompare","commonDependencies","length","shift","chunk2","commonDeps","filter","push","commonDependenciesUnique","commonChunk","Chunk","chunkIdForModules","requiredChunks","add","jsAssets","serializeChunksAsync","serializer","metroAssets","getMetroAssets","assetPlugins","transformer","platform","getPlatformOption","publicPath","artifacts","Boolean","rscManifest","assets","constructor","entries","isVendor","getPlatform","assert","transformOptions","getFilename","src","getExportPathForDependencyWithOptions","getFilenameForConfig","serializerConfig","serializeToCodeWithTemplates","serializerOptions","includeSourceMaps","sourceMapUrl","undefined","_serializerConfig$get","_serializerConfig$get2","jsSplitBundle","baseJSBundleWithDependencies","runBeforeMainModule","getModulesRunBeforeMainModule","call","runModule","modulesOnly","size","baseUrl","getBaseUrlOption","splitChunks","getSplitChunksOption","skipWrapping","computedAsyncModulePaths","bundleToString","absolutePath","some","getComputedPathsForAsyncDependencies","includeAsyncPaths","dependency","asyncType","chunkContainingModule","moduleIdName","getAdjustedSourceMapUrl","_this$options$seriali","_this$options$sourceM","inlineSourceMap","_this$options$sourceM2","isAbsolute","isAbsoluteBaseUrl","match","adjustedSourceMapUrl","startsWith","parsed","href","error","serializeToCode","_this$getAdjustedSour","serializeToAssetsAsync","includeBytecode","jsCode","relativeEntry","outputFile","jsAsset","requires","modules","getSortedModules","createModuleId","_this$options$serverR","sourceMap","sourceMapString","excludeSource","isHermesEnabled","adjustedSource","mapName","hermesBundleOutput","buildHermesBundleAsync","minify","hbc","sourcemap","supportsBytecode","_this$graph$transform","customTransformOptions","engine","getEntryModulesForChunkSettings","settings","sort","join","entryModules","existingChunks","includes","includeModule","entryModule","get","chunksArray","Promise","all","a","b"],"sources":["../../src/serializer/serializeChunks.ts"],"sourcesContent":["/**\n * Copyright Â© 2023 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport assert from 'assert';\nimport {\n  AssetData,\n  MetroConfig,\n  MixedOutput,\n  Module,\n  ReadOnlyGraph,\n  SerializerOptions,\n} from 'metro';\nimport getMetroAssets from 'metro/src/DeltaBundler/Serializers/getAssets';\nimport sourceMapString from 'metro/src/DeltaBundler/Serializers/sourceMapString';\nimport bundleToString from 'metro/src/lib/bundleToString';\nimport countLines from 'metro/src/lib/countLines';\nimport { ConfigT, SerializerConfigT } from 'metro-config';\nimport path from 'path';\nimport pathToRegExp from 'path-to-regexp';\nimport jscSafeUrl from 'jsc-safe-url';\n\nimport { buildHermesBundleAsync } from './exportHermes';\nimport { getExportPathForDependencyWithOptions } from './exportPath';\nimport {\n  ExpoSerializerOptions,\n  baseJSBundleWithDependencies,\n  getBaseUrlOption,\n  getPlatformOption,\n  getSplitChunksOption,\n} from './fork/baseJSBundle';\nimport { getCssSerialAssets } from './getCssDeps';\nimport { SerialAsset } from './serializerAssets';\n\ntype RscClientReference = {\n  /**\n   * ??\n   * `\"/dist/_expo/chunk/client/index.js\"`\n   */\n  id: string;\n  /**\n   * Name of chunk location on server, e.g. `\"/dist/_expo/chunk/client/index.js\"`\n   * In development, we'll use a metro lazy chunk id, e.g. `/client/client/index.bundle?platform=web`\n   */\n  chunks: string[];\n  /** Name of export, e.g. `\"default\"` */\n  name: string;\n};\n\n/**\n * Key is `<id>#<name>`\n * {\n *   \"/components/timer.tsx#default\": {\n *     id: \"/components/timer.js\",\n *     chunks: [ \"/components/timer.js\" ],\n *     name: \"default\"\n *   }\n * }\n */\ntype RscManifest = Record<string, RscClientReference>;\n\ntype Serializer = NonNullable<ConfigT['serializer']['customSerializer']>;\n\ntype SerializerParameters = Parameters<Serializer>;\n\ntype ChunkSettings = {\n  /** Match the initial modules. */\n  test: RegExp;\n};\n\nexport type SerializeChunkOptions = {\n  includeSourceMaps: boolean;\n  includeBytecode: boolean;\n};\n\nexport async function graphToSerialAssetsAsync(\n  config: MetroConfig,\n  serializeChunkOptions: SerializeChunkOptions,\n  ...props: SerializerParameters\n): Promise<{ artifacts: SerialAsset[] | null; rscManifest: RscManifest; assets: AssetData[] }> {\n  const [entryFile, preModules, graph, options] = props;\n\n  const cssDeps = getCssSerialAssets<MixedOutput>(graph.dependencies, {\n    projectRoot: options.projectRoot,\n    processModuleFilter: options.processModuleFilter,\n  });\n\n  const rscClientReferenceManifest: RscManifest = {};\n\n  // Create client reference manifest for server components\n  props[2].dependencies.forEach((module) => {\n    module.output.forEach((output) => {\n      // @ts-expect-error\n      const clientReferences = output.data.clientReferences as unknown as {\n        entryPoint: string;\n        exports: string[];\n      } | null;\n\n      if (clientReferences) {\n        const entry = '/' + path.relative(options.serverRoot ?? options.projectRoot, module.path);\n        clientReferences.exports.forEach((exp) => {\n          const key = `${entry}#${exp}`;\n\n          const currentUrl = new URL(jscSafeUrl.toNormalUrl(options.sourceUrl!));\n\n          console.log('options.sourceUrl', options.sourceUrl);\n\n          currentUrl.pathname = entry.replace(/\\.([tj]sx?|[mc]js)$/, '.bundle');\n\n          currentUrl.searchParams.delete('serializer.output');\n\n          currentUrl.searchParams.set('modulesOnly', 'true');\n          // TODO: Add params to indicate that `module.exports = __r()` should be used as the run module statement.\n          currentUrl.searchParams.set('runModule', 'false');\n\n          rscClientReferenceManifest[key] = {\n            id: entry,\n            chunks: [options.dev ? currentUrl.toString() : 'TODO-PRODUCTION-CHUNK-NAMES'],\n            name: exp,\n          };\n        });\n      }\n    });\n  });\n\n  const rscManifestChunkTemplate = preModules.find((module) =>\n    module.path.endsWith('.expo/metro/rsc-manifest.js')\n  );\n\n  let rscAsset: SerialAsset | null = null;\n  if (rscManifestChunkTemplate) {\n    rscManifestChunkTemplate.output.forEach((output) => {\n      output.data.code = output.data.code.replace(\n        /\\$\\$expo_rsc_manifest\\s?=\\s?{}/,\n        `$$$expo_rsc_manifest = ${JSON.stringify(rscClientReferenceManifest)} /* registered */`\n      );\n      // @ts-expect-error\n      output.data.lineCount = countLines(output.data.code);\n    });\n\n    rscAsset = {\n      filename: '/dist/_expo/rsc-manifest.js',\n      metadata: {},\n      originFilename: '/rsc-manifest.js',\n      source: JSON.stringify(rscClientReferenceManifest),\n      type: 'json',\n    };\n  }\n\n  // Create chunks for splitting.\n  const chunks = new Set<Chunk>();\n\n  [\n    {\n      test: pathToRegExp(entryFile),\n    },\n  ].map((chunkSettings) => gatherChunks(chunks, chunkSettings, preModules, graph, options, false));\n\n  // Get the common modules and extract them into a separate chunk.\n  const entryChunk = [...chunks.values()].find(\n    (chunk) => !chunk.isAsync && chunk.hasAbsolutePath(entryFile)\n  );\n  if (entryChunk) {\n    for (const chunk of chunks.values()) {\n      if (chunk !== entryChunk && chunk.isAsync) {\n        for (const dep of chunk.deps.values()) {\n          if (entryChunk.deps.has(dep)) {\n            // Remove the dependency from the async chunk since it will be loaded in the main chunk.\n            chunk.deps.delete(dep);\n          }\n        }\n      }\n    }\n\n    const toCompare = [...chunks.values()];\n\n    const commonDependencies = [];\n\n    while (toCompare.length) {\n      const chunk = toCompare.shift()!;\n      for (const chunk2 of toCompare) {\n        if (chunk !== chunk2 && chunk.isAsync && chunk2.isAsync) {\n          const commonDeps = [...chunk.deps].filter((dep) => chunk2.deps.has(dep));\n\n          for (const dep of commonDeps) {\n            chunk.deps.delete(dep);\n            chunk2.deps.delete(dep);\n          }\n\n          commonDependencies.push(...commonDeps);\n        }\n      }\n    }\n\n    // Add common chunk if one exists.\n    if (commonDependencies.length) {\n      const commonDependenciesUnique = [...new Set(commonDependencies)];\n      const commonChunk = new Chunk(\n        chunkIdForModules(commonDependenciesUnique),\n        commonDependenciesUnique,\n        graph,\n        options,\n        false,\n        true\n      );\n      entryChunk.requiredChunks.add(commonChunk);\n      chunks.add(commonChunk);\n    }\n  }\n\n  const jsAssets = await serializeChunksAsync(\n    chunks,\n    config.serializer ?? {},\n    serializeChunkOptions\n  );\n\n  // TODO: Convert to serial assets\n  // TODO: Disable this call dynamically in development since assets are fetched differently.\n  const metroAssets = (await getMetroAssets(graph.dependencies, {\n    processModuleFilter: options.processModuleFilter,\n    assetPlugins: config.transformer?.assetPlugins ?? [],\n    platform: getPlatformOption(graph, options) ?? 'web',\n    projectRoot: options.projectRoot, // this._getServerRootDir(),\n    publicPath: config.transformer?.publicPath ?? '/',\n  })) as AssetData[];\n\n  return {\n    artifacts: [...jsAssets, ...cssDeps, rscAsset].filter(Boolean) as SerialAsset[],\n    rscManifest: rscClientReferenceManifest,\n    assets: metroAssets,\n  };\n}\n\nclass Chunk {\n  public deps: Set<Module> = new Set();\n  public preModules: Set<Module> = new Set();\n\n  // Chunks that are required to be loaded synchronously before this chunk.\n  // These are included in the HTML as <script> tags.\n  public requiredChunks: Set<Chunk> = new Set();\n\n  constructor(\n    public name: string,\n    public entries: Module<MixedOutput>[],\n    public graph: ReadOnlyGraph<MixedOutput>,\n    public options: ExpoSerializerOptions,\n    public isAsync: boolean = false,\n    public isVendor: boolean = false\n  ) {\n    this.deps = new Set(entries);\n  }\n\n  private getPlatform() {\n    assert(\n      this.graph.transformOptions.platform,\n      \"platform is required to be in graph's transformOptions\"\n    );\n    return this.graph.transformOptions.platform;\n  }\n\n  private getFilename(src: string) {\n    return this.options.dev\n      ? this.name\n      : getExportPathForDependencyWithOptions(this.name, {\n          platform: this.getPlatform(),\n          src,\n          serverRoot: this.options.serverRoot,\n        });\n  }\n\n  private getFilenameForConfig(serializerConfig: Partial<SerializerConfigT>) {\n    return this.getFilename(\n      this.options.dev\n        ? ''\n        : this.serializeToCodeWithTemplates(serializerConfig, {\n            // Disable source maps when creating a sha to reduce the number of possible changes that could\n            // influence the cache hit.\n            serializerOptions: {\n              includeSourceMaps: false,\n            },\n            sourceMapUrl: undefined,\n          })\n    );\n  }\n\n  private serializeToCodeWithTemplates(\n    serializerConfig: Partial<SerializerConfigT>,\n    options: Partial<Parameters<typeof baseJSBundleWithDependencies>[3]> = {}\n  ) {\n    const entryFile = this.name;\n\n    const jsSplitBundle = baseJSBundleWithDependencies(\n      entryFile,\n      [...this.preModules.values()],\n      [...this.deps],\n      {\n        ...this.options,\n        runBeforeMainModule:\n          serializerConfig?.getModulesRunBeforeMainModule?.(\n            path.relative(this.options.projectRoot, entryFile)\n          ) ?? [],\n        runModule: !this.isVendor && !this.isAsync,\n        modulesOnly: this.preModules.size === 0,\n        platform: this.getPlatform(),\n        baseUrl: getBaseUrlOption(this.graph, this.options),\n        splitChunks: getSplitChunksOption(this.graph, this.options),\n        skipWrapping: true,\n        computedAsyncModulePaths: null,\n        ...options,\n      }\n    );\n\n    return bundleToString(jsSplitBundle).code;\n  }\n\n  hasAbsolutePath(absolutePath: string): boolean {\n    return [...this.deps].some((module) => module.path === absolutePath);\n  }\n\n  private getComputedPathsForAsyncDependencies(\n    serializerConfig: Partial<SerializerConfigT>,\n    chunks: Chunk[]\n  ) {\n    const baseUrl = getBaseUrlOption(this.graph, this.options);\n    // Only calculate production paths when all chunks are being exported.\n    if (this.options.includeAsyncPaths) {\n      return null;\n    }\n    const computedAsyncModulePaths: Record<string, string> = {};\n\n    this.deps.forEach((module) => {\n      module.dependencies.forEach((dependency) => {\n        if (dependency.data.data.asyncType === 'async') {\n          const chunkContainingModule = chunks.find((chunk) =>\n            chunk.hasAbsolutePath(dependency.absolutePath)\n          );\n          assert(\n            chunkContainingModule,\n            'Chunk containing module not found: ' + dependency.absolutePath\n          );\n          const moduleIdName = chunkContainingModule.getFilenameForConfig(serializerConfig);\n          computedAsyncModulePaths![dependency.absolutePath] = (baseUrl ?? '/') + moduleIdName;\n        }\n      });\n    });\n    return computedAsyncModulePaths;\n  }\n\n  private getAdjustedSourceMapUrl(serializerConfig: Partial<SerializerConfigT>): string | null {\n    // Metro really only accounts for development, so we'll use the defaults here.\n    if (this.options.dev) {\n      return this.options.sourceMapUrl ?? null;\n    }\n\n    if (this.options.serializerOptions?.includeSourceMaps !== true) {\n      return null;\n    }\n\n    if (this.options.inlineSourceMap || !this.options.sourceMapUrl) {\n      return this.options.sourceMapUrl ?? null;\n    }\n\n    const isAbsolute = this.getPlatform() !== 'web';\n\n    const baseUrl = getBaseUrlOption(this.graph, this.options);\n    const filename = this.getFilenameForConfig(serializerConfig);\n    const isAbsoluteBaseUrl = !!baseUrl?.match(/https?:\\/\\//);\n    const pathname =\n      (isAbsoluteBaseUrl ? '' : baseUrl.replace(/\\/+$/, '')) +\n      '/' +\n      filename.replace(/^\\/+$/, '') +\n      '.map';\n\n    let adjustedSourceMapUrl = this.options.sourceMapUrl;\n    // Metro has lots of issues...\n    if (this.options.sourceMapUrl.startsWith('//localhost')) {\n      adjustedSourceMapUrl = 'http:' + this.options.sourceMapUrl;\n    }\n\n    try {\n      const parsed = new URL(pathname, isAbsoluteBaseUrl ? baseUrl : adjustedSourceMapUrl);\n\n      if (isAbsoluteBaseUrl || isAbsolute) {\n        return parsed.href;\n      }\n\n      return parsed.pathname;\n    } catch (error) {\n      console.error(\n        `Failed to link source maps because the source map URL \"${this.options.sourceMapUrl}\" is corrupt:`,\n        error\n      );\n      return null;\n    }\n  }\n\n  private serializeToCode(serializerConfig: Partial<SerializerConfigT>, chunks: Chunk[]) {\n    return this.serializeToCodeWithTemplates(serializerConfig, {\n      skipWrapping: false,\n      sourceMapUrl: this.getAdjustedSourceMapUrl(serializerConfig) ?? undefined,\n      computedAsyncModulePaths: this.getComputedPathsForAsyncDependencies(serializerConfig, chunks),\n    });\n  }\n\n  async serializeToAssetsAsync(\n    serializerConfig: Partial<SerializerConfigT>,\n    chunks: Chunk[],\n    {\n      includeSourceMaps,\n      includeBytecode,\n    }: { includeSourceMaps?: boolean; includeBytecode?: boolean }\n  ): Promise<SerialAsset[]> {\n    const jsCode = this.serializeToCode(serializerConfig, chunks);\n\n    const relativeEntry = path.relative(this.options.projectRoot, this.name);\n    const outputFile = this.getFilenameForConfig(\n      // Create hash without wrapping to prevent it changing when the wrapping changes.\n      serializerConfig\n    );\n\n    const jsAsset: SerialAsset = {\n      filename: outputFile,\n      originFilename: relativeEntry,\n      type: 'js',\n      metadata: {\n        isAsync: this.isAsync,\n        requires: [...this.requiredChunks.values()].map((chunk) =>\n          chunk.getFilenameForConfig(serializerConfig)\n        ),\n      },\n      source: jsCode,\n    };\n\n    const assets: SerialAsset[] = [jsAsset];\n\n    if (\n      // Only include the source map if the `options.sourceMapUrl` option is provided and we are exporting a static build.\n      includeSourceMaps &&\n      !this.options.inlineSourceMap &&\n      this.options.sourceMapUrl\n    ) {\n      const modules = [\n        ...this.preModules,\n        ...getSortedModules([...this.deps], {\n          createModuleId: this.options.createModuleId,\n        }),\n      ].map((module) => {\n        // TODO: Make this user-configurable.\n\n        // Make all paths relative to the server root to prevent the entire user filesystem from being exposed.\n        if (module.path.startsWith('/')) {\n          return {\n            ...module,\n            path:\n              '/' + path.relative(this.options.serverRoot ?? this.options.projectRoot, module.path),\n          };\n        }\n        return module;\n      });\n\n      const sourceMap = sourceMapString(modules, {\n        excludeSource: false,\n        ...this.options,\n      });\n\n      assets.push({\n        filename: this.options.dev ? jsAsset.filename + '.map' : outputFile + '.map',\n        originFilename: jsAsset.originFilename,\n        type: 'map',\n        metadata: {},\n        source: sourceMap,\n      });\n    }\n\n    if (includeBytecode && this.isHermesEnabled()) {\n      const adjustedSource = jsAsset.source.replace(\n        /^\\/\\/# (sourceMappingURL)=(.*)$/gm,\n        (...props) => {\n          if (props[1] === 'sourceMappingURL') {\n            const mapName = props[2].replace(/\\.js\\.map$/, '.hbc.map');\n            return `//# ${props[1]}=` + mapName;\n          }\n          return '';\n        }\n      );\n\n      // TODO: Generate hbc for each chunk\n      const hermesBundleOutput = await buildHermesBundleAsync({\n        filename: this.name,\n        code: adjustedSource,\n        map: assets[1] ? assets[1].source : null,\n        // TODO: Maybe allow prod + no minify.\n        minify: true, //!this.options.dev,\n      });\n\n      if (hermesBundleOutput.hbc) {\n        // TODO: Unclear if we should add multiple assets, link the assets, or mutate the first asset.\n        // jsAsset.metadata.hbc = hermesBundleOutput.hbc;\n        // @ts-expect-error: TODO\n        jsAsset.source = hermesBundleOutput.hbc;\n        jsAsset.filename = jsAsset.filename.replace(/\\.js$/, '.hbc');\n      }\n      if (assets[1] && hermesBundleOutput.sourcemap) {\n        assets[1].source = hermesBundleOutput.sourcemap;\n        assets[1].filename = assets[1].filename.replace(/\\.js\\.map$/, '.hbc.map');\n      }\n    }\n\n    return assets;\n  }\n\n  private supportsBytecode() {\n    return this.getPlatform() !== 'web';\n  }\n\n  isHermesEnabled() {\n    // TODO: Revisit.\n    // TODO: There could be an issue with having the serializer for export:embed output hermes since the native scripts will\n    // also create hermes bytecode. We may need to disable in one of the two places.\n    return (\n      !this.options.dev &&\n      this.supportsBytecode() &&\n      this.graph.transformOptions.customTransformOptions?.engine === 'hermes'\n    );\n  }\n}\n\nfunction getEntryModulesForChunkSettings(graph: ReadOnlyGraph, settings: ChunkSettings) {\n  return [...graph.dependencies.entries()]\n    .filter(([path]) => settings.test.test(path))\n    .map(([, module]) => module);\n}\n\nfunction chunkIdForModules(modules: Module[]) {\n  return modules\n    .map((module) => module.path)\n    .sort()\n    .join('=>');\n}\n\nfunction gatherChunks(\n  chunks: Set<Chunk>,\n  settings: ChunkSettings,\n  preModules: readonly Module[],\n  graph: ReadOnlyGraph,\n  options: SerializerOptions<MixedOutput>,\n  isAsync: boolean = false\n): Set<Chunk> {\n  let entryModules = getEntryModulesForChunkSettings(graph, settings);\n\n  const existingChunks = [...chunks.values()];\n\n  entryModules = entryModules.filter((module) => {\n    return !existingChunks.find((chunk) => chunk.entries.includes(module));\n  });\n\n  // Prevent processing the same entry file twice.\n  if (!entryModules.length) {\n    return chunks;\n  }\n\n  const entryChunk = new Chunk(\n    chunkIdForModules(entryModules),\n    entryModules,\n    graph,\n    options,\n    isAsync\n  );\n\n  // Add all the pre-modules to the first chunk.\n  if (preModules.length) {\n    // On native, use the preModules in insert code in the entry chunk.\n    for (const module of preModules.values()) {\n      entryChunk.preModules.add(module);\n    }\n  }\n\n  chunks.add(entryChunk);\n\n  const splitChunks = getSplitChunksOption(graph, options);\n\n  function includeModule(entryModule: Module<MixedOutput>) {\n    for (const dependency of entryModule.dependencies.values()) {\n      if (\n        dependency.data.data.asyncType === 'async' &&\n        // Support disabling multiple chunks.\n        splitChunks\n      ) {\n        gatherChunks(\n          chunks,\n          { test: pathToRegExp(dependency.absolutePath) },\n          [],\n          graph,\n          options,\n          true\n        );\n      } else {\n        const module = graph.dependencies.get(dependency.absolutePath);\n        if (module) {\n          // Prevent circular dependencies from creating infinite loops.\n          if (!entryChunk.deps.has(module)) {\n            entryChunk.deps.add(module);\n            includeModule(module);\n          }\n        }\n      }\n    }\n  }\n\n  for (const entryModule of entryModules) {\n    includeModule(entryModule);\n  }\n\n  return chunks;\n}\n\nasync function serializeChunksAsync(\n  chunks: Set<Chunk>,\n  serializerConfig: Partial<SerializerConfigT>,\n  { includeSourceMaps, includeBytecode }: SerializeChunkOptions\n) {\n  const jsAssets: SerialAsset[] = [];\n\n  const chunksArray = [...chunks.values()];\n  await Promise.all(\n    chunksArray.map(async (chunk) => {\n      jsAssets.push(\n        ...(await chunk.serializeToAssetsAsync(serializerConfig, chunksArray, {\n          includeSourceMaps,\n          includeBytecode,\n        }))\n      );\n    })\n  );\n\n  return jsAssets;\n}\n\nfunction getSortedModules(\n  modules: Module<MixedOutput>[],\n  {\n    createModuleId,\n  }: {\n    createModuleId: (path: string) => number;\n  }\n): readonly Module<any>[] {\n  // Assign IDs to modules in a consistent order\n  for (const module of modules) {\n    createModuleId(module.path);\n  }\n  // Sort by IDs\n  return modules.sort(\n    (a: Module<any>, b: Module<any>) => createModuleId(a.path) - createModuleId(b.path)\n  );\n}\n"],"mappings":"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"}