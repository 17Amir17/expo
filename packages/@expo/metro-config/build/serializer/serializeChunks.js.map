{"version":3,"file":"serializeChunks.js","names":["_assert","data","_interopRequireDefault","require","_jscSafeUrl","_sourceMapString","_bundleToString","_countLines","_path","_url","_debugId","_exportHermes","_exportPath","_baseJSBundle","_getCssDeps","_getAssets","obj","__esModule","default","pathToRegex","path","regexSafePath","replace","RegExp","clientManifestSerializerPlugin","entryPoint","preModules","graph","options","rscClientReferenceManifest","dependencies","forEach","module","output","clientReferences","_options$serverRoot","entry","relative","serverRoot","projectRoot","currentUrl","URL","jscSafeUrl","toNormalUrl","sourceUrl","opaqueId","createModuleId","console","log","pathname","searchParams","delete","set","outputKey","pathToFileURL","href","pushRef","exp","key","chunk","dev","toString","id","chunks","name","exports","rscManifestChunkTemplate","find","endsWith","code","JSON","stringify","lineCount","countLines","graphToSerialAssetsAsync","config","serializeChunkOptions","props","_config$serializer","_baseUrl$replace","_config$transformer$a","_config$transformer","_getPlatformOption","entryFile","cssDeps","getCssSerialAssets","processModuleFilter","_options$serverRoot2","rscAsset","filename","metadata","originFilename","source","type","Set","test","map","chunkSettings","gatherChunks","entryChunk","values","isAsync","hasAbsolutePath","dep","deps","has","toCompare","commonDependencies","length","shift","chunk2","commonDeps","filter","push","add","jsAssets","serializeChunksAsync","serializer","isExporting","baseUrl","getBaseUrlOption","serializerOptions","assetPublicUrl","publicPath","transformOptions","platform","metroAssets","getMetroAssets","assetPlugins","transformer","getPlatformOption","artifacts","Boolean","rscManifest","assets","Chunk","requiredChunks","constructor","entries","isVendor","getPlatform","assert","getFilename","src","getExportPathForDependencyWithOptions","getStableChunkSource","serializerConfig","serializeToCodeWithTemplates","includeSourceMaps","sourceMapUrl","undefined","debugId","getFilenameForConfig","_serializerConfig$get","_serializerConfig$get2","jsSplitBundle","baseJSBundleWithDependencies","runBeforeMainModule","getModulesRunBeforeMainModule","call","runModule","modulesOnly","size","splitChunks","getSplitChunksOption","skipWrapping","computedAsyncModulePaths","bundleToString","absolutePath","some","getComputedPathsForAsyncDependencies","includeAsyncPaths","dependency","asyncType","chunkContainingModule","moduleIdName","getAdjustedSourceMapUrl","_this$options$seriali","_this$options$sourceM","inlineSourceMap","_this$options$sourceM2","isAbsolute","isAbsoluteBaseUrl","match","adjustedSourceMapUrl","startsWith","parsed","error","serializeToCode","_this$getAdjustedSour","serializeToAssetsAsync","includeBytecode","unstable_beforeAssetSerializationPlugins","outputFile","stringToUUID","basename","extname","premodules","plugin","jsCode","relativeEntry","jsAsset","requires","modulePaths","mutateSourceMapWithDebugId","sourceMap","sourceMapObject","parse","modules","getSortedModules","_this$options$serverR","sourceMapString","excludeSource","isHermesEnabled","adjustedSource","mapName","hermesBundleOutput","buildHermesBundleAsync","minify","hbc","sourcemap","supportsBytecode","_this$graph$transform","customTransformOptions","engine","getEntryModulesForChunkSettings","settings","chunkIdForModules","sort","join","entryModules","existingChunks","includes","includeModule","entryModule","get","chunksArray","Promise","all","a","b"],"sources":["../../src/serializer/serializeChunks.ts"],"sourcesContent":["/**\n * Copyright Â© 2023 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport assert from 'assert';\nimport jscSafeUrl from 'jsc-safe-url';\nimport {\n  AssetData,\n  MetroConfig,\n  MixedOutput,\n  Module,\n  ReadOnlyGraph,\n  SerializerOptions,\n} from 'metro';\nimport sourceMapString from 'metro/src/DeltaBundler/Serializers/sourceMapString';\nimport bundleToString from 'metro/src/lib/bundleToString';\nimport countLines from 'metro/src/lib/countLines';\nimport { ConfigT, SerializerConfigT } from 'metro-config';\nimport path from 'path';\nimport { pathToFileURL } from 'url';\n\nimport { stringToUUID } from './debugId';\nimport { buildHermesBundleAsync } from './exportHermes';\nimport { getExportPathForDependencyWithOptions } from './exportPath';\nimport {\n  ExpoSerializerOptions,\n  baseJSBundleWithDependencies,\n  getBaseUrlOption,\n  getPlatformOption,\n  getSplitChunksOption,\n} from './fork/baseJSBundle';\nimport { getCssSerialAssets } from './getCssDeps';\nimport { SerialAsset } from './serializerAssets';\nimport { SerializerConfigOptions } from './withExpoSerializers';\nimport getMetroAssets from '../transform-worker/getAssets';\n\ntype RscClientReference = {\n  /**\n   * ??\n   * `\"/dist/_expo/chunk/client/index.js\"`\n   */\n  id: string;\n  /**\n   * Name of chunk location on server, e.g. `\"/dist/_expo/chunk/client/index.js\"`\n   * In development, we'll use a metro lazy chunk id, e.g. `/client/client/index.bundle?platform=web`\n   */\n  chunks: string[];\n  /** Name of export, e.g. `\"default\"` */\n  name: string;\n};\n\n/**\n * Key is `<id>#<name>`\n * {\n *   \"/components/timer.tsx#default\": {\n *     id: \"/components/timer.js\",\n *     chunks: [ \"/components/timer.js\" ],\n *     name: \"default\"\n *   }\n * }\n */\ntype RscManifest = Record<string, RscClientReference>;\n\ntype Serializer = NonNullable<ConfigT['serializer']['customSerializer']>;\n\ntype SerializerParameters = Parameters<Serializer>;\n\ntype ChunkSettings = {\n  /** Match the initial modules. */\n  test: RegExp;\n};\n\nexport type SerializeChunkOptions = {\n  includeSourceMaps: boolean;\n  includeBytecode: boolean;\n} & SerializerConfigOptions;\n\n// Convert file paths to regex matchers.\nfunction pathToRegex(path: string) {\n  // Escape regex special characters, except for '*'\n  let regexSafePath = path.replace(/[-[\\]{}()+?.,\\\\^$|#\\s]/g, '\\\\$&');\n\n  // Replace '*' with '.*' to act as a wildcard in regex\n  regexSafePath = regexSafePath.replace(/\\*/g, '.*');\n\n  // Create a RegExp object with the modified string\n  return new RegExp('^' + regexSafePath + '$');\n}\n\n/** Strips the process.env polyfill in server environments to allow for accessing environment variables off the global. */\nexport function clientManifestSerializerPlugin(\n  entryPoint: string,\n  preModules: readonly Module<MixedOutput>[],\n  graph: ReadOnlyGraph,\n  options: SerializerOptions\n): SerializerParameters {\n  // NOTE: Partially replicates the Webpack version.\n  // https://github.com/facebook/react/blob/6c7b41da3de12be2d95c60181b3fe896f824f13a/packages/react-server-dom-webpack/src/ReactFlightWebpackPlugin.js#L387\n  const rscClientReferenceManifest: RscManifest = {};\n\n  // Create client reference manifest for server components\n  graph.dependencies.forEach((module) => {\n    module.output.forEach((output) => {\n      // @ts-expect-error\n      const clientReferences = output.data.clientReferences as unknown as {\n        entryPoint: string;\n        exports: string[];\n      } | null;\n\n      if (clientReferences) {\n        const entry = '/' + path.relative(options.serverRoot ?? options.projectRoot, module.path);\n        const currentUrl = new URL(jscSafeUrl.toNormalUrl(options.sourceUrl!));\n\n        // NOTE: This is a hack to find the opaque module ID for usage later when loading the bundle on the client.\n        const opaqueId = options.createModuleId(module.path);\n\n        console.log('options.sourceUrl', options.sourceUrl, opaqueId);\n\n        currentUrl.pathname = entry.replace(/\\.([tj]sx?|[mc]js)$/, '.bundle');\n\n        currentUrl.searchParams.delete('serializer.output');\n\n        currentUrl.searchParams.set('modulesOnly', 'true');\n        // TODO: Add params to indicate that `module.exports = __r()` should be used as the run module statement.\n        currentUrl.searchParams.set('runModule', 'false');\n\n        const outputKey = pathToFileURL(module.path).href;\n\n        // \"file:///Users/evanbacon/Documents/GitHub/server-components-demo/src/NoteEditor.js\": {\n        //   \"id\": \"./src/NoteEditor.js\",\n        //   \"chunks\": [\n        //     \"vendors-node_modules_sanitize-html_index_js-node_modules_marked_lib_marked_esm_js\",\n        //     \"client1\"\n        //   ],\n        //   \"name\": \"*\"\n        // },\n        // \"file:///Users/evanbacon/Documents/GitHub/server-components-demo/src/NoteEditor.js#\": {\n        //   \"id\": \"./src/NoteEditor.js\",\n        //   \"chunks\": [\n        //     \"vendors-node_modules_sanitize-html_index_js-node_modules_marked_lib_marked_esm_js\",\n        //     \"client1\"\n        //   ],\n        //   \"name\": \"\"\n        // },\n\n        const pushRef = (exp: string) => {\n          const key = `${outputKey}${exp === '*' ? '' : `#${exp}`}`;\n\n          const chunk = options.dev\n            ? currentUrl.toString() + `#${opaqueId}`\n            : 'TODO-PRODUCTION-CHUNK-NAMES';\n          rscClientReferenceManifest[key] = {\n            // TODO: Make this the opaque Metro ID\n            id: chunk,\n            // id: entry,\n            chunks: [\n              // TODO: This should be the URL where the chunk can be requested from.\n              chunk,\n            ],\n            name: exp,\n          };\n        };\n\n        // NOTE: These come from the demo, not sure why we need them.\n        pushRef('*');\n        pushRef('');\n\n        clientReferences.exports.forEach((exp) => {\n          pushRef(exp);\n        });\n      }\n    });\n  });\n\n  const rscManifestChunkTemplate = preModules.find((module) =>\n    module.path.endsWith('.expo/metro/react-client-manifest.js')\n  );\n\n  // let rscAsset: SerialAsset | null = null;\n  if (rscManifestChunkTemplate) {\n    rscManifestChunkTemplate.output.forEach((output) => {\n      output.data.code = output.data.code.replace(\n        /\\$\\$expo_rsc_manifest\\s?=\\s?{}/,\n        `$$$expo_rsc_manifest = ${JSON.stringify(rscClientReferenceManifest)} /* registered */`\n      );\n      // @ts-expect-error\n      output.data.lineCount = countLines(output.data.code);\n    });\n\n    // rscAsset = {\n    //   filename: '/dist/_expo/react-client-manifest.js',\n    //   metadata: {},\n    //   originFilename: '/react-client-manifest.js',\n    //   source: JSON.stringify(rscClientReferenceManifest),\n    //   type: 'json',\n    // };\n  }\n\n  return [entryPoint, preModules, graph, options];\n}\n\nexport async function graphToSerialAssetsAsync(\n  config: MetroConfig,\n  serializeChunkOptions: SerializeChunkOptions,\n  ...props: SerializerParameters\n): Promise<{ artifacts: SerialAsset[] | null; rscManifest: RscManifest; assets: AssetData[] }> {\n  const [entryFile, preModules, graph, options] = props;\n\n  const cssDeps = getCssSerialAssets<MixedOutput>(graph.dependencies, {\n    projectRoot: options.projectRoot,\n    processModuleFilter: options.processModuleFilter,\n  });\n\n  // NOTE: Partially replicates the Webpack version.\n  // https://github.com/facebook/react/blob/6c7b41da3de12be2d95c60181b3fe896f824f13a/packages/react-server-dom-webpack/src/ReactFlightWebpackPlugin.js#L387\n  const rscClientReferenceManifest: RscManifest = {};\n\n  // Create client reference manifest for server components\n  props[2].dependencies.forEach((module) => {\n    module.output.forEach((output) => {\n      // @ts-expect-error\n      const clientReferences = output.data.clientReferences as unknown as {\n        entryPoint: string;\n        exports: string[];\n      } | null;\n\n      if (clientReferences) {\n        const entry = '/' + path.relative(options.serverRoot ?? options.projectRoot, module.path);\n        const currentUrl = new URL(jscSafeUrl.toNormalUrl(options.sourceUrl!));\n\n        console.log('options.sourceUrl', options.sourceUrl);\n\n        currentUrl.pathname = entry.replace(/\\.([tj]sx?|[mc]js)$/, '.bundle');\n\n        currentUrl.searchParams.delete('serializer.output');\n\n        currentUrl.searchParams.set('modulesOnly', 'true');\n        // TODO: Add params to indicate that `module.exports = __r()` should be used as the run module statement.\n        currentUrl.searchParams.set('runModule', 'false');\n\n        const outputKey = pathToFileURL(module.path).href;\n\n        // \"file:///Users/evanbacon/Documents/GitHub/server-components-demo/src/NoteEditor.js\": {\n        //   \"id\": \"./src/NoteEditor.js\",\n        //   \"chunks\": [\n        //     \"vendors-node_modules_sanitize-html_index_js-node_modules_marked_lib_marked_esm_js\",\n        //     \"client1\"\n        //   ],\n        //   \"name\": \"*\"\n        // },\n        // \"file:///Users/evanbacon/Documents/GitHub/server-components-demo/src/NoteEditor.js#\": {\n        //   \"id\": \"./src/NoteEditor.js\",\n        //   \"chunks\": [\n        //     \"vendors-node_modules_sanitize-html_index_js-node_modules_marked_lib_marked_esm_js\",\n        //     \"client1\"\n        //   ],\n        //   \"name\": \"\"\n        // },\n\n        const pushRef = (exp: string) => {\n          const key = `${outputKey}${exp === '*' ? '' : `#${exp}`}`;\n\n          rscClientReferenceManifest[key] = {\n            id: entry,\n            chunks: [options.dev ? currentUrl.toString() : 'TODO-PRODUCTION-CHUNK-NAMES'],\n            name: exp,\n          };\n        };\n\n        // NOTE: These come from the demo, not sure why we need them.\n        pushRef('*');\n        pushRef('');\n\n        clientReferences.exports.forEach((exp) => {\n          pushRef(exp);\n        });\n      }\n    });\n  });\n\n  const rscManifestChunkTemplate = preModules.find((module) =>\n    module.path.endsWith('.expo/metro/react-client-manifest.js')\n  );\n\n  let rscAsset: SerialAsset | null = null;\n  if (rscManifestChunkTemplate) {\n    rscManifestChunkTemplate.output.forEach((output) => {\n      output.data.code = output.data.code.replace(\n        /\\$\\$expo_rsc_manifest\\s?=\\s?{}/,\n        `$$$expo_rsc_manifest = ${JSON.stringify(rscClientReferenceManifest)} /* registered */`\n      );\n      // @ts-expect-error\n      output.data.lineCount = countLines(output.data.code);\n    });\n\n    rscAsset = {\n      filename: '/dist/_expo/react-client-manifest.js',\n      metadata: {},\n      originFilename: '/react-client-manifest.js',\n      source: JSON.stringify(rscClientReferenceManifest),\n      type: 'json',\n    };\n  }\n\n  // Create chunks for splitting.\n  const chunks = new Set<Chunk>();\n\n  [\n    {\n      test: pathToRegex(entryFile),\n    },\n  ].map((chunkSettings) => gatherChunks(chunks, chunkSettings, preModules, graph, options, false));\n\n  // Get the common modules and extract them into a separate chunk.\n  const entryChunk = [...chunks.values()].find(\n    (chunk) => !chunk.isAsync && chunk.hasAbsolutePath(entryFile)\n  );\n  if (entryChunk) {\n    for (const chunk of chunks.values()) {\n      if (chunk !== entryChunk && chunk.isAsync) {\n        for (const dep of chunk.deps.values()) {\n          if (entryChunk.deps.has(dep)) {\n            // Remove the dependency from the async chunk since it will be loaded in the main chunk.\n            chunk.deps.delete(dep);\n          }\n        }\n      }\n    }\n\n    const toCompare = [...chunks.values()];\n\n    const commonDependencies = [];\n\n    while (toCompare.length) {\n      const chunk = toCompare.shift()!;\n      for (const chunk2 of toCompare) {\n        if (chunk !== chunk2 && chunk.isAsync && chunk2.isAsync) {\n          const commonDeps = [...chunk.deps].filter((dep) => chunk2.deps.has(dep));\n\n          for (const dep of commonDeps) {\n            chunk.deps.delete(dep);\n            chunk2.deps.delete(dep);\n          }\n\n          commonDependencies.push(...commonDeps);\n        }\n      }\n    }\n\n    // If common dependencies were found, extract them to the entry chunk.\n    // TODO: Extract the metro-runtime to a common chunk apart from the entry chunk then load the common dependencies before the entry chunk.\n    if (commonDependencies.length) {\n      for (const dep of commonDependencies) {\n        entryChunk.deps.add(dep);\n      }\n      // const commonDependenciesUnique = [...new Set(commonDependencies)];\n      // const commonChunk = new Chunk(\n      //   chunkIdForModules(commonDependenciesUnique),\n      //   commonDependenciesUnique,\n      //   graph,\n      //   options,\n      //   false,\n      //   true\n      // );\n      // entryChunk.requiredChunks.add(commonChunk);\n      // chunks.add(commonChunk);\n    }\n\n    // TODO: Optimize this pass more.\n    // Remove all dependencies from async chunks that are already in the common chunk.\n    for (const chunk of [...chunks.values()]) {\n      if (chunk !== entryChunk) {\n        for (const dep of chunk.deps) {\n          if (entryChunk.deps.has(dep)) {\n            chunk.deps.delete(dep);\n          }\n        }\n      }\n    }\n  }\n\n  const jsAssets = await serializeChunksAsync(\n    chunks,\n    config.serializer ?? {},\n    serializeChunkOptions\n  );\n\n  // TODO: Can this be anything besides true?\n  const isExporting = true;\n  const baseUrl = getBaseUrlOption(graph, { serializerOptions: serializeChunkOptions });\n  const assetPublicUrl = (baseUrl.replace(/\\/+$/, '') ?? '') + '/assets';\n  const publicPath = isExporting\n    ? graph.transformOptions.platform === 'web'\n      ? `/assets?export_path=${assetPublicUrl}`\n      : assetPublicUrl\n    : '/assets/?unstable_path=.';\n\n  // TODO: Convert to serial assets\n  // TODO: Disable this call dynamically in development since assets are fetched differently.\n  const metroAssets = (await getMetroAssets(graph.dependencies, {\n    processModuleFilter: options.processModuleFilter,\n    assetPlugins: config.transformer?.assetPlugins ?? [],\n    platform: getPlatformOption(graph, options) ?? 'web',\n    projectRoot: options.projectRoot, // this._getServerRootDir(),\n    publicPath,\n  })) as AssetData[];\n\n  return {\n    artifacts: [...jsAssets, ...cssDeps, rscAsset].filter(Boolean) as SerialAsset[],\n    rscManifest: rscClientReferenceManifest,\n    assets: metroAssets,\n  };\n}\n\nexport class Chunk {\n  public deps: Set<Module> = new Set();\n  public preModules: Set<Module> = new Set();\n\n  // Chunks that are required to be loaded synchronously before this chunk.\n  // These are included in the HTML as <script> tags.\n  public requiredChunks: Set<Chunk> = new Set();\n\n  constructor(\n    public name: string,\n    public entries: Module<MixedOutput>[],\n    public graph: ReadOnlyGraph<MixedOutput>,\n    public options: ExpoSerializerOptions,\n    public isAsync: boolean = false,\n    public isVendor: boolean = false\n  ) {\n    this.deps = new Set(entries);\n  }\n\n  private getPlatform() {\n    assert(\n      this.graph.transformOptions.platform,\n      \"platform is required to be in graph's transformOptions\"\n    );\n    return this.graph.transformOptions.platform;\n  }\n\n  private getFilename(src: string) {\n    return this.options.dev\n      ? this.name\n      : getExportPathForDependencyWithOptions(this.name, {\n          platform: this.getPlatform(),\n          src,\n          serverRoot: this.options.serverRoot,\n        });\n  }\n\n  private getStableChunkSource(serializerConfig: Partial<SerializerConfigT>) {\n    return this.options.dev\n      ? ''\n      : this.serializeToCodeWithTemplates(serializerConfig, {\n          // Disable source maps when creating a sha to reduce the number of possible changes that could\n          // influence the cache hit.\n          serializerOptions: {\n            includeSourceMaps: false,\n          },\n          sourceMapUrl: undefined,\n          debugId: undefined,\n        });\n  }\n\n  private getFilenameForConfig(serializerConfig: Partial<SerializerConfigT>) {\n    return this.getFilename(this.getStableChunkSource(serializerConfig));\n  }\n\n  private serializeToCodeWithTemplates(\n    serializerConfig: Partial<SerializerConfigT>,\n    options: Partial<Parameters<typeof baseJSBundleWithDependencies>[3]> = {}\n  ) {\n    const entryFile = this.name;\n\n    // TODO: Disable all debugId steps when a dev server is enabled. This is an export-only feature.\n\n    const preModules = [...this.preModules.values()];\n    const dependencies = [...this.deps];\n\n    const jsSplitBundle = baseJSBundleWithDependencies(entryFile, preModules, dependencies, {\n      ...this.options,\n      runBeforeMainModule:\n        serializerConfig?.getModulesRunBeforeMainModule?.(\n          path.relative(this.options.projectRoot, entryFile)\n        ) ?? [],\n      runModule: !this.isVendor && !this.isAsync,\n      modulesOnly: this.preModules.size === 0,\n      platform: this.getPlatform(),\n      baseUrl: getBaseUrlOption(this.graph, this.options),\n      splitChunks: getSplitChunksOption(this.graph, this.options),\n      skipWrapping: true,\n      computedAsyncModulePaths: null,\n      ...options,\n    });\n\n    return bundleToString(jsSplitBundle).code;\n  }\n\n  hasAbsolutePath(absolutePath: string): boolean {\n    return [...this.deps].some((module) => module.path === absolutePath);\n  }\n\n  private getComputedPathsForAsyncDependencies(\n    serializerConfig: Partial<SerializerConfigT>,\n    chunks: Chunk[]\n  ) {\n    const baseUrl = getBaseUrlOption(this.graph, this.options);\n    // Only calculate production paths when all chunks are being exported.\n    if (this.options.includeAsyncPaths) {\n      return null;\n    }\n    const computedAsyncModulePaths: Record<string, string> = {};\n\n    this.deps.forEach((module) => {\n      module.dependencies.forEach((dependency) => {\n        if (dependency.data.data.asyncType === 'async') {\n          const chunkContainingModule = chunks.find((chunk) =>\n            chunk.hasAbsolutePath(dependency.absolutePath)\n          );\n          assert(\n            chunkContainingModule,\n            'Chunk containing module not found: ' + dependency.absolutePath\n          );\n          const moduleIdName = chunkContainingModule.getFilenameForConfig(serializerConfig);\n          computedAsyncModulePaths![dependency.absolutePath] = (baseUrl ?? '/') + moduleIdName;\n        }\n      });\n    });\n    return computedAsyncModulePaths;\n  }\n\n  private getAdjustedSourceMapUrl(serializerConfig: Partial<SerializerConfigT>): string | null {\n    // Metro really only accounts for development, so we'll use the defaults here.\n    if (this.options.dev) {\n      return this.options.sourceMapUrl ?? null;\n    }\n\n    if (this.options.serializerOptions?.includeSourceMaps !== true) {\n      return null;\n    }\n\n    if (this.options.inlineSourceMap || !this.options.sourceMapUrl) {\n      return this.options.sourceMapUrl ?? null;\n    }\n\n    const isAbsolute = this.getPlatform() !== 'web';\n\n    const baseUrl = getBaseUrlOption(this.graph, this.options);\n    const filename = this.getFilenameForConfig(serializerConfig);\n    const isAbsoluteBaseUrl = !!baseUrl?.match(/https?:\\/\\//);\n    const pathname =\n      (isAbsoluteBaseUrl ? '' : baseUrl.replace(/\\/+$/, '')) +\n      '/' +\n      filename.replace(/^\\/+$/, '') +\n      '.map';\n\n    let adjustedSourceMapUrl = this.options.sourceMapUrl;\n    // Metro has lots of issues...\n    if (this.options.sourceMapUrl.startsWith('//localhost')) {\n      adjustedSourceMapUrl = 'http:' + this.options.sourceMapUrl;\n    }\n\n    try {\n      const parsed = new URL(pathname, isAbsoluteBaseUrl ? baseUrl : adjustedSourceMapUrl);\n\n      if (isAbsoluteBaseUrl || isAbsolute) {\n        return parsed.href;\n      }\n\n      return parsed.pathname;\n    } catch (error) {\n      console.error(\n        `Failed to link source maps because the source map URL \"${this.options.sourceMapUrl}\" is corrupt:`,\n        error\n      );\n      return null;\n    }\n  }\n\n  private serializeToCode(\n    serializerConfig: Partial<SerializerConfigT>,\n    { debugId, chunks }: { debugId: string; chunks: Chunk[] }\n  ) {\n    return this.serializeToCodeWithTemplates(serializerConfig, {\n      skipWrapping: false,\n      sourceMapUrl: this.getAdjustedSourceMapUrl(serializerConfig) ?? undefined,\n      computedAsyncModulePaths: this.getComputedPathsForAsyncDependencies(serializerConfig, chunks),\n      debugId,\n    });\n  }\n\n  async serializeToAssetsAsync(\n    serializerConfig: Partial<SerializerConfigT>,\n    chunks: Chunk[],\n    {\n      includeSourceMaps,\n      includeBytecode,\n      unstable_beforeAssetSerializationPlugins,\n    }: SerializeChunkOptions\n  ): Promise<SerialAsset[]> {\n    // Create hash without wrapping to prevent it changing when the wrapping changes.\n    const outputFile = this.getFilenameForConfig(serializerConfig);\n    // We already use a stable hash for the output filename, so we'll reuse that for the debugId.\n    const debugId = stringToUUID(path.basename(outputFile, path.extname(outputFile)));\n\n    let premodules = [...this.preModules];\n    if (unstable_beforeAssetSerializationPlugins) {\n      for (const plugin of unstable_beforeAssetSerializationPlugins) {\n        premodules = plugin({ graph: this.graph, premodules, debugId });\n      }\n      this.preModules = new Set(premodules);\n    }\n\n    const jsCode = this.serializeToCode(serializerConfig, { chunks, debugId });\n\n    const relativeEntry = path.relative(this.options.projectRoot, this.name);\n\n    const jsAsset: SerialAsset = {\n      filename: outputFile,\n      originFilename: relativeEntry,\n      type: 'js',\n      metadata: {\n        isAsync: this.isAsync,\n        requires: [...this.requiredChunks.values()].map((chunk) =>\n          chunk.getFilenameForConfig(serializerConfig)\n        ),\n        // Provide a list of module paths that can be used for matching chunks to routes.\n        // TODO: Move HTML serializing closer to this code so we can reduce passing this much data around.\n        modulePaths: [...this.deps].map((module) => module.path),\n      },\n      source: jsCode,\n    };\n\n    const assets: SerialAsset[] = [jsAsset];\n\n    const mutateSourceMapWithDebugId = (sourceMap: string) => {\n      // TODO: Upstream this so we don't have to parse the source map back and forth.\n      if (!debugId) {\n        return sourceMap;\n      }\n      // NOTE: debugId isn't required for inline source maps because the source map is included in the same file, therefore\n      // we don't need to disambiguate between multiple source maps.\n      const sourceMapObject = JSON.parse(sourceMap);\n      sourceMapObject.debugId = debugId;\n      // NOTE: Sentry does this, but bun does not.\n      // sourceMapObject.debug_id = debugId;\n      return JSON.stringify(sourceMapObject);\n    };\n\n    if (\n      // Only include the source map if the `options.sourceMapUrl` option is provided and we are exporting a static build.\n      includeSourceMaps &&\n      !this.options.inlineSourceMap &&\n      this.options.sourceMapUrl\n    ) {\n      const modules = [\n        ...this.preModules,\n        ...getSortedModules([...this.deps], {\n          createModuleId: this.options.createModuleId,\n        }),\n      ].map((module) => {\n        // TODO: Make this user-configurable.\n\n        // Make all paths relative to the server root to prevent the entire user filesystem from being exposed.\n        if (module.path.startsWith('/')) {\n          return {\n            ...module,\n            path:\n              '/' + path.relative(this.options.serverRoot ?? this.options.projectRoot, module.path),\n          };\n        }\n        return module;\n      });\n\n      // TODO: We may not need to mutate the original source map with a `debugId` when hermes is enabled since we'll have different source maps.\n      const sourceMap = mutateSourceMapWithDebugId(\n        sourceMapString(modules, {\n          excludeSource: false,\n          ...this.options,\n        })\n      );\n\n      assets.push({\n        filename: this.options.dev ? jsAsset.filename + '.map' : outputFile + '.map',\n        originFilename: jsAsset.originFilename,\n        type: 'map',\n        metadata: {},\n        source: sourceMap,\n      });\n    }\n\n    if (includeBytecode && this.isHermesEnabled()) {\n      const adjustedSource = jsAsset.source.replace(\n        /^\\/\\/# (sourceMappingURL)=(.*)$/gm,\n        (...props) => {\n          if (props[1] === 'sourceMappingURL') {\n            const mapName = props[2].replace(/\\.js\\.map$/, '.hbc.map');\n            return `//# ${props[1]}=` + mapName;\n          }\n          return '';\n        }\n      );\n\n      // TODO: Generate hbc for each chunk\n      const hermesBundleOutput = await buildHermesBundleAsync({\n        filename: this.name,\n        code: adjustedSource,\n        map: assets[1] ? assets[1].source : null,\n        // TODO: Maybe allow prod + no minify.\n        minify: true, //!this.options.dev,\n      });\n\n      if (hermesBundleOutput.hbc) {\n        // TODO: Unclear if we should add multiple assets, link the assets, or mutate the first asset.\n        // jsAsset.metadata.hbc = hermesBundleOutput.hbc;\n        // @ts-expect-error: TODO\n        jsAsset.source = hermesBundleOutput.hbc;\n        jsAsset.filename = jsAsset.filename.replace(/\\.js$/, '.hbc');\n      }\n      if (assets[1] && hermesBundleOutput.sourcemap) {\n        assets[1].source = mutateSourceMapWithDebugId(hermesBundleOutput.sourcemap);\n        assets[1].filename = assets[1].filename.replace(/\\.js\\.map$/, '.hbc.map');\n      }\n    }\n\n    return assets;\n  }\n\n  private supportsBytecode() {\n    return this.getPlatform() !== 'web';\n  }\n\n  isHermesEnabled() {\n    // TODO: Revisit.\n    // TODO: There could be an issue with having the serializer for export:embed output hermes since the native scripts will\n    // also create hermes bytecode. We may need to disable in one of the two places.\n    return (\n      !this.options.dev &&\n      this.supportsBytecode() &&\n      this.graph.transformOptions.customTransformOptions?.engine === 'hermes'\n    );\n  }\n}\n\nfunction getEntryModulesForChunkSettings(graph: ReadOnlyGraph, settings: ChunkSettings) {\n  return [...graph.dependencies.entries()]\n    .filter(([path]) => settings.test.test(path))\n    .map(([, module]) => module);\n}\n\nfunction chunkIdForModules(modules: Module[]) {\n  return modules\n    .map((module) => module.path)\n    .sort()\n    .join('=>');\n}\n\nfunction gatherChunks(\n  chunks: Set<Chunk>,\n  settings: ChunkSettings,\n  preModules: readonly Module[],\n  graph: ReadOnlyGraph,\n  options: SerializerOptions<MixedOutput>,\n  isAsync: boolean = false\n): Set<Chunk> {\n  let entryModules = getEntryModulesForChunkSettings(graph, settings);\n\n  const existingChunks = [...chunks.values()];\n\n  entryModules = entryModules.filter((module) => {\n    return !existingChunks.find((chunk) => chunk.entries.includes(module));\n  });\n\n  // Prevent processing the same entry file twice.\n  if (!entryModules.length) {\n    return chunks;\n  }\n\n  const entryChunk = new Chunk(\n    chunkIdForModules(entryModules),\n    entryModules,\n    graph,\n    options,\n    isAsync\n  );\n\n  // Add all the pre-modules to the first chunk.\n  if (preModules.length) {\n    // On native, use the preModules in insert code in the entry chunk.\n    for (const module of preModules.values()) {\n      entryChunk.preModules.add(module);\n    }\n  }\n\n  chunks.add(entryChunk);\n\n  const splitChunks = getSplitChunksOption(graph, options);\n\n  function includeModule(entryModule: Module<MixedOutput>) {\n    for (const dependency of entryModule.dependencies.values()) {\n      if (\n        dependency.data.data.asyncType === 'async' &&\n        // Support disabling multiple chunks.\n        splitChunks\n      ) {\n        gatherChunks(\n          chunks,\n          { test: pathToRegex(dependency.absolutePath) },\n          [],\n          graph,\n          options,\n          true\n        );\n      } else {\n        const module = graph.dependencies.get(dependency.absolutePath);\n        if (module) {\n          // Prevent circular dependencies from creating infinite loops.\n          if (!entryChunk.deps.has(module)) {\n            entryChunk.deps.add(module);\n            includeModule(module);\n          }\n        }\n      }\n    }\n  }\n\n  for (const entryModule of entryModules) {\n    includeModule(entryModule);\n  }\n\n  return chunks;\n}\n\nasync function serializeChunksAsync(\n  chunks: Set<Chunk>,\n  serializerConfig: Partial<SerializerConfigT>,\n  options: SerializeChunkOptions\n) {\n  const jsAssets: SerialAsset[] = [];\n\n  const chunksArray = [...chunks.values()];\n  await Promise.all(\n    chunksArray.map(async (chunk) => {\n      jsAssets.push(\n        ...(await chunk.serializeToAssetsAsync(serializerConfig, chunksArray, options))\n      );\n    })\n  );\n\n  return jsAssets;\n}\n\nexport function getSortedModules(\n  modules: Module<MixedOutput>[],\n  {\n    createModuleId,\n  }: {\n    createModuleId: (path: string) => number;\n  }\n): readonly Module<any>[] {\n  // Assign IDs to modules in a consistent order\n  for (const module of modules) {\n    createModuleId(module.path);\n  }\n  // Sort by IDs\n  return modules.sort(\n    (a: Module<any>, b: Module<any>) => createModuleId(a.path) - createModuleId(b.path)\n  );\n}\n"],"mappings":"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"}