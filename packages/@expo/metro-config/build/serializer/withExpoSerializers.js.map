{"version":3,"file":"withExpoSerializers.js","names":["_assert","data","_interopRequireDefault","require","_jscSafeUrl","_getAssets","_sourceMapString","_bundleToString","_path","_pathToRegexp","_environmentVariableSerializerPlugin","_exportHermes","_exportPath","_baseJSBundle","_getCssDeps","_serializerAssets","_env","obj","__esModule","default","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","withExpoSerializers","config","processors","push","serverPreludeSerializerPlugin","env","EXPO_NO_CLIENT_ENV_VARS","environmentVariableSerializerPlugin","withSerializerPlugins","_config$serializer","originalSerializer","serializer","customSerializer","createSerializerFromSerialProcessors","getDefaultSerializer","fallbackSerializer","serializerConfig","defaultSerializer","params","bundle","baseJSBundle","outputCode","bundleToString","code","props","entryFile","preModules","graph","options","customSerializerOptions","serializerOptions","supportsNonSerialReturn","output","outputMode","includeSourceMaps","includeMaps","sourceUrl","isJscSafeUrl","toNormalUrl","url","URL","searchParams","get","assets","graphToSerialAssetsAsync","JSON","stringify","_config$serializer2","_assetPlugins","_getPlatformOption","cssDeps","getCssSerialAssets","dependencies","projectRoot","processModuleFilter","_chunks","Set","test","pathToRegExp","map","chunkSettings","gatherChunks","jsAssets","serializeChunksAsync","metroAssets","getMetroAssets","assetPlugins","transformer","platform","getPlatformOption","publicPath","artifacts","Chunk","constructor","name","entries","isAsync","deps","getPlatform","assert","transformOptions","getFilename","dev","getExportPathForDependencyWithOptions","serverRoot","serializeToCode","_serializerConfig$get","_serializerConfig$get2","_getBasePathOption","fileName","path","basename","jsSplitBundle","baseJSBundleWithDependencies","values","runBeforeMainModule","getModulesRunBeforeMainModule","relative","runModule","modulesOnly","size","sourceMapUrl","basePath","getBasePathOption","splitChunks","getSplitChunksOption","serializeToAssetsAsync","jsCode","relativeEntry","outputFile","jsAsset","filename","originFilename","type","metadata","requires","requiredChunks","chunk","source","modules","getSortedModules","createModuleId","module","startsWith","_this$options$serverR","sourceMap","sourceMapString","isHermesEnabled","hermesBundleOutput","buildHermesBundleAsync","minify","hbc","replace","sourcemap","_this$graph$transform","customTransformOptions","engine","getEntryModulesForChunkSettings","settings","filter","chunkIdForModules","sort","join","chunks","entryModules","existingChunks","find","includes","length","entryChunk","preChunk","add","includeModule","entryModule","dependency","asyncType","absolutePath","has","Promise","all","a","b","finalSerializer","processor"],"sources":["../../src/serializer/withExpoSerializers.ts"],"sourcesContent":["/**\n * Copyright Â© 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport assert from 'assert';\nimport { isJscSafeUrl, toNormalUrl } from 'jsc-safe-url';\nimport {\n  Module,\n  MixedOutput,\n  ReadOnlyGraph,\n  SerializerOptions,\n  MetroConfig,\n  AssetData,\n} from 'metro';\nimport getMetroAssets from 'metro/src/DeltaBundler/Serializers/getAssets';\n// @ts-expect-error\nimport sourceMapString from 'metro/src/DeltaBundler/Serializers/sourceMapString';\nimport bundleToString from 'metro/src/lib/bundleToString';\nimport { ConfigT, InputConfigT, SerializerConfigT } from 'metro-config';\nimport path from 'path';\nimport pathToRegExp from 'path-to-regexp';\n\nimport {\n  environmentVariableSerializerPlugin,\n  serverPreludeSerializerPlugin,\n} from './environmentVariableSerializerPlugin';\nimport { buildHermesBundleAsync } from './exportHermes';\nimport { getExportPathForDependencyWithOptions } from './exportPath';\n// import baseJSBundle from 'metro/src/DeltaBundler/Serializers/baseJSBundle';\nimport {\n  baseJSBundle,\n  baseJSBundleWithDependencies,\n  getBasePathOption,\n  getPlatformOption,\n  getSplitChunksOption,\n} from './fork/baseJSBundle';\nimport { getCssSerialAssets } from './getCssDeps';\nimport { SerialAsset } from './serializerAssets';\nimport { env } from '../env';\n\n// import { toFixture } from './__tests__/fixtures/toFixture';\nexport type Serializer = NonNullable<ConfigT['serializer']['customSerializer']>;\n\nexport type SerializerParameters = Parameters<Serializer>;\n\n// A serializer that processes the input and returns a modified version.\n// Unlike a serializer, these can be chained together.\nexport type SerializerPlugin = (...props: SerializerParameters) => SerializerParameters;\n\nexport function withExpoSerializers(config: InputConfigT): InputConfigT {\n  const processors: SerializerPlugin[] = [];\n  processors.push(serverPreludeSerializerPlugin);\n  if (!env.EXPO_NO_CLIENT_ENV_VARS) {\n    processors.push(environmentVariableSerializerPlugin);\n  }\n\n  return withSerializerPlugins(config, processors);\n}\n\n// There can only be one custom serializer as the input doesn't match the output.\n// Here we simply run\nexport function withSerializerPlugins(\n  config: InputConfigT,\n  processors: SerializerPlugin[]\n): InputConfigT {\n  const originalSerializer = config.serializer?.customSerializer;\n\n  return {\n    ...config,\n    serializer: {\n      ...config.serializer,\n      customSerializer: createSerializerFromSerialProcessors(\n        config,\n        processors,\n        originalSerializer\n      ),\n    },\n  };\n}\n\nfunction getDefaultSerializer(\n  config: MetroConfig,\n  fallbackSerializer?: Serializer | null\n): Serializer {\n  const serializerConfig = config.serializer;\n  const defaultSerializer =\n    fallbackSerializer ??\n    (async (...params: SerializerParameters) => {\n      const bundle = baseJSBundle(...params);\n      const outputCode = bundleToString(bundle).code;\n      return outputCode;\n    });\n  return async (\n    ...props: SerializerParameters\n  ): Promise<string | { code: string; map: string }> => {\n    const [entryFile, preModules, graph, options] = props;\n\n    // @ts-expect-error\n    const customSerializerOptions = options.serializerOptions;\n\n    // Custom options can only be passed outside of the dev server, meaning\n    // we don't need to stringify the results at the end, i.e. this is `npx expo export` or `npx expo export:embed`.\n    const supportsNonSerialReturn = !!customSerializerOptions?.output;\n\n    const serializerOptions = (() => {\n      if (customSerializerOptions) {\n        return {\n          outputMode: customSerializerOptions.output,\n          includeSourceMaps: customSerializerOptions.includeMaps,\n        };\n      }\n      if (options.sourceUrl) {\n        const sourceUrl = isJscSafeUrl(options.sourceUrl)\n          ? toNormalUrl(options.sourceUrl)\n          : options.sourceUrl;\n\n        const url = new URL(sourceUrl, 'https://expo.dev');\n\n        return {\n          outputMode: url.searchParams.get('serializer.output'),\n          includeSourceMaps: url.searchParams.get('serializer.map') === 'true',\n        };\n      }\n      return null;\n    })();\n\n    if (serializerOptions?.outputMode !== 'static') {\n      return defaultSerializer(...props);\n    }\n\n    const assets = await graphToSerialAssetsAsync(\n      config,\n      { includeMaps: serializerOptions.includeSourceMaps },\n      ...props\n    );\n\n    if (supportsNonSerialReturn) {\n      // @ts-expect-error: this is future proofing for adding assets to the output as well.\n      return assets;\n    }\n\n    return JSON.stringify(assets);\n  };\n}\n\ntype ChunkSettings = {\n  /** Match the initial modules. */\n  test: RegExp;\n};\n\nexport async function graphToSerialAssetsAsync(\n  config: MetroConfig,\n  { includeMaps }: { includeMaps: boolean },\n  ...props: SerializerParameters\n): Promise<{ artifacts: SerialAsset[] | null; assets: AssetData[] }> {\n  const [entryFile, preModules, graph, options] = props;\n\n  const cssDeps = getCssSerialAssets<MixedOutput>(graph.dependencies, {\n    projectRoot: options.projectRoot,\n    processModuleFilter: options.processModuleFilter,\n  });\n\n  // Create chunks for splitting.\n  const _chunks = new Set<Chunk>();\n\n  [\n    {\n      test: pathToRegExp(entryFile),\n    },\n  ].map((chunkSettings) => gatherChunks(_chunks, chunkSettings, preModules, graph, options, false));\n\n  // console.log('Chunks:');\n  // console.log(inspect([..._chunks], { depth: 3, colors: true }));\n  // Optimize the chunks\n  // dedupeChunks(_chunks);\n\n  const jsAssets = await serializeChunksAsync(_chunks, config.serializer ?? {}, {\n    includeSourceMaps: includeMaps,\n  });\n\n  // TODO: Convert to serial assets\n  // TODO: Disable this call dynamically in development since assets are fetched differently.\n  const metroAssets = (await getMetroAssets(graph.dependencies, {\n    processModuleFilter: options.processModuleFilter,\n    assetPlugins: config.transformer!.assetPlugins ?? [],\n    platform: getPlatformOption(graph, options) ?? 'web',\n    projectRoot: options.projectRoot, // this._getServerRootDir(),\n    publicPath: config.transformer!.publicPath!,\n  })) as AssetData[];\n\n  return { artifacts: [...jsAssets, ...cssDeps], assets: metroAssets };\n}\n\nclass Chunk {\n  public deps: Set<Module> = new Set();\n  public preModules: Set<Module> = new Set();\n\n  // Chunks that are required to be loaded synchronously before this chunk.\n  // These are included in the HTML as <script> tags.\n  public requiredChunks: Set<Chunk> = new Set();\n\n  constructor(\n    public name: string,\n    public entries: Module<MixedOutput>[],\n    public graph: ReadOnlyGraph<MixedOutput>,\n    public options: SerializerOptions<MixedOutput>,\n    public isAsync: boolean = false\n  ) {\n    this.deps = new Set(entries);\n  }\n\n  private getPlatform() {\n    assert(\n      this.graph.transformOptions.platform,\n      \"platform is required to be in graph's transformOptions\"\n    );\n    return this.graph.transformOptions.platform;\n  }\n\n  getFilename() {\n    // TODO: Content hash is needed\n    return this.options.dev\n      ? this.name\n      : getExportPathForDependencyWithOptions(this.name, {\n          platform: this.getPlatform(),\n          serverRoot: this.options.serverRoot,\n        });\n  }\n\n  serializeToCode(serializerConfig: Partial<SerializerConfigT>) {\n    const entryFile = this.name;\n    const fileName = path.basename(entryFile, '.js');\n\n    const jsSplitBundle = baseJSBundleWithDependencies(\n      entryFile,\n      [...this.preModules.values()],\n      [...this.deps],\n      {\n        ...this.options,\n        runBeforeMainModule:\n          serializerConfig?.getModulesRunBeforeMainModule?.(\n            path.relative(this.options.projectRoot, entryFile)\n          ) ?? [],\n        // searchParams.set('modulesOnly', 'true');\n        // searchParams.set('runModule', 'false');\n\n        // TODO: Test cases when an async module has global side-effects that should be run.\n        // This should be fine as those side-effects would be defined in the module itself, which would be executed upon loading.\n        runModule: !this.isAsync,\n        modulesOnly: this.preModules.size === 0,\n        platform: this.getPlatform(),\n        sourceMapUrl: `${fileName}.map`,\n        basePath: getBasePathOption(this.graph, this.options) ?? '/',\n        splitChunks: getSplitChunksOption(this.graph, this.options),\n      }\n    );\n\n    return bundleToString(jsSplitBundle).code;\n  }\n\n  async serializeToAssetsAsync(\n    serializerConfig: Partial<SerializerConfigT>,\n    { includeSourceMaps }: { includeSourceMaps?: boolean }\n  ): Promise<SerialAsset[]> {\n    const jsCode = this.serializeToCode(serializerConfig);\n\n    const relativeEntry = path.relative(this.options.projectRoot, this.name);\n    const outputFile = this.getFilename();\n\n    const jsAsset: SerialAsset = {\n      filename: outputFile,\n      originFilename: relativeEntry,\n      type: 'js',\n      metadata: {\n        isAsync: this.isAsync,\n        requires: [...this.requiredChunks.values()].map((chunk) => chunk.getFilename()),\n      },\n      source: jsCode,\n    };\n\n    const assets: SerialAsset[] = [jsAsset];\n\n    if (\n      // Only include the source map if the `options.sourceMapUrl` option is provided and we are exporting a static build.\n      includeSourceMaps &&\n      this.options.sourceMapUrl\n    ) {\n      const modules = [\n        ...this.preModules,\n        ...getSortedModules([...this.deps], {\n          createModuleId: this.options.createModuleId,\n        }),\n      ].map((module) => {\n        // TODO: Make this user-configurable.\n\n        // Make all paths relative to the server root to prevent the entire user filesystem from being exposed.\n        if (module.path.startsWith('/')) {\n          return {\n            ...module,\n            path:\n              '/' + path.relative(this.options.serverRoot ?? this.options.projectRoot, module.path),\n          };\n        }\n        return module;\n      });\n\n      const sourceMap = sourceMapString(modules, {\n        ...this.options,\n      });\n\n      assets.push({\n        filename: this.options.dev ? jsAsset.filename + '.map' : outputFile + '.map',\n        originFilename: jsAsset.originFilename,\n        type: 'map',\n        metadata: {},\n        source: sourceMap,\n      });\n    }\n\n    if (this.isHermesEnabled()) {\n      // TODO: Generate hbc for each chunk\n      const hermesBundleOutput = await buildHermesBundleAsync({\n        filename: this.name,\n        code: jsAsset.source,\n        map: assets[1] ? assets[1].source : null,\n        // TODO: Maybe allow prod + no minify.\n        minify: true, //!this.options.dev,\n      });\n\n      if (hermesBundleOutput.hbc) {\n        // TODO: Unclear if we should add multiple assets, link the assets, or mutate the first asset.\n        // jsAsset.metadata.hbc = hermesBundleOutput.hbc;\n        // @ts-expect-error: TODO\n        jsAsset.source = hermesBundleOutput.hbc;\n        jsAsset.filename = jsAsset.filename.replace(/\\.js$/, '.hbc');\n      }\n      if (assets[1] && hermesBundleOutput.sourcemap) {\n        // TODO: Unclear if we should add multiple assets, link the assets, or mutate the first asset.\n        assets[1].source = hermesBundleOutput.sourcemap;\n      }\n    }\n\n    return assets;\n  }\n\n  isHermesEnabled() {\n    // TODO: Revisit.\n    // TODO: There could be an issue with having the serializer for export:embed output hermes since the native scripts will\n    // also create hermes bytecode. We may need to disable in one of the two places.\n    return (\n      !this.options.dev &&\n      this.getPlatform() !== 'web' &&\n      this.graph.transformOptions.customTransformOptions?.engine === 'hermes'\n    );\n  }\n}\n\nfunction getEntryModulesForChunkSettings(graph: ReadOnlyGraph, settings: ChunkSettings) {\n  return [...graph.dependencies.entries()]\n    .filter(([path]) => settings.test.test(path))\n    .map(([, module]) => module);\n}\n\nfunction chunkIdForModules(modules: Module[]) {\n  return modules\n    .map((module) => module.path)\n    .sort()\n    .join('=>');\n}\n\nfunction gatherChunks(\n  chunks: Set<Chunk>,\n  settings: ChunkSettings,\n  preModules: readonly Module[],\n  graph: ReadOnlyGraph,\n  options: SerializerOptions<MixedOutput>,\n  isAsync: boolean = false\n): Set<Chunk> {\n  let entryModules = getEntryModulesForChunkSettings(graph, settings);\n\n  const existingChunks = [...chunks.values()];\n\n  entryModules = entryModules.filter((module) => {\n    return !existingChunks.find((chunk) => chunk.entries.includes(module));\n  });\n\n  // if (!entryModules.length) {\n  //   throw new Error('Entry module not found in graph: ' + entryFile);\n  // }\n\n  // Prevent processing the same entry file twice.\n  if (!entryModules.length) {\n    return chunks;\n  }\n\n  const entryChunk = new Chunk(\n    chunkIdForModules(entryModules),\n    entryModules,\n    graph,\n    options,\n    isAsync\n  );\n\n  // Add all the pre-modules to the first chunk.\n  if (preModules.length) {\n    if (graph.transformOptions.platform === 'web' && !isAsync) {\n      // On web, add a new required chunk that will be included in the HTML.\n      const preChunk = new Chunk(\n        chunkIdForModules([...preModules]),\n        [...preModules],\n        graph,\n        options\n      );\n      // for (const module of preModules.values()) {\n      //   preChunk.deps.add(module);\n      // }\n      chunks.add(preChunk);\n      entryChunk.requiredChunks.add(preChunk);\n    } else {\n      // On native, use the preModules in insert code in the entry chunk.\n      for (const module of preModules.values()) {\n        entryChunk.preModules.add(module);\n      }\n    }\n  }\n\n  const splitChunks = getSplitChunksOption(graph, options);\n  chunks.add(entryChunk);\n\n  // entryChunk.deps.add(entryModule);\n\n  function includeModule(entryModule: Module<MixedOutput>) {\n    for (const dependency of entryModule.dependencies.values()) {\n      if (\n        dependency.data.data.asyncType === 'async' &&\n        // Support disabling multiple chunks.\n        splitChunks\n      ) {\n        gatherChunks(\n          chunks,\n          { test: pathToRegExp(dependency.absolutePath) },\n          [],\n          graph,\n          options,\n          true\n        );\n      } else {\n        const module = graph.dependencies.get(dependency.absolutePath);\n        if (module) {\n          // Prevent circular dependencies from creating infinite loops.\n          if (!entryChunk.deps.has(module)) {\n            entryChunk.deps.add(module);\n            includeModule(module);\n          }\n        }\n      }\n    }\n  }\n\n  for (const entryModule of entryModules) {\n    includeModule(entryModule);\n  }\n\n  return chunks;\n}\n\n// function dedupeChunks(chunks: Set<Chunk>) {\n//   // Iterate chunks and pull duplicate modules into new common chunks that are required by the original chunks.\n\n//   // We can only de-dupe sync chunks since this would create vendor/shared chunks.\n//   const currentChunks = [...chunks.values()].filter((chunk) => !chunk.isAsync);\n//   for (const chunk of currentChunks) {\n//     const deps = [...chunk.deps.values()];\n//     for (const dep of deps) {\n//       for (const otherChunk of currentChunks) {\n//         if (otherChunk === chunk) {\n//           continue;\n//         }\n//         if (otherChunk.deps.has(dep)) {\n//           console.log('found common dep:', dep.path, 'in', chunk.name, 'and', otherChunk.name);\n//           // Move the dep into a new chunk.\n//           const newChunk = new Chunk(dep.path, dep.path, chunk.graph, chunk.options, false);\n//           newChunk.deps.add(dep);\n//           chunk.requiredChunks.add(newChunk);\n//           otherChunk.requiredChunks.add(newChunk);\n//           chunks.add(newChunk);\n//           // Remove the dep from the original chunk.\n//           chunk.deps.delete(dep);\n//           otherChunk.deps.delete(dep);\n\n//           // TODO: Pull all the deps of the dep into the new chunk.\n//           for (const depDep of dep.dependencies.values()) {\n//             if (depDep.data.data.asyncType === 'async') {\n//               gatherChunks(chunks, depDep.absolutePath, [], chunk.graph, chunk.options, false);\n//             } else {\n//               const module = chunk.graph.dependencies.get(depDep.absolutePath);\n//               if (module) {\n//                 newChunk.deps.add(module);\n//                 if (chunk.deps.has(module)) {\n//                   chunk.deps.delete(module);\n//                 }\n//                 if (otherChunk.deps.has(module)) {\n//                   otherChunk.deps.delete(module);\n//                 }\n//               }\n//             }\n//           }\n//         }\n//       }\n//     }\n//   }\n// }\n\nasync function serializeChunksAsync(\n  chunks: Set<Chunk>,\n  serializerConfig: Partial<SerializerConfigT>,\n  { includeSourceMaps }: { includeSourceMaps: boolean }\n) {\n  const jsAssets: SerialAsset[] = [];\n\n  await Promise.all(\n    [...chunks].map(async (chunk) => {\n      jsAssets.push(\n        ...(await chunk.serializeToAssetsAsync(serializerConfig, { includeSourceMaps }))\n      );\n    })\n  );\n\n  return jsAssets;\n}\n\nfunction getSortedModules(\n  modules: Module<MixedOutput>[],\n  {\n    createModuleId,\n  }: {\n    createModuleId: (path: string) => number;\n  }\n): readonly Module<any>[] {\n  // const modules = [...graph.dependencies.values()];\n  // Assign IDs to modules in a consistent order\n  for (const module of modules) {\n    createModuleId(module.path);\n  }\n  // Sort by IDs\n  return modules.sort(\n    (a: Module<any>, b: Module<any>) => createModuleId(a.path) - createModuleId(b.path)\n  );\n}\n\nexport function createSerializerFromSerialProcessors(\n  config: MetroConfig,\n  processors: (SerializerPlugin | undefined)[],\n  originalSerializer?: Serializer | null\n): Serializer {\n  const finalSerializer = getDefaultSerializer(config, originalSerializer);\n  return (...props: SerializerParameters): ReturnType<Serializer> => {\n    // toFixture(...props);\n    for (const processor of processors) {\n      if (processor) {\n        props = processor(...props);\n      }\n    }\n\n    return finalSerializer(...props);\n  };\n}\n\nexport { SerialAsset };\n"],"mappings":"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"}