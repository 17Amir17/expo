{"version":3,"file":"withExpoSerializers.js","names":["_assert","data","_interopRequireDefault","require","_jscSafeUrl","_sourceMapString","_bundleToString","_path","_environmentVariableSerializerPlugin","_exportPath","_baseJSBundle","_getCssDeps","_serializerAssets","_env","obj","__esModule","default","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","withExpoSerializers","config","processors","push","serverPreludeSerializerPlugin","env","EXPO_NO_CLIENT_ENV_VARS","environmentVariableSerializerPlugin","withSerializerPlugins","_config$serializer","_config$serializer2","originalSerializer","serializer","customSerializer","createSerializerFromSerialProcessors","getDefaultSerializer","serializerConfig","fallbackSerializer","defaultSerializer","params","bundle","baseJSBundle","outputCode","bundleToString","code","props","_chunks$map","entryFile","preModules","graph","options","platform","getPlatformOption","sourceUrl","isJscSafeUrl","toNormalUrl","url","URL","searchParams","get","multipleEntries","multipleEntriesParam","JSON","parse","Array","isArray","Error","map","entry","decodeURIComponent","includes","serverRoot","path","join","forEach","fp","dependencies","chunks","has","allEntryFiles","Set","chunk","inputs","flat","console","log","includeSourceMaps","cssDeps","getCssSerialAssets","projectRoot","processModuleFilter","_chunks","unique","gatherChunks","dedupeChunks","jsAssets","serializeChunks","stringify","arr","Chunk","constructor","name","isAsync","getPlatform","assert","transformOptions","getFilename","dev","getExportPathForDependencyWithOptions","serializeToCode","fileName","basename","jsSplitBundle","baseJSBundleWithDependencies","values","deps","runBeforeMainModule","getModulesRunBeforeMainModule","relative","sourceMapUrl","serializeToAssets","jsCode","relativeEntry","outputFile","jsAsset","filename","originFilename","type","metadata","requires","requiredChunks","source","modules","getSortedModules","createModuleId","module","startsWith","_this$options$serverR","sourceMap","sourceMapString","entryModule","find","entryChunk","length","preChunk","add","dependency","asyncType","absolutePath","currentChunks","filter","dep","otherChunk","newChunk","delete","depDep","sort","a","b","finalSerializer","processor"],"sources":["../../src/serializer/withExpoSerializers.ts"],"sourcesContent":["/**\n * Copyright Â© 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport assert from 'assert';\nimport { isJscSafeUrl, toNormalUrl } from 'jsc-safe-url';\nimport { MixedOutput, Module, ReadOnlyGraph, SerializerOptions } from 'metro';\n// @ts-expect-error\nimport sourceMapString from 'metro/src/DeltaBundler/Serializers/sourceMapString';\nimport bundleToString from 'metro/src/lib/bundleToString';\nimport { ConfigT, InputConfigT, SerializerConfigT } from 'metro-config';\nimport path from 'path';\n\nimport {\n  environmentVariableSerializerPlugin,\n  serverPreludeSerializerPlugin,\n} from './environmentVariableSerializerPlugin';\nimport { getExportPathForDependencyWithOptions } from './exportPath';\nimport { baseJSBundle, baseJSBundleWithDependencies, getPlatformOption } from './fork/baseJSBundle';\nimport { getCssSerialAssets } from './getCssDeps';\nimport { SerialAsset } from './serializerAssets';\nimport { env } from '../env';\n\n// import { toFixture } from './__tests__/fixtures/toFixture';\nexport type Serializer = NonNullable<ConfigT['serializer']['customSerializer']>;\n\nexport type SerializerParameters = Parameters<Serializer>;\n\n// A serializer that processes the input and returns a modified version.\n// Unlike a serializer, these can be chained together.\nexport type SerializerPlugin = (...props: SerializerParameters) => SerializerParameters;\n\nexport function withExpoSerializers(config: InputConfigT): InputConfigT {\n  const processors: SerializerPlugin[] = [];\n  processors.push(serverPreludeSerializerPlugin);\n  if (!env.EXPO_NO_CLIENT_ENV_VARS) {\n    processors.push(environmentVariableSerializerPlugin);\n  }\n\n  return withSerializerPlugins(config, processors);\n}\n\n// There can only be one custom serializer as the input doesn't match the output.\n// Here we simply run\nexport function withSerializerPlugins(\n  config: InputConfigT,\n  processors: SerializerPlugin[]\n): InputConfigT {\n  const originalSerializer = config.serializer?.customSerializer;\n\n  return {\n    ...config,\n    serializer: {\n      ...config.serializer,\n      customSerializer: createSerializerFromSerialProcessors(\n        // @ts-expect-error\n        config.serializer ?? {},\n        processors,\n        originalSerializer\n      ),\n    },\n  };\n}\nexport function getDefaultSerializer(\n  serializerConfig: ConfigT['serializer'],\n  fallbackSerializer?: Serializer | null\n): Serializer {\n  const defaultSerializer =\n    fallbackSerializer ??\n    (async (...params: SerializerParameters) => {\n      const bundle = baseJSBundle(...params);\n      const outputCode = bundleToString(bundle).code;\n      return outputCode;\n    });\n  return async (\n    ...props: SerializerParameters\n  ): Promise<string | { code: string; map: string }> => {\n    const [entryFile, preModules, graph, options] = props;\n\n    const platform = getPlatformOption(graph, options);\n\n    // toFixture(...props);\n    if (!options.sourceUrl) {\n      return defaultSerializer(...props);\n    }\n\n    const sourceUrl = isJscSafeUrl(options.sourceUrl)\n      ? toNormalUrl(options.sourceUrl)\n      : options.sourceUrl;\n\n    const url = new URL(sourceUrl, 'https://expo.dev');\n\n    if (platform !== 'web' || url.searchParams.get('serializer.output') !== 'static') {\n      // Default behavior if `serializer.output=static` is not present in the URL.\n      return defaultSerializer(entryFile, preModules, graph, options);\n    }\n\n    let multipleEntries: string[] = [];\n    const multipleEntriesParam = url.searchParams.get('serializer.entries');\n    if (multipleEntriesParam && typeof multipleEntriesParam === 'string') {\n      multipleEntries = JSON.parse(multipleEntriesParam) as any;\n\n      if (!Array.isArray(multipleEntries)) {\n        throw new Error('serializer.entries must be an array of strings');\n      }\n\n      multipleEntries = multipleEntries.map((entry) => {\n        entry = decodeURIComponent(entry);\n        if (entry.includes(options.serverRoot)) {\n          return entry;\n        }\n        return path.join(options.serverRoot, entry);\n      }) as string[];\n\n      multipleEntries.forEach((fp) => {\n        if (!graph.dependencies.get(fp)) {\n          throw new Error(`Entry file not found in graph: ${fp}`);\n        }\n      });\n    }\n\n    const chunks:\n      | {\n          // Leaf file-path.\n          name: string;\n          // Relative file paths.\n          inputs: string[];\n        }[]\n      | null = url.searchParams.has('serializer.chunks')\n      ? JSON.parse(url.searchParams.get('serializer.chunks')!)\n      : null;\n\n    const allEntryFiles = new Set([\n      // Entry file for all chunks.\n      entryFile,\n      // Entry files for each chunk.\n      ...(chunks?.map((chunk) => chunk.inputs) ?? []).flat(),\n    ]);\n\n    console.log('process chunks:', entryFile, chunks, allEntryFiles);\n\n    const includeSourceMaps = url.searchParams.get('serializer.map') === 'true';\n\n    const cssDeps = getCssSerialAssets<MixedOutput>(graph.dependencies, {\n      projectRoot: options.projectRoot,\n      processModuleFilter: options.processModuleFilter,\n    });\n\n    // JS\n\n    const _chunks = new Set<Chunk>();\n\n    unique([entryFile, ...multipleEntries]).map((entryFile) =>\n      gatherChunks(_chunks, entryFile, preModules, graph, options, false)\n    );\n\n    // Optimize the chunks\n    dedupeChunks(_chunks);\n\n    const jsAssets = serializeChunks(_chunks, serializerConfig, {\n      includeSourceMaps,\n    });\n\n    return JSON.stringify([...jsAssets, ...cssDeps]);\n  };\n}\n\nfunction unique<T>(arr: T[]): T[] {\n  return [...new Set(arr)];\n}\n\nclass Chunk {\n  public deps: Set<Module> = new Set();\n  public preModules: Set<Module> = new Set();\n\n  // Chunks that are required to be loaded synchronously before this chunk.\n  // These are included in the HTML as <script> tags.\n  public requiredChunks: Set<Chunk> = new Set();\n\n  constructor(\n    public name: string,\n    public entry: string,\n    public graph: ReadOnlyGraph<MixedOutput>,\n    public options: SerializerOptions<MixedOutput>,\n    public isAsync: boolean = false\n  ) {}\n\n  private getPlatform() {\n    assert(\n      this.graph.transformOptions.platform,\n      \"platform is required to be in graph's transformOptions\"\n    );\n    return this.graph.transformOptions.platform;\n  }\n\n  getFilename() {\n    // TODO: Content hash is needed\n    return this.options.dev\n      ? this.entry\n      : getExportPathForDependencyWithOptions(this.entry, {\n          platform: this.getPlatform(),\n          serverRoot: this.options.serverRoot,\n        });\n  }\n\n  serializeToCode(serializerConfig: SerializerConfigT) {\n    const entryFile = this.entry;\n    const fileName = path.basename(entryFile, '.js');\n\n    const jsSplitBundle = baseJSBundleWithDependencies(\n      entryFile,\n      [...this.preModules.values()],\n      [...this.deps],\n      {\n        ...this.options,\n        runBeforeMainModule: serializerConfig.getModulesRunBeforeMainModule(\n          path.relative(this.options.projectRoot, entryFile)\n        ),\n        platform: this.getPlatform(),\n        // ...(entryFile === '[vendor]'\n        //   ? {\n        //       runModule: false,\n        //       modulesOnly: true,\n        //       runBeforeMainModule: [],\n        //     }\n        //   : {}),\n        sourceMapUrl: `${fileName}.map`,\n      }\n    );\n\n    return bundleToString(jsSplitBundle).code;\n  }\n\n  serializeToAssets(\n    serializerConfig: SerializerConfigT,\n    { includeSourceMaps }: { includeSourceMaps?: boolean }\n  ): SerialAsset[] {\n    const jsCode = this.serializeToCode(serializerConfig);\n\n    const relativeEntry = path.relative(this.options.projectRoot, this.entry);\n    const outputFile = this.getFilename();\n\n    const jsAsset: SerialAsset = {\n      filename: outputFile,\n      originFilename: relativeEntry,\n      type: 'js',\n      metadata: {\n        requires: [...this.requiredChunks.values()].map((chunk) => chunk.getFilename()),\n      },\n      source: jsCode,\n    };\n\n    if (\n      // Only include the source map if the `options.sourceMapUrl` option is provided and we are exporting a static build.\n      includeSourceMaps &&\n      this.options.sourceMapUrl\n    ) {\n      const modules = [\n        ...this.preModules,\n        ...getSortedModules([...this.deps], {\n          createModuleId: this.options.createModuleId,\n        }),\n      ].map((module) => {\n        // TODO: Make this user-configurable.\n\n        // Make all paths relative to the server root to prevent the entire user filesystem from being exposed.\n        if (module.path.startsWith('/')) {\n          return {\n            ...module,\n            path:\n              '/' + path.relative(this.options.serverRoot ?? this.options.projectRoot, module.path),\n          };\n        }\n        return module;\n      });\n\n      const sourceMap = sourceMapString(modules, {\n        ...this.options,\n      });\n\n      return [\n        jsAsset,\n        {\n          filename: this.options.dev ? 'index.map' : `_expo/static/js/web/${outputFile}.map`,\n          originFilename: 'index.map',\n          type: 'map',\n          metadata: {},\n          source: sourceMap,\n        },\n      ];\n    }\n\n    return [jsAsset];\n  }\n}\n\nfunction gatherChunks(\n  chunks: Set<Chunk>,\n  entryFile: string,\n  preModules: readonly Module[],\n  graph: ReadOnlyGraph,\n  options: SerializerOptions<MixedOutput>,\n  isAsync: boolean = false\n): Set<Chunk> {\n  const entryModule = graph.dependencies.get(entryFile);\n  if (!entryModule) {\n    throw new Error('Entry module not found in graph: ' + entryFile);\n  }\n\n  // Prevent processing the same entry file twice.\n  if ([...chunks.values()].find((chunk) => chunk.entry === entryFile)) {\n    return chunks;\n  }\n\n  const entryChunk = new Chunk(entryFile, entryFile, graph, options, isAsync);\n\n  // Add all the pre-modules to the first chunk.\n  if (preModules.length) {\n    if (graph.transformOptions.platform === 'web' && !isAsync) {\n      // On web, add a new required chunk that will be included in the HTML.\n      const preChunk = new Chunk('__premodules__', '__premodules__', graph, options);\n      for (const module of preModules.values()) {\n        preChunk.deps.add(module);\n      }\n      chunks.add(preChunk);\n      entryChunk.requiredChunks.add(preChunk);\n    } else {\n      // On native, use the preModules in insert code in the entry chunk.\n      for (const module of preModules.values()) {\n        entryChunk.preModules.add(module);\n      }\n    }\n  }\n\n  chunks.add(entryChunk);\n\n  entryChunk.deps.add(entryModule);\n  for (const dependency of entryModule.dependencies.values()) {\n    if (dependency.data.data.asyncType === 'async') {\n      gatherChunks(chunks, dependency.absolutePath, [], graph, options, true);\n    } else {\n      const module = graph.dependencies.get(dependency.absolutePath);\n      if (module) {\n        entryChunk.deps.add(module);\n      }\n    }\n  }\n\n  return chunks;\n}\n\nfunction dedupeChunks(chunks: Set<Chunk>) {\n  // Iterate chunks and pull duplicate modules into new common chunks that are required by the original chunks.\n\n  // We can only de-dupe sync chunks since this would create vendor/shared chunks.\n  const currentChunks = [...chunks.values()].filter((chunk) => !chunk.isAsync);\n  for (const chunk of currentChunks) {\n    const deps = [...chunk.deps.values()];\n    for (const dep of deps) {\n      for (const otherChunk of currentChunks) {\n        if (otherChunk === chunk) {\n          continue;\n        }\n        if (otherChunk.deps.has(dep)) {\n          console.log('found common dep:', dep.path, 'in', chunk.name, 'and', otherChunk.name);\n          // Move the dep into a new chunk.\n          const newChunk = new Chunk(dep.path, dep.path, chunk.graph, chunk.options, false);\n          newChunk.deps.add(dep);\n          chunk.requiredChunks.add(newChunk);\n          otherChunk.requiredChunks.add(newChunk);\n          chunks.add(newChunk);\n          // Remove the dep from the original chunk.\n          chunk.deps.delete(dep);\n          otherChunk.deps.delete(dep);\n\n          // TODO: Pull all the deps of the dep into the new chunk.\n          for (const depDep of dep.dependencies.values()) {\n            if (depDep.data.data.asyncType === 'async') {\n              gatherChunks(chunks, depDep.absolutePath, [], chunk.graph, chunk.options, false);\n            } else {\n              const module = chunk.graph.dependencies.get(depDep.absolutePath);\n              if (module) {\n                newChunk.deps.add(module);\n                if (chunk.deps.has(module)) {\n                  chunk.deps.delete(module);\n                }\n                if (otherChunk.deps.has(module)) {\n                  otherChunk.deps.delete(module);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction serializeChunks(\n  chunks: Set<Chunk>,\n  serializerConfig: SerializerConfigT,\n  { includeSourceMaps }: { includeSourceMaps: boolean }\n) {\n  const jsAssets: SerialAsset[] = [];\n\n  chunks.forEach((chunk) => {\n    jsAssets.push(...chunk.serializeToAssets(serializerConfig, { includeSourceMaps }));\n  });\n\n  return jsAssets;\n}\n\nfunction getSortedModules(\n  modules: Module<MixedOutput>[],\n  {\n    createModuleId,\n  }: {\n    createModuleId: (path: string) => number;\n  }\n): readonly Module<any>[] {\n  // const modules = [...graph.dependencies.values()];\n  // Assign IDs to modules in a consistent order\n  for (const module of modules) {\n    createModuleId(module.path);\n  }\n  // Sort by IDs\n  return modules.sort(\n    (a: Module<any>, b: Module<any>) => createModuleId(a.path) - createModuleId(b.path)\n  );\n}\n\nexport function createSerializerFromSerialProcessors(\n  config: ConfigT['serializer'],\n  processors: (SerializerPlugin | undefined)[],\n  originalSerializer?: Serializer | null\n): Serializer {\n  const finalSerializer = getDefaultSerializer(config, originalSerializer);\n  return (...props: SerializerParameters): ReturnType<Serializer> => {\n    for (const processor of processors) {\n      if (processor) {\n        props = processor(...props);\n      }\n    }\n\n    return finalSerializer(...props);\n  };\n}\n\nexport { SerialAsset };\n\n// __d((function(g,r,i,a,m,e,d){}),435,{\"0\":2,\"1\":18,\"2\":184,\"3\":103,\"4\":436,\"5\":438,\"6\":439,\"paths\":{\"438\":\"/etc/external.bundle?platform=web\"}});\n"],"mappings":"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"}