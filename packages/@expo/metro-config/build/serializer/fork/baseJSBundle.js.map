{"version":3,"file":"baseJSBundle.js","names":["_getAppendScripts","data","_interopRequireDefault","require","_processModules","obj","__esModule","default","baseJSBundle","entryPoint","preModules","graph","options","baseJSBundleWithDependencies","dependencies","values","module","createModuleId","path","processModulesOptions","filter","processModuleFilter","dev","includeAsyncPaths","projectRoot","serverRoot","sourceUrl","modulesOnly","preCode","processModules","map","_","code","src","join","modules","sort","a","b","postCode","getAppendScripts","asyncRequireModulePath","getRunModuleStatement","inlineSourceMap","runBeforeMainModule","runModule","shouldAddToIgnoreList","sourceMapUrl","mods","pre","post","id","_expoSplitBundlePaths","paths"],"sources":["../../../src/serializer/fork/baseJSBundle.ts"],"sourcesContent":["/**\n * Copyright Â© 2022 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type { MixedOutput, Module, ReadOnlyGraph, SerializerOptions } from 'metro';\n// @ts-expect-error\nimport getAppendScripts from 'metro/src/lib/getAppendScripts';\n// @ts-expect-error\nimport type { Bundle } from 'metro-runtime/src/modules/types.flow';\n\nimport { processModules } from './processModules';\n\nexport function baseJSBundle(\n  entryPoint: string,\n  preModules: readonly Module[],\n  graph: Pick<ReadOnlyGraph, 'dependencies'>,\n  options: SerializerOptions\n): Bundle {\n  return baseJSBundleWithDependencies(\n    entryPoint,\n    preModules,\n    [...graph.dependencies.values()],\n    options\n  );\n}\nexport function baseJSBundleWithDependencies(\n  entryPoint: string,\n  preModules: readonly Module[],\n  dependencies: Module<MixedOutput>[],\n  options: SerializerOptions\n): Bundle {\n  for (const module of dependencies) {\n    options.createModuleId(module.path);\n  }\n\n  const processModulesOptions = {\n    filter: options.processModuleFilter,\n    createModuleId: options.createModuleId,\n    dev: options.dev,\n    includeAsyncPaths: options.includeAsyncPaths,\n    projectRoot: options.projectRoot,\n    serverRoot: options.serverRoot,\n    sourceUrl: options.sourceUrl,\n  };\n\n  // Do not prepend polyfills or the require runtime when only modules are requested\n  if (options.modulesOnly) {\n    preModules = [];\n  }\n\n  const preCode = processModules(preModules, processModulesOptions)\n    .map(([_, code]) => code.src)\n    .join('\\n');\n\n  const modules = [...dependencies].sort(\n    (a: Module<MixedOutput>, b: Module<MixedOutput>) =>\n      options.createModuleId(a.path) - options.createModuleId(b.path)\n  );\n\n  const postCode = processModules(\n    getAppendScripts(entryPoint, [...preModules, ...modules], {\n      asyncRequireModulePath: options.asyncRequireModulePath,\n      createModuleId: options.createModuleId,\n      getRunModuleStatement: options.getRunModuleStatement,\n      inlineSourceMap: options.inlineSourceMap,\n      runBeforeMainModule: options.runBeforeMainModule,\n      runModule: options.runModule,\n      shouldAddToIgnoreList: options.shouldAddToIgnoreList,\n      sourceMapUrl: options.sourceMapUrl,\n      sourceUrl: options.sourceUrl,\n    }),\n    processModulesOptions\n  )\n    .map(([_, code]) => code.src)\n    .join('\\n');\n\n  const mods = processModules([...dependencies], processModulesOptions).map(([module, code]) => [\n    options.createModuleId(module.path),\n    code,\n  ]);\n  return {\n    pre: preCode,\n    post: postCode,\n    modules: mods.map(([id, code]) => [id, typeof code === 'number' ? code : code.src]),\n    _expoSplitBundlePaths: mods.map(([id, code]) => [\n      id,\n      typeof code === 'number' ? {} : code.paths,\n    ]),\n  };\n}\n"],"mappings":"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"}