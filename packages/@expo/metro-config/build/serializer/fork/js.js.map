{"version":3,"file":"js.js","names":["_invariant","data","_interopRequireDefault","require","_jscSafeUrl","_metroTransformPlugins","_path","_getCssDeps","obj","__esModule","default","wrapModule","module","options","output","getJsOutput","type","startsWith","src","code","paths","params","getModuleParams","addParamsToDefineCall","moduleId","createModuleId","path","hasPaths","dependencyMapArray","Array","from","dependencies","values","map","dependency","id","absolutePath","sourceUrl","asyncType","invariant","searchParams","URL","jscSafeUrl","toNormalUrl","set","bundlePath","relative","serverRoot","dev","join","dirname","basename","extname","toString","getExportPathForDependency","push","projectRoot","dependencyPath","getExportPathForDependencyWithOptions","platform","get","relativePathname","name","fileNameFromContents","filepath","_module$path","_module$path2","jsModules","filter","length","jsOutput","Number","isFinite","lineCount","isJsModule","isJsOutput"],"sources":["../../../src/serializer/fork/js.ts"],"sourcesContent":["/**\n * Copyright Â© 2022 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport invariant from 'invariant';\nimport jscSafeUrl from 'jsc-safe-url';\nimport type { MixedOutput, Module } from 'metro';\n// @ts-expect-error\nimport { addParamsToDefineCall } from 'metro-transform-plugins';\nimport type { JsOutput } from 'metro-transform-worker';\nimport path from 'path';\n\nimport { fileNameFromContents } from '../getCssDeps';\n\nexport type Options = {\n  createModuleId: (module: string) => number | string;\n  dev: boolean;\n  includeAsyncPaths: boolean;\n  projectRoot: string;\n  serverRoot: string;\n  sourceUrl: string | undefined;\n  //   ...\n};\n\nexport function wrapModule(\n  module: Module,\n  options: Options\n): { src: string; paths: Record<string, string> } {\n  const output = getJsOutput(module);\n\n  if (output.type.startsWith('js/script')) {\n    return { src: output.data.code, paths: {} };\n  }\n\n  const { params, paths } = getModuleParams(module, options);\n  const src = addParamsToDefineCall(output.data.code, ...params);\n\n  return { src, paths };\n}\n\nexport function getModuleParams(\n  module: Module,\n  options: Options\n): { params: any[]; paths: Record<string, string> } {\n  const moduleId = options.createModuleId(module.path);\n\n  const paths: { [moduleID: number | string]: any } = {};\n  let hasPaths = false;\n  const dependencyMapArray = Array.from(module.dependencies.values()).map((dependency) => {\n    const id = options.createModuleId(dependency.absolutePath);\n    if (\n      // NOTE(EvanBacon): Disabled this to ensure that paths are provided even when the entire bundle\n      // is created. This is required for production bundle splitting.\n      // options.includeAsyncPaths &&\n      options.sourceUrl &&\n      dependency.data.data.asyncType != null\n    ) {\n      hasPaths = true;\n      invariant(options.sourceUrl != null, 'sourceUrl is required when includeAsyncPaths is true');\n\n      // TODO: Only include path if the target is not in the bundle\n\n      // Construct a server-relative URL for the split bundle, propagating\n      // most parameters from the main bundle's URL.\n\n      const { searchParams } = new URL(jscSafeUrl.toNormalUrl(options.sourceUrl));\n      searchParams.set('modulesOnly', 'true');\n      searchParams.set('runModule', 'false');\n\n      const bundlePath = path.relative(options.serverRoot, dependency.absolutePath);\n      if (options.dev) {\n        paths[id] =\n          '/' +\n          path.join(\n            path.dirname(bundlePath),\n            // Strip the file extension\n            path.basename(bundlePath, path.extname(bundlePath))\n          ) +\n          '.bundle?' +\n          searchParams.toString();\n      } else {\n        // NOTE(EvanBacon): Custom block for bundle splitting in production according to how `expo export` works\n        // TODO: Add content hash\n        paths[id] = '/' + getExportPathForDependency(dependency.absolutePath, options);\n      }\n    }\n    return id;\n  });\n\n  const params = [\n    moduleId,\n    hasPaths\n      ? {\n          // $FlowIgnore[not-an-object] Intentionally spreading an array into an object\n          ...dependencyMapArray,\n          paths,\n        }\n      : dependencyMapArray,\n  ];\n\n  if (options.dev) {\n    // Add the relative path of the module to make debugging easier.\n    // This is mapped to `module.verboseName` in `require.js`.\n    params.push(path.relative(options.projectRoot, module.path));\n  }\n\n  return { params, paths };\n}\n\nexport function getExportPathForDependency(\n  dependencyPath: string,\n  options: Pick<Options, 'sourceUrl' | 'serverRoot'>\n): string {\n  //   console.log('getExportPathForDependency', dependency.data.data.locs, options);\n  const { searchParams } = new URL(jscSafeUrl.toNormalUrl(options.sourceUrl!));\n  return getExportPathForDependencyWithOptions(dependencyPath, {\n    platform: searchParams.get('platform')!,\n    serverRoot: options.serverRoot,\n  });\n}\n\nexport function getExportPathForDependencyWithOptions(\n  dependencyPath: string,\n  { platform, serverRoot }: { platform: string; serverRoot: string }\n): string {\n  //   console.log('getExportPathForDependency', dependency.data.data.locs, options);\n  const bundlePath = path.relative(serverRoot, dependencyPath);\n  const relativePathname = path.join(\n    path.dirname(bundlePath),\n    // Strip the file extension\n    path.basename(bundlePath, path.extname(bundlePath))\n  );\n  const name = fileNameFromContents({\n    filepath: relativePathname,\n    // TODO: Add content hash\n    src: relativePathname,\n  });\n  return (\n    `_expo/static/js/${platform}/` +\n    // make filename safe\n    // dependency.data.data.key.replace(/[^a-z0-9]/gi, '_') +\n    name +\n    '.js'\n  );\n}\n\nexport function getJsOutput(module: {\n  output: readonly MixedOutput[];\n  path?: string;\n  // ...\n}): JsOutput {\n  const jsModules = module.output.filter(({ type }) => type.startsWith('js/'));\n\n  invariant(\n    jsModules.length === 1,\n    `Modules must have exactly one JS output, but ${module.path ?? 'unknown module'} has ${\n      jsModules.length\n    } JS outputs.`\n  );\n\n  const jsOutput: JsOutput = jsModules[0] as unknown as any;\n  //   const jsOutput: JsOutput = (jsModules[0]: any);\n\n  invariant(\n    Number.isFinite(jsOutput.data.lineCount),\n    `JS output must populate lineCount, but ${module.path ?? 'unknown module'} has ${\n      jsOutput.type\n    } output with lineCount '${jsOutput.data.lineCount}'`\n  );\n\n  return jsOutput;\n}\n\nexport function isJsModule(module: Module): boolean {\n  return module.output.filter(isJsOutput).length > 0;\n}\n\nexport function isJsOutput(output: MixedOutput): output is MixedOutput {\n  return output.type.startsWith('js/');\n}\n"],"mappings":";;;;;;;;;;;;AAQA,SAAAA,WAAA;EAAA,MAAAC,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAH,UAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAG,YAAA;EAAA,MAAAH,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAC,WAAA,YAAAA,CAAA;IAAA,OAAAH,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAGA,SAAAI,uBAAA;EAAA,MAAAJ,IAAA,GAAAE,OAAA;EAAAE,sBAAA,YAAAA,CAAA;IAAA,OAAAJ,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,SAAAK,MAAA;EAAA,MAAAL,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAG,KAAA,YAAAA,CAAA;IAAA,OAAAL,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,SAAAM,YAAA;EAAA,MAAAN,IAAA,GAAAE,OAAA;EAAAI,WAAA,YAAAA,CAAA;IAAA,OAAAN,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAAqD,SAAAC,uBAAAM,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAhBrD;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;;AAiBO,SAASG,UAAUA,CACxBC,MAAc,EACdC,OAAgB,EACgC;EAChD,MAAMC,MAAM,GAAGC,WAAW,CAACH,MAAM,CAAC;EAElC,IAAIE,MAAM,CAACE,IAAI,CAACC,UAAU,CAAC,WAAW,CAAC,EAAE;IACvC,OAAO;MAAEC,GAAG,EAAEJ,MAAM,CAACb,IAAI,CAACkB,IAAI;MAAEC,KAAK,EAAE,CAAC;IAAE,CAAC;EAC7C;EAEA,MAAM;IAAEC,MAAM;IAAED;EAAM,CAAC,GAAGE,eAAe,CAACV,MAAM,EAAEC,OAAO,CAAC;EAC1D,MAAMK,GAAG,GAAG,IAAAK,8CAAqB,EAACT,MAAM,CAACb,IAAI,CAACkB,IAAI,EAAE,GAAGE,MAAM,CAAC;EAE9D,OAAO;IAAEH,GAAG;IAAEE;EAAM,CAAC;AACvB;AAEO,SAASE,eAAeA,CAC7BV,MAAc,EACdC,OAAgB,EACkC;EAClD,MAAMW,QAAQ,GAAGX,OAAO,CAACY,cAAc,CAACb,MAAM,CAACc,IAAI,CAAC;EAEpD,MAAMN,KAA2C,GAAG,CAAC,CAAC;EACtD,IAAIO,QAAQ,GAAG,KAAK;EACpB,MAAMC,kBAAkB,GAAGC,KAAK,CAACC,IAAI,CAAClB,MAAM,CAACmB,YAAY,CAACC,MAAM,EAAE,CAAC,CAACC,GAAG,CAAEC,UAAU,IAAK;IACtF,MAAMC,EAAE,GAAGtB,OAAO,CAACY,cAAc,CAACS,UAAU,CAACE,YAAY,CAAC;IAC1D;IACE;IACA;IACA;IACAvB,OAAO,CAACwB,SAAS,IACjBH,UAAU,CAACjC,IAAI,CAACA,IAAI,CAACqC,SAAS,IAAI,IAAI,EACtC;MACAX,QAAQ,GAAG,IAAI;MACf,IAAAY,oBAAS,EAAC1B,OAAO,CAACwB,SAAS,IAAI,IAAI,EAAE,sDAAsD,CAAC;;MAE5F;;MAEA;MACA;;MAEA,MAAM;QAAEG;MAAa,CAAC,GAAG,IAAIC,GAAG,CAACC,qBAAU,CAACC,WAAW,CAAC9B,OAAO,CAACwB,SAAS,CAAC,CAAC;MAC3EG,YAAY,CAACI,GAAG,CAAC,aAAa,EAAE,MAAM,CAAC;MACvCJ,YAAY,CAACI,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC;MAEtC,MAAMC,UAAU,GAAGnB,eAAI,CAACoB,QAAQ,CAACjC,OAAO,CAACkC,UAAU,EAAEb,UAAU,CAACE,YAAY,CAAC;MAC7E,IAAIvB,OAAO,CAACmC,GAAG,EAAE;QACf5B,KAAK,CAACe,EAAE,CAAC,GACP,GAAG,GACHT,eAAI,CAACuB,IAAI,CACPvB,eAAI,CAACwB,OAAO,CAACL,UAAU,CAAC;QACxB;QACAnB,eAAI,CAACyB,QAAQ,CAACN,UAAU,EAAEnB,eAAI,CAAC0B,OAAO,CAACP,UAAU,CAAC,CAAC,CACpD,GACD,UAAU,GACVL,YAAY,CAACa,QAAQ,EAAE;MAC3B,CAAC,MAAM;QACL;QACA;QACAjC,KAAK,CAACe,EAAE,CAAC,GAAG,GAAG,GAAGmB,0BAA0B,CAACpB,UAAU,CAACE,YAAY,EAAEvB,OAAO,CAAC;MAChF;IACF;IACA,OAAOsB,EAAE;EACX,CAAC,CAAC;EAEF,MAAMd,MAAM,GAAG,CACbG,QAAQ,EACRG,QAAQ,GACJ;IACE;IACA,GAAGC,kBAAkB;IACrBR;EACF,CAAC,GACDQ,kBAAkB,CACvB;EAED,IAAIf,OAAO,CAACmC,GAAG,EAAE;IACf;IACA;IACA3B,MAAM,CAACkC,IAAI,CAAC7B,eAAI,CAACoB,QAAQ,CAACjC,OAAO,CAAC2C,WAAW,EAAE5C,MAAM,CAACc,IAAI,CAAC,CAAC;EAC9D;EAEA,OAAO;IAAEL,MAAM;IAAED;EAAM,CAAC;AAC1B;AAEO,SAASkC,0BAA0BA,CACxCG,cAAsB,EACtB5C,OAAkD,EAC1C;EACR;EACA,MAAM;IAAE2B;EAAa,CAAC,GAAG,IAAIC,GAAG,CAACC,qBAAU,CAACC,WAAW,CAAC9B,OAAO,CAACwB,SAAS,CAAE,CAAC;EAC5E,OAAOqB,qCAAqC,CAACD,cAAc,EAAE;IAC3DE,QAAQ,EAAEnB,YAAY,CAACoB,GAAG,CAAC,UAAU,CAAE;IACvCb,UAAU,EAAElC,OAAO,CAACkC;EACtB,CAAC,CAAC;AACJ;AAEO,SAASW,qCAAqCA,CACnDD,cAAsB,EACtB;EAAEE,QAAQ;EAAEZ;AAAqD,CAAC,EAC1D;EACR;EACA,MAAMF,UAAU,GAAGnB,eAAI,CAACoB,QAAQ,CAACC,UAAU,EAAEU,cAAc,CAAC;EAC5D,MAAMI,gBAAgB,GAAGnC,eAAI,CAACuB,IAAI,CAChCvB,eAAI,CAACwB,OAAO,CAACL,UAAU,CAAC;EACxB;EACAnB,eAAI,CAACyB,QAAQ,CAACN,UAAU,EAAEnB,eAAI,CAAC0B,OAAO,CAACP,UAAU,CAAC,CAAC,CACpD;EACD,MAAMiB,IAAI,GAAG,IAAAC,kCAAoB,EAAC;IAChCC,QAAQ,EAAEH,gBAAgB;IAC1B;IACA3C,GAAG,EAAE2C;EACP,CAAC,CAAC;EACF,OACG,mBAAkBF,QAAS,GAAE;EAC9B;EACA;EACAG,IAAI,GACJ,KAAK;AAET;AAEO,SAAS/C,WAAWA,CAACH,MAI3B,EAAY;EAAA,IAAAqD,YAAA,EAAAC,aAAA;EACX,MAAMC,SAAS,GAAGvD,MAAM,CAACE,MAAM,CAACsD,MAAM,CAAC,CAAC;IAAEpD;EAAK,CAAC,KAAKA,IAAI,CAACC,UAAU,CAAC,KAAK,CAAC,CAAC;EAE5E,IAAAsB,oBAAS,EACP4B,SAAS,CAACE,MAAM,KAAK,CAAC,EACrB,gDAA6C,CAAAJ,YAAA,GAAErD,MAAM,CAACc,IAAI,cAAAuC,YAAA,cAAAA,YAAA,GAAI,gBAAiB,QAC9EE,SAAS,CAACE,MACX,cAAa,CACf;EAED,MAAMC,QAAkB,GAAGH,SAAS,CAAC,CAAC,CAAmB;EACzD;;EAEA,IAAA5B,oBAAS,EACPgC,MAAM,CAACC,QAAQ,CAACF,QAAQ,CAACrE,IAAI,CAACwE,SAAS,CAAC,EACvC,0CAAuC,CAAAP,aAAA,GAAEtD,MAAM,CAACc,IAAI,cAAAwC,aAAA,cAAAA,aAAA,GAAI,gBAAiB,QACxEI,QAAQ,CAACtD,IACV,2BAA0BsD,QAAQ,CAACrE,IAAI,CAACwE,SAAU,GAAE,CACtD;EAED,OAAOH,QAAQ;AACjB;AAEO,SAASI,UAAUA,CAAC9D,MAAc,EAAW;EAClD,OAAOA,MAAM,CAACE,MAAM,CAACsD,MAAM,CAACO,UAAU,CAAC,CAACN,MAAM,GAAG,CAAC;AACpD;AAEO,SAASM,UAAUA,CAAC7D,MAAmB,EAAyB;EACrE,OAAOA,MAAM,CAACE,IAAI,CAACC,UAAU,CAAC,KAAK,CAAC;AACtC"}