{"version":3,"file":"annotateModulesSerializerPlugin.js","names":["_path","data","_interopRequireDefault","require","obj","__esModule","default","debug","annotateModule","projectRoot","mod","filePath","path","relative","output","forEach","outputItem","code","join","lineCount","createAnnotateModulesSerializerPlugin","force","annotateModulesSerializerPlugin","entryPoint","preModules","graph","options","dev","value","dependencies","values"],"sources":["../../src/serializer/annotateModulesSerializerPlugin.ts"],"sourcesContent":["/**\n * Copyright Â© 2023 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { MixedOutput, Module, ReadOnlyGraph, SerializerOptions } from 'metro';\nimport path from 'path';\n\nimport { SerializerParameters } from './withExpoSerializers';\n\nconst debug = require('debug')('expo:metro-config:serializer:annotate') as typeof console.log;\n\nexport function annotateModule(projectRoot: string, mod: Module<MixedOutput>) {\n  const filePath = path.relative(projectRoot, mod.path);\n  mod.output.forEach((outputItem) => {\n    outputItem.data.code = ['', `// ${filePath}`, outputItem.data.code].join('\\n');\n    if ('lineCount' in outputItem.data && typeof outputItem.data.lineCount === 'number') {\n      outputItem.data.lineCount = (outputItem.data.lineCount as number) + 2;\n    }\n\n    // TODO: Probably need to update sourcemaps here.\n  });\n  return mod;\n}\n\nexport function createAnnotateModulesSerializerPlugin({ force }: { force?: boolean }) {\n  return function annotateModulesSerializerPlugin(\n    entryPoint: string,\n    preModules: readonly Module<MixedOutput>[],\n    graph: ReadOnlyGraph,\n    options: SerializerOptions\n  ): SerializerParameters {\n    if (force === false) {\n      debug('Annotations have been disabled');\n      return [entryPoint, preModules, graph, options];\n    }\n\n    if (options.dev || force) {\n      debug('Annotating modules with descriptions');\n\n      for (const mod of preModules) {\n        annotateModule(options.projectRoot, mod);\n      }\n\n      for (const value of graph.dependencies.values()) {\n        annotateModule(options.projectRoot, value);\n      }\n    }\n\n    return [entryPoint, preModules, graph, options];\n  };\n}\n"],"mappings":";;;;;;;AAOA,SAAAA,MAAA;EAAA,MAAAC,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAH,KAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAAwB,SAAAC,uBAAAE,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAPxB;AACA;AACA;AACA;AACA;AACA;;AAMA,MAAMG,KAAK,GAAGJ,OAAO,CAAC,OAAO,CAAC,CAAC,uCAAuC,CAAuB;AAEtF,SAASK,cAAcA,CAACC,WAAmB,EAAEC,GAAwB,EAAE;EAC5E,MAAMC,QAAQ,GAAGC,eAAI,CAACC,QAAQ,CAACJ,WAAW,EAAEC,GAAG,CAACE,IAAI,CAAC;EACrDF,GAAG,CAACI,MAAM,CAACC,OAAO,CAAEC,UAAU,IAAK;IACjCA,UAAU,CAACf,IAAI,CAACgB,IAAI,GAAG,CAAC,EAAE,EAAG,MAAKN,QAAS,EAAC,EAAEK,UAAU,CAACf,IAAI,CAACgB,IAAI,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;IAC9E,IAAI,WAAW,IAAIF,UAAU,CAACf,IAAI,IAAI,OAAOe,UAAU,CAACf,IAAI,CAACkB,SAAS,KAAK,QAAQ,EAAE;MACnFH,UAAU,CAACf,IAAI,CAACkB,SAAS,GAAIH,UAAU,CAACf,IAAI,CAACkB,SAAS,GAAc,CAAC;IACvE;;IAEA;EACF,CAAC,CAAC;;EACF,OAAOT,GAAG;AACZ;AAEO,SAASU,qCAAqCA,CAAC;EAAEC;AAA2B,CAAC,EAAE;EACpF,OAAO,SAASC,+BAA+BA,CAC7CC,UAAkB,EAClBC,UAA0C,EAC1CC,KAAoB,EACpBC,OAA0B,EACJ;IACtB,IAAIL,KAAK,KAAK,KAAK,EAAE;MACnBd,KAAK,CAAC,gCAAgC,CAAC;MACvC,OAAO,CAACgB,UAAU,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,CAAC;IACjD;IAEA,IAAIA,OAAO,CAACC,GAAG,IAAIN,KAAK,EAAE;MACxBd,KAAK,CAAC,sCAAsC,CAAC;MAE7C,KAAK,MAAMG,GAAG,IAAIc,UAAU,EAAE;QAC5BhB,cAAc,CAACkB,OAAO,CAACjB,WAAW,EAAEC,GAAG,CAAC;MAC1C;MAEA,KAAK,MAAMkB,KAAK,IAAIH,KAAK,CAACI,YAAY,CAACC,MAAM,EAAE,EAAE;QAC/CtB,cAAc,CAACkB,OAAO,CAACjB,WAAW,EAAEmB,KAAK,CAAC;MAC5C;IACF;IAEA,OAAO,CAACL,UAAU,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,CAAC;EACjD,CAAC;AACH"}