{"version":3,"file":"transform-worker.js","names":["_countLines","data","_interopRequireDefault","require","_css","_cssModules","worker","_interopRequireWildcard","_postcss","_sass","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","transform","config","projectRoot","filename","options","startTime","Date","now","result","transformInner","endTime","duration","output","profiling","start","end","pid","process","isCss","type","test","_options$customTransf","environment","customTransformOptions","match","RegExp","platform","minify","Buffer","from","code","matchCssModule","toString","postcssResults","transformPostCssModule","src","hasPostcss","syntax","matchSass","compileSass","_jsModuleResults$outp","results","transformCssModuleWeb","dev","sourceMap","jsModuleResults","cssCode","css","lineCount","countLines","map","functionMap","dependencies","cssResults","cssModules","wrapDevelopmentCSS","skipCache","module","exports"],"sources":["../../src/transform-worker/transform-worker.ts"],"sourcesContent":["/**\n * Copyright 2023-present 650 Industries (Expo). All rights reserved.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport countLines from 'metro/src/lib/countLines';\nimport type {\n  JsTransformerConfig,\n  JsTransformOptions,\n  TransformResponse,\n} from 'metro-transform-worker';\n\nimport { wrapDevelopmentCSS } from './css';\nimport { matchCssModule, transformCssModuleWeb } from './css-modules';\nimport * as worker from './metro-transform-worker';\nimport { transformPostCssModule } from './postcss';\nimport { compileSass, matchSass } from './sass';\nimport { ExpoJsOutput, JsOutput } from '../serializer/jsOutput';\n\nexport async function transform(\n  config: JsTransformerConfig,\n  projectRoot: string,\n  filename: string,\n  data: Buffer,\n  options: JsTransformOptions\n): Promise<TransformResponse> {\n  const startTime = Date.now();\n  const result = await transformInner(config, projectRoot, filename, data, options);\n  const endTime = Date.now();\n  const duration = endTime - startTime;\n\n  // @ts-expect-error\n  result.output[0].data.profiling = {\n    start: startTime,\n    end: endTime,\n    pid: process.pid,\n    duration,\n  };\n  return result;\n}\n\nasync function transformInner(\n  config: JsTransformerConfig,\n  projectRoot: string,\n  filename: string,\n  data: Buffer,\n  options: JsTransformOptions\n): Promise<TransformResponse> {\n  const isCss = options.type !== 'asset' && /\\.(s?css|sass)$/.test(filename);\n  // If the file is not CSS, then use the default behavior.\n  if (!isCss) {\n    const environment = options.customTransformOptions?.environment;\n\n    if (\n      environment !== 'node' &&\n      // TODO: Ensure this works with windows.\n      (filename.match(new RegExp(`^app/\\\\+html(\\\\.${options.platform})?\\\\.([tj]sx?|[cm]js)?$`)) ||\n        // Strip +api files.\n        filename.match(/\\+api(\\.(native|ios|android|web))?\\.[tj]sx?$/))\n    ) {\n      // Remove the server-only +html file and API Routes from the bundle when bundling for a client environment.\n      return worker.transform(\n        config,\n        projectRoot,\n        filename,\n        !options.minify\n          ? Buffer.from(\n              // Use a string so this notice is visible in the bundle if the user is\n              // looking for it.\n              '\"> The server-only file was removed from the client JS bundle by Expo CLI.\"'\n            )\n          : Buffer.from(''),\n        options\n      );\n    }\n\n    if (\n      environment !== 'node' &&\n      !filename.match(/\\/node_modules\\//) &&\n      filename.match(/\\+api(\\.(native|ios|android|web))?\\.[tj]sx?$/)\n    ) {\n      // Clear the contents of +api files when bundling for the client.\n      // This ensures that the client doesn't accidentally use the server-only +api files.\n      return worker.transform(config, projectRoot, filename, Buffer.from(''), options);\n    }\n\n    return worker.transform(config, projectRoot, filename, data, options);\n  }\n\n  // If the platform is not web, then return an empty module.\n  if (options.platform !== 'web') {\n    const code = matchCssModule(filename) ? 'module.exports={ unstable_styles: {} };' : '';\n    return worker.transform(\n      config,\n      projectRoot,\n      filename,\n      // TODO: Native CSS Modules\n      Buffer.from(code),\n      options\n    );\n  }\n\n  let code = data.toString('utf8');\n\n  // Apply postcss transforms\n  const postcssResults = await transformPostCssModule(projectRoot, {\n    src: code,\n    filename,\n  });\n\n  if (postcssResults.hasPostcss) {\n    code = postcssResults.src;\n  }\n\n  // TODO: When native has CSS support, this will need to move higher up.\n  const syntax = matchSass(filename);\n  if (syntax) {\n    code = compileSass(projectRoot, { filename, src: code }, { syntax }).src;\n  }\n\n  // If the file is a CSS Module, then transform it to a JS module\n  // in development and a static CSS file in production.\n  if (matchCssModule(filename)) {\n    const results = await transformCssModuleWeb({\n      filename,\n      src: code,\n      options: {\n        projectRoot,\n        dev: options.dev,\n        minify: options.minify,\n        sourceMap: false,\n      },\n    });\n\n    const jsModuleResults = await worker.transform(\n      config,\n      projectRoot,\n      filename,\n      Buffer.from(results.output),\n      options\n    );\n\n    const cssCode = results.css.toString();\n    const output: JsOutput[] = [\n      {\n        type: 'js/module',\n        data: {\n          ...jsModuleResults.output[0]?.data,\n\n          // Append additional css metadata for static extraction.\n          css: {\n            code: cssCode,\n            lineCount: countLines(cssCode),\n            map: [],\n            functionMap: null,\n          },\n        },\n      },\n    ];\n\n    return {\n      dependencies: jsModuleResults.dependencies,\n      output,\n    };\n  }\n\n  // Global CSS:\n\n  const { transform } = require('lightningcss') as typeof import('lightningcss');\n\n  // TODO: Add bundling to resolve imports\n  // https://lightningcss.dev/bundling.html#bundling-order\n\n  const cssResults = transform({\n    filename,\n    code: Buffer.from(code),\n    sourceMap: false,\n    cssModules: false,\n    projectRoot,\n    minify: options.minify,\n  });\n\n  // TODO: Warnings:\n  // cssResults.warnings.forEach((warning) => {\n  // });\n\n  // Create a mock JS module that exports an empty object,\n  // this ensures Metro dependency graph is correct.\n  const jsModuleResults = await worker.transform(\n    config,\n    projectRoot,\n    filename,\n    options.dev ? Buffer.from(wrapDevelopmentCSS({ src: code, filename })) : Buffer.from(''),\n    options\n  );\n\n  const cssCode = cssResults.code.toString();\n\n  // In production, we export the CSS as a string and use a special type to prevent\n  // it from being included in the JS bundle. We'll extract the CSS like an asset later\n  // and append it to the HTML bundle.\n  const output: ExpoJsOutput[] = [\n    {\n      type: 'js/module',\n      data: {\n        ...(jsModuleResults.output[0] as ExpoJsOutput).data,\n\n        // Append additional css metadata for static extraction.\n        css: {\n          code: cssCode,\n          lineCount: countLines(cssCode),\n          map: [],\n          functionMap: null,\n          // Disable caching for CSS files when postcss is enabled and has been run on the file.\n          // This ensures that things like tailwind can update on every change.\n          skipCache: postcssResults.hasPostcss,\n        },\n      },\n    },\n  ];\n\n  return {\n    dependencies: jsModuleResults.dependencies,\n    output,\n  };\n}\n\n/**\n * A custom Metro transformer that adds support for processing Expo-specific bundler features.\n * - Global CSS files on web.\n * - CSS Modules on web.\n * - TODO: Tailwind CSS on web.\n */\nmodule.exports = {\n  // Use defaults for everything that's not custom.\n  ...worker,\n  transform,\n};\n"],"mappings":"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"}