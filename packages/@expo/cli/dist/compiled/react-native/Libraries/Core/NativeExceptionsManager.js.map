{"version":3,"names":["TurboModuleRegistry","_interopRequireWildcard","require","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","Platform","NativeModule","getEnforcing","ExceptionsManager","reportFatalException","message","stack","exceptionId","reportSoftException","updateExceptionMessage","dismissRedbox","OS","reportException","data","isFatal","id","_default","exports"],"sources":["NativeExceptionsManager.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../TurboModule/TurboModuleRegistry';\n\nconst Platform = require('../Utilities/Platform');\n\nexport type StackFrame = {|\n  column: ?number,\n  file: ?string,\n  lineNumber: ?number,\n  methodName: string,\n  collapse?: boolean,\n|};\nexport type ExceptionData = {\n  message: string,\n  originalMessage: ?string,\n  name: ?string,\n  componentStack: ?string,\n  stack: Array<StackFrame>,\n  id: number,\n  isFatal: boolean,\n  // flowlint-next-line unclear-type:off\n  extraData?: Object,\n  ...\n};\nexport interface Spec extends TurboModule {\n  // Deprecated: Use `reportException`\n  +reportFatalException: (\n    message: string,\n    stack: Array<StackFrame>,\n    exceptionId: number,\n  ) => void;\n  // Deprecated: Use `reportException`\n  +reportSoftException: (\n    message: string,\n    stack: Array<StackFrame>,\n    exceptionId: number,\n  ) => void;\n  +reportException?: (data: ExceptionData) => void;\n  +updateExceptionMessage: (\n    message: string,\n    stack: Array<StackFrame>,\n    exceptionId: number,\n  ) => void;\n  // TODO(T53311281): This is a noop on iOS now. Implement it.\n  +dismissRedbox?: () => void;\n}\n\nconst NativeModule =\n  TurboModuleRegistry.getEnforcing<Spec>('ExceptionsManager');\n\nconst ExceptionsManager = {\n  reportFatalException(\n    message: string,\n    stack: Array<StackFrame>,\n    exceptionId: number,\n  ) {\n    NativeModule.reportFatalException(message, stack, exceptionId);\n  },\n  reportSoftException(\n    message: string,\n    stack: Array<StackFrame>,\n    exceptionId: number,\n  ) {\n    NativeModule.reportSoftException(message, stack, exceptionId);\n  },\n  updateExceptionMessage(\n    message: string,\n    stack: Array<StackFrame>,\n    exceptionId: number,\n  ) {\n    NativeModule.updateExceptionMessage(message, stack, exceptionId);\n  },\n  dismissRedbox(): void {\n    if (Platform.OS !== 'ios' && NativeModule.dismissRedbox) {\n      // TODO(T53311281): This is a noop on iOS now. Implement it.\n      NativeModule.dismissRedbox();\n    }\n  },\n  reportException(data: ExceptionData): void {\n    if (NativeModule.reportException) {\n      NativeModule.reportException(data);\n      return;\n    }\n    if (data.isFatal) {\n      ExceptionsManager.reportFatalException(data.message, data.stack, data.id);\n    } else {\n      ExceptionsManager.reportSoftException(data.message, data.stack, data.id);\n    }\n  },\n};\n\nexport default ExceptionsManager;\n"],"mappings":"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"}