{"version":3,"names":["infoLog","require","JSEventLoopWatchdog","getStats","stallCount","totalStallTime","longestStall","acceptableBusyTime","reset","lastInterval","global","performance","now","addHandler","handler","handlers","push","install","_ref","thresholdMS","installed","iteration","busyTime","stallTime","Math","max","msg","forEach","onStall","onIterate","setTimeout","module","exports"],"sources":["JSEventLoopWatchdog.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst infoLog = require('../Utilities/infoLog');\n\ntype Handler = {\n  onIterate?: () => void,\n  onStall: (params: {\n    lastInterval: number,\n    busyTime: number,\n    ...\n  }) => ?string,\n  ...\n};\n\n/**\n * A utility for tracking stalls in the JS event loop that prevent timers and\n * other events from being processed in a timely manner.\n *\n * The \"stall\" time is defined as the amount of time in access of the acceptable\n * threshold, which is typically around 100-200ms. So if the threshold is set to\n * 100 and a timer fires 150 ms later than it was scheduled because the event\n * loop was tied up, that would be considered a 50ms stall.\n *\n * By default, logs stall events to the console when installed. Can also be\n * queried with `getStats`.\n */\nconst JSEventLoopWatchdog = {\n  getStats: function (): Object {\n    return {stallCount, totalStallTime, longestStall, acceptableBusyTime};\n  },\n  reset: function () {\n    infoLog('JSEventLoopWatchdog: reset');\n    totalStallTime = 0;\n    stallCount = 0;\n    longestStall = 0;\n    lastInterval = global.performance.now();\n  },\n  addHandler: function (handler: Handler) {\n    handlers.push(handler);\n  },\n  install: function ({thresholdMS}: {thresholdMS: number, ...}) {\n    acceptableBusyTime = thresholdMS;\n    if (installed) {\n      return;\n    }\n    installed = true;\n    lastInterval = global.performance.now();\n    function iteration() {\n      const now = global.performance.now();\n      const busyTime = now - lastInterval;\n      if (busyTime >= thresholdMS) {\n        const stallTime = busyTime - thresholdMS;\n        stallCount++;\n        totalStallTime += stallTime;\n        longestStall = Math.max(longestStall, stallTime);\n        let msg =\n          `JSEventLoopWatchdog: JS thread busy for ${busyTime}ms. ` +\n          `${totalStallTime}ms in ${stallCount} stalls so far. `;\n        handlers.forEach(handler => {\n          msg += handler.onStall({lastInterval, busyTime}) || '';\n        });\n        infoLog(msg);\n      }\n      handlers.forEach(handler => {\n        handler.onIterate && handler.onIterate();\n      });\n      lastInterval = now;\n      setTimeout(iteration, thresholdMS / 5);\n    }\n    iteration();\n  },\n};\n\nlet acceptableBusyTime = 0;\nlet installed = false;\nlet totalStallTime = 0;\nlet stallCount = 0;\nlet longestStall = 0;\nlet lastInterval = 0;\nconst handlers: Array<Handler> = [];\n\nmodule.exports = JSEventLoopWatchdog;\n"],"mappings":"AAUA,YAAY;;AAEZ,IAAMA,OAAO,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAwB/C,IAAMC,mBAAmB,GAAG;EAC1BC,QAAQ,EAAE,SAAAA,SAAA,EAAoB;IAC5B,OAAO;MAACC,UAAU,EAAVA,UAAU;MAAEC,cAAc,EAAdA,cAAc;MAAEC,YAAY,EAAZA,YAAY;MAAEC,kBAAkB,EAAlBA;IAAkB,CAAC;EACvE,CAAC;EACDC,KAAK,EAAE,SAAAA,MAAA,EAAY;IACjBR,OAAO,CAAC,4BAA4B,CAAC;IACrCK,cAAc,GAAG,CAAC;IAClBD,UAAU,GAAG,CAAC;IACdE,YAAY,GAAG,CAAC;IAChBG,YAAY,GAAGC,MAAM,CAACC,WAAW,CAACC,GAAG,EAAE;EACzC,CAAC;EACDC,UAAU,EAAE,SAAAA,WAAUC,OAAgB,EAAE;IACtCC,QAAQ,CAACC,IAAI,CAACF,OAAO,CAAC;EACxB,CAAC;EACDG,OAAO,EAAE,SAAAA,QAAAC,IAAA,EAAqD;IAAA,IAA1CC,WAAW,GAAAD,IAAA,CAAXC,WAAW;IAC7BZ,kBAAkB,GAAGY,WAAW;IAChC,IAAIC,SAAS,EAAE;MACb;IACF;IACAA,SAAS,GAAG,IAAI;IAChBX,YAAY,GAAGC,MAAM,CAACC,WAAW,CAACC,GAAG,EAAE;IACvC,SAASS,SAASA,CAAA,EAAG;MACnB,IAAMT,GAAG,GAAGF,MAAM,CAACC,WAAW,CAACC,GAAG,EAAE;MACpC,IAAMU,QAAQ,GAAGV,GAAG,GAAGH,YAAY;MACnC,IAAIa,QAAQ,IAAIH,WAAW,EAAE;QAC3B,IAAMI,SAAS,GAAGD,QAAQ,GAAGH,WAAW;QACxCf,UAAU,EAAE;QACZC,cAAc,IAAIkB,SAAS;QAC3BjB,YAAY,GAAGkB,IAAI,CAACC,GAAG,CAACnB,YAAY,EAAEiB,SAAS,CAAC;QAChD,IAAIG,GAAG,GACJ,2CAA0CJ,QAAS,MAAK,GACxD,GAAEjB,cAAe,SAAQD,UAAW,kBAAiB;QACxDW,QAAQ,CAACY,OAAO,CAAC,UAAAb,OAAO,EAAI;UAC1BY,GAAG,IAAIZ,OAAO,CAACc,OAAO,CAAC;YAACnB,YAAY,EAAZA,YAAY;YAAEa,QAAQ,EAARA;UAAQ,CAAC,CAAC,IAAI,EAAE;QACxD,CAAC,CAAC;QACFtB,OAAO,CAAC0B,GAAG,CAAC;MACd;MACAX,QAAQ,CAACY,OAAO,CAAC,UAAAb,OAAO,EAAI;QAC1BA,OAAO,CAACe,SAAS,IAAIf,OAAO,CAACe,SAAS,EAAE;MAC1C,CAAC,CAAC;MACFpB,YAAY,GAAGG,GAAG;MAClBkB,UAAU,CAACT,SAAS,EAAEF,WAAW,GAAG,CAAC,CAAC;IACxC;IACAE,SAAS,EAAE;EACb;AACF,CAAC;AAED,IAAId,kBAAkB,GAAG,CAAC;AAC1B,IAAIa,SAAS,GAAG,KAAK;AACrB,IAAIf,cAAc,GAAG,CAAC;AACtB,IAAID,UAAU,GAAG,CAAC;AAClB,IAAIE,YAAY,GAAG,CAAC;AACpB,IAAIG,YAAY,GAAG,CAAC;AACpB,IAAMM,QAAwB,GAAG,EAAE;AAEnCgB,MAAM,CAACC,OAAO,GAAG9B,mBAAmB"}