{"version":3,"names":["setNormalizedColorAlpha","input","alpha","Math","round","module","exports"],"sources":["setNormalizedColorAlpha.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n/* eslint no-bitwise: 0 */\n\n'use strict';\n\n/**\n * number should be a color processed by `normalizeColor`\n * alpha should be number between 0 and 1\n */\nfunction setNormalizedColorAlpha(input: number, alpha: number): number {\n  if (alpha < 0) {\n    alpha = 0;\n  } else if (alpha > 1) {\n    alpha = 1;\n  }\n\n  alpha = Math.round(alpha * 255);\n  // magic bitshift guarantees we return an unsigned int\n  return ((input & 0xffffff00) | alpha) >>> 0;\n}\n\nmodule.exports = setNormalizedColorAlpha;\n"],"mappings":"AAYA,YAAY;AAMZ,SAASA,uBAAuBA,CAACC,KAAa,EAAEC,KAAa,EAAU;EACrE,IAAIA,KAAK,GAAG,CAAC,EAAE;IACbA,KAAK,GAAG,CAAC;EACX,CAAC,MAAM,IAAIA,KAAK,GAAG,CAAC,EAAE;IACpBA,KAAK,GAAG,CAAC;EACX;EAEAA,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACF,KAAK,GAAG,GAAG,CAAC;EAE/B,OAAO,CAAED,KAAK,GAAG,UAAU,GAAIC,KAAK,MAAM,CAAC;AAC7C;AAEAG,MAAM,CAACC,OAAO,GAAGN,uBAAuB"}