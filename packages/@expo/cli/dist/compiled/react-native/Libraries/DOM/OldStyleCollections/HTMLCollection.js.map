{"version":3,"names":["_ArrayLikeUtils","require","HTMLCollection","_Symbol$iterator","elements","_classCallCheck2","default","i","length","Object","defineProperty","value","enumerable","configurable","writable","_length","_createClass2","key","get","item","index","arrayLike","namedItem","name","createValueIterator","Symbol","iterator","exports","createHTMLCollection"],"sources":["HTMLCollection.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n// flowlint unsafe-getters-setters:off\n\nimport type {ArrayLike} from './ArrayLikeUtils';\n\nimport {createValueIterator} from './ArrayLikeUtils';\n\n// IMPORTANT: The type definition for this module is defined in `HTMLCollection.js.flow`\n// because Flow only supports indexers in classes in declaration files.\n\n// $FlowIssue[prop-missing] Flow doesn't understand [Symbol.iterator]() {} and thinks this class doesn't implement the Iterable<T> interface.\nexport default class HTMLCollection<T> implements Iterable<T>, ArrayLike<T> {\n  _length: number;\n\n  /**\n   * Use `createHTMLCollection` to create instances of this class.\n   *\n   * @private This is not defined in the declaration file, so users will not see\n   *          the signature of the constructor.\n   */\n  constructor(elements: $ReadOnlyArray<T>) {\n    for (let i = 0; i < elements.length; i++) {\n      Object.defineProperty(this, i, {\n        value: elements[i],\n        enumerable: true,\n        configurable: false,\n        writable: false,\n      });\n    }\n\n    this._length = elements.length;\n  }\n\n  get length(): number {\n    return this._length;\n  }\n\n  item(index: number): T | null {\n    if (index < 0 || index >= this._length) {\n      return null;\n    }\n\n    // assigning to the interface allows us to access the indexer property in a\n    // type-safe way.\n    // eslint-disable-next-line consistent-this\n    const arrayLike: ArrayLike<T> = this;\n    return arrayLike[index];\n  }\n\n  /**\n   * @deprecated Unused in React Native.\n   */\n  namedItem(name: string): T | null {\n    return null;\n  }\n\n  // $FlowIssue[unsupported-syntax] Flow does not support computed properties in classes.\n  [Symbol.iterator](): Iterator<T> {\n    return createValueIterator(this);\n  }\n}\n\n/**\n * This is an internal method to create instances of `HTMLCollection`,\n * which avoids leaking its constructor to end users.\n * We can do that because the external definition of `HTMLCollection` lives in\n * `HTMLCollection.js.flow`, not here.\n */\nexport function createHTMLCollection<T>(\n  elements: $ReadOnlyArray<T>,\n): HTMLCollection<T> {\n  return new HTMLCollection(elements);\n}\n"],"mappings":";;;;;;;;AAcA,IAAAA,eAAA,GAAAC,OAAA;AAAqD,IAMhCC,cAAc,aAAAC,gBAAA;EASjC,SAAAD,eAAYE,QAA2B,EAAE;IAAA,IAAAC,gBAAA,CAAAC,OAAA,QAAAJ,cAAA;IACvC,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,QAAQ,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;MACxCE,MAAM,CAACC,cAAc,CAAC,IAAI,EAAEH,CAAC,EAAE;QAC7BI,KAAK,EAAEP,QAAQ,CAACG,CAAC,CAAC;QAClBK,UAAU,EAAE,IAAI;QAChBC,YAAY,EAAE,KAAK;QACnBC,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ;IAEA,IAAI,CAACC,OAAO,GAAGX,QAAQ,CAACI,MAAM;EAChC;EAAC,IAAAQ,aAAA,CAAAV,OAAA,EAAAJ,cAAA;IAAAe,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAqB;MACnB,OAAO,IAAI,CAACH,OAAO;IACrB;EAAC;IAAAE,GAAA;IAAAN,KAAA,EAED,SAAAQ,KAAKC,KAAa,EAAY;MAC5B,IAAIA,KAAK,GAAG,CAAC,IAAIA,KAAK,IAAI,IAAI,CAACL,OAAO,EAAE;QACtC,OAAO,IAAI;MACb;MAKA,IAAMM,SAAuB,GAAG,IAAI;MACpC,OAAOA,SAAS,CAACD,KAAK,CAAC;IACzB;EAAC;IAAAH,GAAA;IAAAN,KAAA,EAKD,SAAAW,UAAUC,IAAY,EAAY;MAChC,OAAO,IAAI;IACb;EAAC;IAAAN,GAAA,EAAAd,gBAAA;IAAAQ,KAAA,EAGD,SAAAA,MAAA,EAAiC;MAC/B,OAAO,IAAAa,mCAAmB,EAAC,IAAI,CAAC;IAClC;EAAC;EAAA,OAAAtB,cAAA;AAAA,EAFAuB,MAAM,CAACC,QAAQ;AAAAC,OAAA,CAAArB,OAAA,GAAAJ,cAAA;AAWX,SAAS0B,oBAAoBA,CAClCxB,QAA2B,EACR;EACnB,OAAO,IAAIF,cAAc,CAACE,QAAQ,CAAC;AACrC"}