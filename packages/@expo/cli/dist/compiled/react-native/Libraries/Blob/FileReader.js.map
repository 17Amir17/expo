{"version":3,"names":["_NativeFileReaderModule","_interopRequireDefault","require","_base64Js","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","prototype","valueOf","call","e","EventTarget","READER_EVENTS","EMPTY","LOADING","DONE","FileReader","_ref","_inherits2","_super","_this","_classCallCheck2","_aborted","_reset","_createClass2","key","value","_readyState","_error","_result","_setReadyState","newState","dispatchEvent","type","readAsArrayBuffer","blob","_this2","TypeError","NativeFileReaderModule","readAsDataURL","data","then","text","base64","split","typedArray","toByteArray","buffer","error","_this3","readAsText","_this4","encoding","length","undefined","abort","get","module","exports"],"sources":["FileReader.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type Blob from './Blob';\n\nimport NativeFileReaderModule from './NativeFileReaderModule';\nimport {toByteArray} from 'base64-js';\n\nconst EventTarget = require('event-target-shim');\n\ntype ReadyState =\n  | 0 // EMPTY\n  | 1 // LOADING\n  | 2; // DONE\n\ntype ReaderResult = string | ArrayBuffer;\n\nconst READER_EVENTS = [\n  'abort',\n  'error',\n  'load',\n  'loadstart',\n  'loadend',\n  'progress',\n];\n\nconst EMPTY = 0;\nconst LOADING = 1;\nconst DONE = 2;\n\nclass FileReader extends (EventTarget(...READER_EVENTS): any) {\n  static EMPTY: number = EMPTY;\n  static LOADING: number = LOADING;\n  static DONE: number = DONE;\n\n  EMPTY: number = EMPTY;\n  LOADING: number = LOADING;\n  DONE: number = DONE;\n\n  _readyState: ReadyState;\n  _error: ?Error;\n  _result: ?ReaderResult;\n  _aborted: boolean = false;\n\n  constructor() {\n    super();\n    this._reset();\n  }\n\n  _reset(): void {\n    this._readyState = EMPTY;\n    this._error = null;\n    this._result = null;\n  }\n\n  _setReadyState(newState: ReadyState) {\n    this._readyState = newState;\n    this.dispatchEvent({type: 'readystatechange'});\n    if (newState === DONE) {\n      if (this._aborted) {\n        this.dispatchEvent({type: 'abort'});\n      } else if (this._error) {\n        this.dispatchEvent({type: 'error'});\n      } else {\n        this.dispatchEvent({type: 'load'});\n      }\n      this.dispatchEvent({type: 'loadend'});\n    }\n  }\n\n  readAsArrayBuffer(blob: ?Blob): void {\n    this._aborted = false;\n\n    if (blob == null) {\n      throw new TypeError(\n        \"Failed to execute 'readAsArrayBuffer' on 'FileReader': parameter 1 is not of type 'Blob'\",\n      );\n    }\n\n    NativeFileReaderModule.readAsDataURL(blob.data).then(\n      (text: string) => {\n        if (this._aborted) {\n          return;\n        }\n\n        const base64 = text.split(',')[1];\n        const typedArray = toByteArray(base64);\n\n        this._result = typedArray.buffer;\n        this._setReadyState(DONE);\n      },\n      error => {\n        if (this._aborted) {\n          return;\n        }\n        this._error = error;\n        this._setReadyState(DONE);\n      },\n    );\n  }\n\n  readAsDataURL(blob: ?Blob): void {\n    this._aborted = false;\n\n    if (blob == null) {\n      throw new TypeError(\n        \"Failed to execute 'readAsDataURL' on 'FileReader': parameter 1 is not of type 'Blob'\",\n      );\n    }\n\n    NativeFileReaderModule.readAsDataURL(blob.data).then(\n      (text: string) => {\n        if (this._aborted) {\n          return;\n        }\n        this._result = text;\n        this._setReadyState(DONE);\n      },\n      error => {\n        if (this._aborted) {\n          return;\n        }\n        this._error = error;\n        this._setReadyState(DONE);\n      },\n    );\n  }\n\n  readAsText(blob: ?Blob, encoding: string = 'UTF-8'): void {\n    this._aborted = false;\n\n    if (blob == null) {\n      throw new TypeError(\n        \"Failed to execute 'readAsText' on 'FileReader': parameter 1 is not of type 'Blob'\",\n      );\n    }\n\n    NativeFileReaderModule.readAsText(blob.data, encoding).then(\n      (text: string) => {\n        if (this._aborted) {\n          return;\n        }\n        this._result = text;\n        this._setReadyState(DONE);\n      },\n      error => {\n        if (this._aborted) {\n          return;\n        }\n        this._error = error;\n        this._setReadyState(DONE);\n      },\n    );\n  }\n\n  abort() {\n    this._aborted = true;\n    // only call onreadystatechange if there is something to abort, as per spec\n    if (this._readyState !== EMPTY && this._readyState !== DONE) {\n      this._reset();\n      this._setReadyState(DONE);\n    }\n    // Reset again after, in case modified in handler\n    this._reset();\n  }\n\n  get readyState(): ReadyState {\n    return this._readyState;\n  }\n\n  get error(): ?Error {\n    return this._error;\n  }\n\n  get result(): ?ReaderResult {\n    return this._result;\n  }\n}\n\nmodule.exports = FileReader;\n"],"mappings":"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"}