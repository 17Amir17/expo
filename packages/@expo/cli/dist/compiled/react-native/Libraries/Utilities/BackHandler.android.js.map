{"version":3,"names":["_NativeDeviceEventManager","_interopRequireDefault","require","_RCTDeviceEventEmitter","DEVICE_BACK_EVENT","_backPressSubscriptions","RCTDeviceEventEmitter","addListener","i","length","BackHandler","exitApp","NativeDeviceEventManager","invokeDefaultBackPressHandler","addEventListener","eventName","handler","indexOf","push","remove","removeEventListener","index","splice","module","exports"],"sources":["BackHandler.android.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport NativeDeviceEventManager from '../../Libraries/NativeModules/specs/NativeDeviceEventManager';\nimport RCTDeviceEventEmitter from '../EventEmitter/RCTDeviceEventEmitter';\n\nconst DEVICE_BACK_EVENT = 'hardwareBackPress';\n\ntype BackPressEventName = 'backPress' | 'hardwareBackPress';\n\nconst _backPressSubscriptions = [];\n\nRCTDeviceEventEmitter.addListener(DEVICE_BACK_EVENT, function () {\n  for (let i = _backPressSubscriptions.length - 1; i >= 0; i--) {\n    if (_backPressSubscriptions[i]()) {\n      return;\n    }\n  }\n\n  BackHandler.exitApp();\n});\n\n/**\n * Detect hardware button presses for back navigation.\n *\n * Android: Detect hardware back button presses, and programmatically invoke the default back button\n * functionality to exit the app if there are no listeners or if none of the listeners return true.\n *\n * iOS: Not applicable.\n *\n * The event subscriptions are called in reverse order (i.e. last registered subscription first),\n * and if one subscription returns true then subscriptions registered earlier will not be called.\n *\n * Example:\n *\n * ```javascript\n * BackHandler.addEventListener('hardwareBackPress', function() {\n *  // this.onMainScreen and this.goBack are just examples, you need to use your own implementation here\n *  // Typically you would use the navigator here to go to the last state.\n *\n *  if (!this.onMainScreen()) {\n *    this.goBack();\n *    return true;\n *  }\n *  return false;\n * });\n * ```\n */\ntype TBackHandler = {|\n  +exitApp: () => void,\n  +addEventListener: (\n    eventName: BackPressEventName,\n    handler: () => ?boolean,\n  ) => {remove: () => void, ...},\n  +removeEventListener: (\n    eventName: BackPressEventName,\n    handler: () => ?boolean,\n  ) => void,\n|};\nconst BackHandler: TBackHandler = {\n  exitApp: function (): void {\n    if (!NativeDeviceEventManager) {\n      return;\n    }\n\n    NativeDeviceEventManager.invokeDefaultBackPressHandler();\n  },\n\n  /**\n   * Adds an event handler. Supported events:\n   *\n   * - `hardwareBackPress`: Fires when the Android hardware back button is pressed.\n   */\n  addEventListener: function (\n    eventName: BackPressEventName,\n    handler: () => ?boolean,\n  ): {remove: () => void, ...} {\n    if (_backPressSubscriptions.indexOf(handler) === -1) {\n      _backPressSubscriptions.push(handler);\n    }\n    return {\n      remove: (): void => BackHandler.removeEventListener(eventName, handler),\n    };\n  },\n\n  /**\n   * Removes the event handler.\n   */\n  removeEventListener: function (\n    eventName: BackPressEventName,\n    handler: () => ?boolean,\n  ): void {\n    const index = _backPressSubscriptions.indexOf(handler);\n    if (index !== -1) {\n      _backPressSubscriptions.splice(index, 1);\n    }\n  },\n};\n\nmodule.exports = BackHandler;\n"],"mappings":";AAUA,IAAAA,yBAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,sBAAA,GAAAF,sBAAA,CAAAC,OAAA;AAEA,IAAME,iBAAiB,GAAG,mBAAmB;AAI7C,IAAMC,uBAAuB,GAAG,EAAE;AAElCC,8BAAqB,CAACC,WAAW,CAACH,iBAAiB,EAAE,YAAY;EAC/D,KAAK,IAAII,CAAC,GAAGH,uBAAuB,CAACI,MAAM,GAAG,CAAC,EAAED,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC5D,IAAIH,uBAAuB,CAACG,CAAC,CAAC,EAAE,EAAE;MAChC;IACF;EACF;EAEAE,WAAW,CAACC,OAAO,EAAE;AACvB,CAAC,CAAC;AAuCF,IAAMD,WAAyB,GAAG;EAChCC,OAAO,EAAE,SAAAA,QAAA,EAAkB;IACzB,IAAI,CAACC,iCAAwB,EAAE;MAC7B;IACF;IAEAA,iCAAwB,CAACC,6BAA6B,EAAE;EAC1D,CAAC;EAODC,gBAAgB,EAAE,SAAAA,iBAChBC,SAA6B,EAC7BC,OAAuB,EACI;IAC3B,IAAIX,uBAAuB,CAACY,OAAO,CAACD,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE;MACnDX,uBAAuB,CAACa,IAAI,CAACF,OAAO,CAAC;IACvC;IACA,OAAO;MACLG,MAAM,EAAE,SAAAA,OAAA;QAAA,OAAYT,WAAW,CAACU,mBAAmB,CAACL,SAAS,EAAEC,OAAO,CAAC;MAAA;IACzE,CAAC;EACH,CAAC;EAKDI,mBAAmB,EAAE,SAAAA,oBACnBL,SAA6B,EAC7BC,OAAuB,EACjB;IACN,IAAMK,KAAK,GAAGhB,uBAAuB,CAACY,OAAO,CAACD,OAAO,CAAC;IACtD,IAAIK,KAAK,KAAK,CAAC,CAAC,EAAE;MAChBhB,uBAAuB,CAACiB,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IAC1C;EACF;AACF,CAAC;AAEDE,MAAM,CAACC,OAAO,GAAGd,WAAW"}