{"version":3,"names":["_interopRequireDefault","require","_classCallCheck2","_createClass2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_jsxRuntime","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","ScrollView","TouchableHighlight","View","FlatList","XHRInterceptor","StyleSheet","Text","WebSocketInterceptor","React","LISTVIEW_CELL_HEIGHT","nextXHRId","getStringByValue","value","undefined","JSON","stringify","length","String","substr","concat","getTypeShortName","type","keyExtractor","request","id","NetworkOverlay","_React$Component","_super","_this","_len","args","Array","_key","_requestsListViewScrollMetrics","offset","visibleLength","contentLength","_socketIdMap","_xhrIdMap","state","detailRowId","requests","_renderItem","_ref","item","index","tableRowViewStyle","styles","tableRow","tableRowOdd","tableRowEven","tableRowPressed","urlCellViewStyle","urlCellView","methodCellViewStyle","methodCellView","jsx","onPress","_pressRow","children","jsxs","style","cellText","numberOfLines","url","_indicateAdditionalRequests","_requestsListView","distanceFromEndThreshold","_this$_requestsListVi","distanceFromEnd","isCloseToEnd","scrollToEnd","flashScrollIndicators","_captureRequestsListView","listRef","_requestsListViewOnScroll","nativeEvent","contentOffset","y","layoutMeasurement","height","contentSize","_scrollDetailToTop","_detailScrollView","scrollTo","animated","_closeButtonClicked","setState","key","_enableXHRInterception","_this2","isInterceptorEnabled","setOpenCallback","method","xhr","_index","xhrIndex","_xhr","setRequestHeaderCallback","header","_getRequestIndexByXHRID","_ref2","networkRequestInfo","requestHeaders","setSendCallback","data","_ref3","dataSent","setHeaderReceivedCallback","size","responseHeaders","_ref4","responseContentType","responseSize","setResponseCallback","status","timeout","response","responseURL","responseType","_ref5","enableInterception","_enableWebSocketInterception","_this3","setConnectCallback","protocols","options","socketId","socketIndex","_webSocket","setCloseCallback","statusCode","closeReason","_ref6","_ref7","messages","setOnMessageCallback","message","_ref8","setOnCloseCallback","_ref9","serverClose","setOnErrorCallback","_ref10","serverError","componentDidMount","componentWillUnmount","disableInterception","_renderItemDetail","_this4","requestItem","details","Object","keys","map","detailViewRow","detailViewText","detailKeyCellView","detailValueCellView","closeButton","closeButtonText","detailScrollView","ref","scrollRef","rowId","render","_this$state","container","listViewTitle","urlTitleCellView","methodTitleCellView","onScroll","listView","renderItem","extraData","Component","create","paddingTop","paddingBottom","paddingLeft","paddingRight","flex","flexDirection","backgroundColor","color","fontSize","borderColor","borderTopWidth","borderBottomWidth","borderRightWidth","alignItems","justifyContent","borderLeftWidth","marginTop","marginBottom","paddingHorizontal","module","exports"],"sources":["NetworkOverlay.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nimport type {RenderItemProps} from '@react-native/virtualized-lists';\n\nconst ScrollView = require('../Components/ScrollView/ScrollView');\nconst TouchableHighlight = require('../Components/Touchable/TouchableHighlight');\nconst View = require('../Components/View/View');\nconst FlatList = require('../Lists/FlatList');\nconst XHRInterceptor = require('../Network/XHRInterceptor');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst Text = require('../Text/Text');\nconst WebSocketInterceptor = require('../WebSocket/WebSocketInterceptor');\nconst React = require('react');\n\nconst LISTVIEW_CELL_HEIGHT = 15;\n\n// Global id for the intercepted XMLHttpRequest objects.\nlet nextXHRId = 0;\n\ntype NetworkRequestInfo = {\n  id: number,\n  type?: string,\n  url?: string,\n  method?: string,\n  status?: number,\n  dataSent?: any,\n  responseContentType?: string,\n  responseSize?: number,\n  requestHeaders?: Object,\n  responseHeaders?: string,\n  response?: Object | string,\n  responseURL?: string,\n  responseType?: string,\n  timeout?: number,\n  closeReason?: string,\n  messages?: string,\n  serverClose?: Object,\n  serverError?: Object,\n  ...\n};\n\ntype Props = $ReadOnly<{||}>;\ntype State = {|\n  detailRowId: ?number,\n  requests: Array<NetworkRequestInfo>,\n|};\n\nfunction getStringByValue(value: any): string {\n  if (value === undefined) {\n    return 'undefined';\n  }\n  if (typeof value === 'object') {\n    return JSON.stringify(value);\n  }\n  if (typeof value === 'string' && value.length > 500) {\n    return String(value)\n      .substr(0, 500)\n      .concat('\\n***TRUNCATED TO 500 CHARACTERS***');\n  }\n  return value;\n}\n\nfunction getTypeShortName(type: any): string {\n  if (type === 'XMLHttpRequest') {\n    return 'XHR';\n  } else if (type === 'WebSocket') {\n    return 'WS';\n  }\n\n  return '';\n}\n\nfunction keyExtractor(request: NetworkRequestInfo): string {\n  return String(request.id);\n}\n\n/**\n * Show all the intercepted network requests over the InspectorPanel.\n */\nclass NetworkOverlay extends React.Component<Props, State> {\n  _requestsListView: ?React.ElementRef<typeof FlatList>;\n  _detailScrollView: ?React.ElementRef<typeof ScrollView>;\n\n  // Metrics are used to decide when if the request list should be sticky, and\n  // scroll to the bottom as new network requests come in, or if the user has\n  // intentionally scrolled away from the bottom - to instead flash the scroll bar\n  // and keep the current position\n  _requestsListViewScrollMetrics: {\n    contentLength: number,\n    offset: number,\n    visibleLength: number,\n  } = {\n    offset: 0,\n    visibleLength: 0,\n    contentLength: 0,\n  };\n\n  // Map of `socketId` -> `index in `this.state.requests`.\n  _socketIdMap: {[string]: number} = {};\n  // Map of `xhr._index` -> `index in `this.state.requests`.\n  _xhrIdMap: {[key: number]: number, ...} = {};\n\n  state: State = {\n    detailRowId: null,\n    requests: [],\n  };\n\n  _enableXHRInterception(): void {\n    if (XHRInterceptor.isInterceptorEnabled()) {\n      return;\n    }\n    // Show the XHR request item in listView as soon as it was opened.\n    XHRInterceptor.setOpenCallback((method, url, xhr) => {\n      // Generate a global id for each intercepted xhr object, add this id\n      // to the xhr object as a private `_index` property to identify it,\n      // so that we can distinguish different xhr objects in callbacks.\n      xhr._index = nextXHRId++;\n      const xhrIndex = this.state.requests.length;\n      this._xhrIdMap[xhr._index] = xhrIndex;\n\n      const _xhr: NetworkRequestInfo = {\n        id: xhrIndex,\n        type: 'XMLHttpRequest',\n        method: method,\n        url: url,\n      };\n      this.setState(\n        {\n          requests: this.state.requests.concat(_xhr),\n        },\n        this._indicateAdditionalRequests,\n      );\n    });\n\n    XHRInterceptor.setRequestHeaderCallback((header, value, xhr) => {\n      const xhrIndex = this._getRequestIndexByXHRID(xhr._index);\n      if (xhrIndex === -1) {\n        return;\n      }\n\n      this.setState(({requests}) => {\n        const networkRequestInfo = requests[xhrIndex];\n        if (!networkRequestInfo.requestHeaders) {\n          networkRequestInfo.requestHeaders = ({}: {[any]: any});\n        }\n        networkRequestInfo.requestHeaders[header] = value;\n        return {requests};\n      });\n    });\n\n    XHRInterceptor.setSendCallback((data, xhr) => {\n      const xhrIndex = this._getRequestIndexByXHRID(xhr._index);\n      if (xhrIndex === -1) {\n        return;\n      }\n\n      this.setState(({requests}) => {\n        const networkRequestInfo = requests[xhrIndex];\n        networkRequestInfo.dataSent = data;\n        return {requests};\n      });\n    });\n\n    XHRInterceptor.setHeaderReceivedCallback(\n      (type, size, responseHeaders, xhr) => {\n        const xhrIndex = this._getRequestIndexByXHRID(xhr._index);\n        if (xhrIndex === -1) {\n          return;\n        }\n\n        this.setState(({requests}) => {\n          const networkRequestInfo = requests[xhrIndex];\n          networkRequestInfo.responseContentType = type;\n          networkRequestInfo.responseSize = size;\n          networkRequestInfo.responseHeaders = responseHeaders;\n          return {requests};\n        });\n      },\n    );\n\n    XHRInterceptor.setResponseCallback(\n      (status, timeout, response, responseURL, responseType, xhr) => {\n        const xhrIndex = this._getRequestIndexByXHRID(xhr._index);\n        if (xhrIndex === -1) {\n          return;\n        }\n\n        this.setState(({requests}) => {\n          const networkRequestInfo = requests[xhrIndex];\n          networkRequestInfo.status = status;\n          networkRequestInfo.timeout = timeout;\n          networkRequestInfo.response = response;\n          networkRequestInfo.responseURL = responseURL;\n          networkRequestInfo.responseType = responseType;\n\n          return {requests};\n        });\n      },\n    );\n\n    // Fire above callbacks.\n    XHRInterceptor.enableInterception();\n  }\n\n  _enableWebSocketInterception(): void {\n    if (WebSocketInterceptor.isInterceptorEnabled()) {\n      return;\n    }\n    // Show the WebSocket request item in listView when 'connect' is called.\n    WebSocketInterceptor.setConnectCallback(\n      (url, protocols, options, socketId) => {\n        const socketIndex = this.state.requests.length;\n        this._socketIdMap[socketId] = socketIndex;\n        const _webSocket: NetworkRequestInfo = {\n          id: socketIndex,\n          type: 'WebSocket',\n          url: url,\n          protocols: protocols,\n        };\n        this.setState(\n          {\n            requests: this.state.requests.concat(_webSocket),\n          },\n          this._indicateAdditionalRequests,\n        );\n      },\n    );\n\n    WebSocketInterceptor.setCloseCallback(\n      (statusCode, closeReason, socketId) => {\n        const socketIndex = this._socketIdMap[socketId];\n        if (socketIndex === undefined) {\n          return;\n        }\n        if (statusCode !== null && closeReason !== null) {\n          this.setState(({requests}) => {\n            const networkRequestInfo = requests[socketIndex];\n            networkRequestInfo.status = statusCode;\n            networkRequestInfo.closeReason = closeReason;\n            return {requests};\n          });\n        }\n      },\n    );\n\n    WebSocketInterceptor.setSendCallback((data, socketId) => {\n      const socketIndex = this._socketIdMap[socketId];\n      if (socketIndex === undefined) {\n        return;\n      }\n\n      this.setState(({requests}) => {\n        const networkRequestInfo = requests[socketIndex];\n\n        if (!networkRequestInfo.messages) {\n          networkRequestInfo.messages = '';\n        }\n        networkRequestInfo.messages += 'Sent: ' + JSON.stringify(data) + '\\n';\n\n        return {requests};\n      });\n    });\n\n    WebSocketInterceptor.setOnMessageCallback((socketId, message) => {\n      const socketIndex = this._socketIdMap[socketId];\n      if (socketIndex === undefined) {\n        return;\n      }\n\n      this.setState(({requests}) => {\n        const networkRequestInfo = requests[socketIndex];\n\n        if (!networkRequestInfo.messages) {\n          networkRequestInfo.messages = '';\n        }\n        networkRequestInfo.messages +=\n          'Received: ' + JSON.stringify(message) + '\\n';\n\n        return {requests};\n      });\n    });\n\n    WebSocketInterceptor.setOnCloseCallback((socketId, message) => {\n      const socketIndex = this._socketIdMap[socketId];\n      if (socketIndex === undefined) {\n        return;\n      }\n\n      this.setState(({requests}) => {\n        const networkRequestInfo = requests[socketIndex];\n        networkRequestInfo.serverClose = message;\n\n        return {requests};\n      });\n    });\n\n    WebSocketInterceptor.setOnErrorCallback((socketId, message) => {\n      const socketIndex = this._socketIdMap[socketId];\n      if (socketIndex === undefined) {\n        return;\n      }\n\n      this.setState(({requests}) => {\n        const networkRequestInfo = requests[socketIndex];\n        networkRequestInfo.serverError = message;\n\n        return {requests};\n      });\n    });\n\n    // Fire above callbacks.\n    WebSocketInterceptor.enableInterception();\n  }\n\n  componentDidMount() {\n    this._enableXHRInterception();\n    this._enableWebSocketInterception();\n  }\n\n  componentWillUnmount() {\n    XHRInterceptor.disableInterception();\n    WebSocketInterceptor.disableInterception();\n  }\n\n  _renderItem = ({\n    item,\n    index,\n  }: RenderItemProps<NetworkRequestInfo>): React.Element<any> => {\n    const tableRowViewStyle = [\n      styles.tableRow,\n      index % 2 === 1 ? styles.tableRowOdd : styles.tableRowEven,\n      index === this.state.detailRowId && styles.tableRowPressed,\n    ];\n    const urlCellViewStyle = styles.urlCellView;\n    const methodCellViewStyle = styles.methodCellView;\n\n    return (\n      <TouchableHighlight\n        onPress={() => {\n          this._pressRow(index);\n        }}>\n        <View>\n          <View style={tableRowViewStyle}>\n            <View style={urlCellViewStyle}>\n              <Text style={styles.cellText} numberOfLines={1}>\n                {item.url}\n              </Text>\n            </View>\n            <View style={methodCellViewStyle}>\n              <Text style={styles.cellText} numberOfLines={1}>\n                {getTypeShortName(item.type)}\n              </Text>\n            </View>\n          </View>\n        </View>\n      </TouchableHighlight>\n    );\n  };\n\n  _renderItemDetail(id: number): React.Node {\n    const requestItem = this.state.requests[id];\n    const details = Object.keys(requestItem).map(key => {\n      if (key === 'id') {\n        return;\n      }\n      return (\n        <View style={styles.detailViewRow} key={key}>\n          <Text style={[styles.detailViewText, styles.detailKeyCellView]}>\n            {key}\n          </Text>\n          <Text style={[styles.detailViewText, styles.detailValueCellView]}>\n            {getStringByValue(requestItem[key])}\n          </Text>\n        </View>\n      );\n    });\n\n    return (\n      <View>\n        <TouchableHighlight\n          style={styles.closeButton}\n          onPress={this._closeButtonClicked}>\n          <View>\n            <Text style={styles.closeButtonText}>v</Text>\n          </View>\n        </TouchableHighlight>\n        <ScrollView\n          style={styles.detailScrollView}\n          ref={scrollRef => (this._detailScrollView = scrollRef)}>\n          {details}\n        </ScrollView>\n      </View>\n    );\n  }\n\n  _indicateAdditionalRequests = (): void => {\n    if (this._requestsListView) {\n      const distanceFromEndThreshold = LISTVIEW_CELL_HEIGHT * 2;\n      const {offset, visibleLength, contentLength} =\n        this._requestsListViewScrollMetrics;\n      const distanceFromEnd = contentLength - visibleLength - offset;\n      const isCloseToEnd = distanceFromEnd <= distanceFromEndThreshold;\n      if (isCloseToEnd) {\n        this._requestsListView.scrollToEnd();\n      } else {\n        this._requestsListView.flashScrollIndicators();\n      }\n    }\n  };\n\n  _captureRequestsListView = (listRef: ?FlatList<NetworkRequestInfo>): void => {\n    this._requestsListView = listRef;\n  };\n\n  _requestsListViewOnScroll = (e: Object): void => {\n    this._requestsListViewScrollMetrics.offset = e.nativeEvent.contentOffset.y;\n    this._requestsListViewScrollMetrics.visibleLength =\n      e.nativeEvent.layoutMeasurement.height;\n    this._requestsListViewScrollMetrics.contentLength =\n      e.nativeEvent.contentSize.height;\n  };\n\n  /**\n   * Popup a scrollView to dynamically show detailed information of\n   * the request, when pressing a row in the network flow listView.\n   */\n  _pressRow(rowId: number): void {\n    this.setState({detailRowId: rowId}, this._scrollDetailToTop);\n  }\n\n  _scrollDetailToTop = (): void => {\n    if (this._detailScrollView) {\n      this._detailScrollView.scrollTo({\n        y: 0,\n        animated: false,\n      });\n    }\n  };\n\n  _closeButtonClicked = () => {\n    this.setState({detailRowId: null});\n  };\n\n  _getRequestIndexByXHRID(index: number): number {\n    if (index === undefined) {\n      return -1;\n    }\n    const xhrIndex = this._xhrIdMap[index];\n    if (xhrIndex === undefined) {\n      return -1;\n    } else {\n      return xhrIndex;\n    }\n  }\n\n  render(): React.Node {\n    const {requests, detailRowId} = this.state;\n\n    return (\n      <View style={styles.container}>\n        {detailRowId != null && this._renderItemDetail(detailRowId)}\n        <View style={styles.listViewTitle}>\n          {requests.length > 0 && (\n            <View style={styles.tableRow}>\n              <View style={styles.urlTitleCellView}>\n                <Text style={styles.cellText} numberOfLines={1}>\n                  URL\n                </Text>\n              </View>\n              <View style={styles.methodTitleCellView}>\n                <Text style={styles.cellText} numberOfLines={1}>\n                  Type\n                </Text>\n              </View>\n            </View>\n          )}\n        </View>\n\n        <FlatList\n          ref={this._captureRequestsListView}\n          onScroll={this._requestsListViewOnScroll}\n          style={styles.listView}\n          data={requests}\n          renderItem={this._renderItem}\n          keyExtractor={keyExtractor}\n          extraData={this.state}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: 10,\n    paddingBottom: 10,\n    paddingLeft: 5,\n    paddingRight: 5,\n  },\n  listViewTitle: {\n    height: 20,\n  },\n  listView: {\n    flex: 1,\n    height: 60,\n  },\n  tableRow: {\n    flexDirection: 'row',\n    flex: 1,\n    height: LISTVIEW_CELL_HEIGHT,\n  },\n  tableRowEven: {\n    backgroundColor: '#555',\n  },\n  tableRowOdd: {\n    backgroundColor: '#000',\n  },\n  tableRowPressed: {\n    backgroundColor: '#3B5998',\n  },\n  cellText: {\n    color: 'white',\n    fontSize: 12,\n  },\n  methodTitleCellView: {\n    height: 18,\n    borderColor: '#DCD7CD',\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderRightWidth: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#444',\n    flex: 1,\n  },\n  urlTitleCellView: {\n    height: 18,\n    borderColor: '#DCD7CD',\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderLeftWidth: 1,\n    borderRightWidth: 1,\n    justifyContent: 'center',\n    backgroundColor: '#444',\n    flex: 5,\n    paddingLeft: 3,\n  },\n  methodCellView: {\n    height: 15,\n    borderColor: '#DCD7CD',\n    borderRightWidth: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1,\n  },\n  urlCellView: {\n    height: 15,\n    borderColor: '#DCD7CD',\n    borderLeftWidth: 1,\n    borderRightWidth: 1,\n    justifyContent: 'center',\n    flex: 5,\n    paddingLeft: 3,\n  },\n  detailScrollView: {\n    flex: 1,\n    height: 180,\n    marginTop: 5,\n    marginBottom: 5,\n  },\n  detailKeyCellView: {\n    flex: 1.3,\n  },\n  detailValueCellView: {\n    flex: 2,\n  },\n  detailViewRow: {\n    flexDirection: 'row',\n    paddingHorizontal: 3,\n  },\n  detailViewText: {\n    color: 'white',\n    fontSize: 11,\n  },\n  closeButtonText: {\n    color: 'white',\n    fontSize: 10,\n  },\n  closeButton: {\n    marginTop: 5,\n    backgroundColor: '#888',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nmodule.exports = NetworkOverlay;\n"],"mappings":"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"}