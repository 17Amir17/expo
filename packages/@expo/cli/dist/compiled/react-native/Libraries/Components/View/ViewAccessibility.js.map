{"version":3,"names":[],"sources":["ViewAccessibility.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nimport type {SyntheticEvent} from '../../Types/CoreEventTypes';\n\n// This must be kept in sync with the AccessibilityRolesMask in RCTViewManager.m\nexport type AccessibilityRole =\n  | 'none'\n  | 'button'\n  | 'dropdownlist'\n  | 'togglebutton'\n  | 'link'\n  | 'search'\n  | 'image'\n  | 'keyboardkey'\n  | 'text'\n  | 'adjustable'\n  | 'imagebutton'\n  | 'header'\n  | 'summary'\n  | 'alert'\n  | 'checkbox'\n  | 'combobox'\n  | 'menu'\n  | 'menubar'\n  | 'menuitem'\n  | 'progressbar'\n  | 'radio'\n  | 'radiogroup'\n  | 'scrollbar'\n  | 'spinbutton'\n  | 'switch'\n  | 'tab'\n  | 'tabbar'\n  | 'tablist'\n  | 'timer'\n  | 'list'\n  | 'toolbar'\n  | 'grid'\n  | 'pager'\n  | 'scrollview'\n  | 'horizontalscrollview'\n  | 'viewgroup'\n  | 'webview'\n  | 'drawerlayout'\n  | 'slidingdrawer'\n  | 'iconmenu';\n\n// Role types for web\nexport type Role =\n  | 'alert'\n  | 'alertdialog'\n  | 'application'\n  | 'article'\n  | 'banner'\n  | 'button'\n  | 'cell'\n  | 'checkbox'\n  | 'columnheader'\n  | 'combobox'\n  | 'complementary'\n  | 'contentinfo'\n  | 'definition'\n  | 'dialog'\n  | 'directory'\n  | 'document'\n  | 'feed'\n  | 'figure'\n  | 'form'\n  | 'grid'\n  | 'group'\n  | 'heading'\n  | 'img'\n  | 'link'\n  | 'list'\n  | 'listitem'\n  | 'log'\n  | 'main'\n  | 'marquee'\n  | 'math'\n  | 'menu'\n  | 'menubar'\n  | 'menuitem'\n  | 'meter'\n  | 'navigation'\n  | 'none'\n  | 'note'\n  | 'option'\n  | 'presentation'\n  | 'progressbar'\n  | 'radio'\n  | 'radiogroup'\n  | 'region'\n  | 'row'\n  | 'rowgroup'\n  | 'rowheader'\n  | 'scrollbar'\n  | 'searchbox'\n  | 'separator'\n  | 'slider'\n  | 'spinbutton'\n  | 'status'\n  | 'summary'\n  | 'switch'\n  | 'tab'\n  | 'table'\n  | 'tablist'\n  | 'tabpanel'\n  | 'term'\n  | 'timer'\n  | 'toolbar'\n  | 'tooltip'\n  | 'tree'\n  | 'treegrid'\n  | 'treeitem';\n\n// the info associated with an accessibility action\nexport type AccessibilityActionInfo = $ReadOnly<{\n  name: string,\n  label?: string,\n  ...\n}>;\n\n// The info included in the event sent to onAccessibilityAction\nexport type AccessibilityActionEvent = SyntheticEvent<\n  $ReadOnly<{actionName: string, ...}>,\n>;\n\nexport type AccessibilityState = {\n  disabled?: boolean,\n  selected?: boolean,\n  checked?: ?boolean | 'mixed',\n  busy?: boolean,\n  expanded?: boolean,\n  ...\n};\n\nexport type AccessibilityValue = $ReadOnly<{|\n  /**\n   * The minimum value of this component's range. (should be an integer)\n   */\n  min?: number,\n\n  /**\n   * The maximum value of this component's range. (should be an integer)\n   */\n  max?: number,\n\n  /**\n   * The current value of this component's range. (should be an integer)\n   */\n  now?: number,\n\n  /**\n   * A textual description of this component's value. (will override minimum, current, and maximum if set)\n   */\n  text?: Stringish,\n|}>;\n"],"mappings":"AAUA,YAAY"}