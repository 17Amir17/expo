{"version":3,"names":["_NativeEventEmitter2","_interopRequireDefault","require","_Platform","_convertRequestBody","_NativeNetworkingAndroid","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","prototype","valueOf","call","e","convertHeadersMapToArray","headers","headerArray","name","push","_requestId","generateRequestId","RCTNetworking","_NativeEventEmitter","_inherits2","_super","_classCallCheck2","Platform","OS","NativeNetworkingAndroid","_createClass2","key","value","sendRequest","method","trackingName","url","data","responseType","incrementalUpdates","timeout","callback","withCredentials","body","convertRequestBody","formData","map","part","Object","assign","requestId","abortRequest","clearCookies","NativeEventEmitter","_default","exports"],"sources":["RCTNetworking.android.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport type {RequestBody} from './convertRequestBody';\n\n// Do not require the native RCTNetworking module directly! Use this wrapper module instead.\n// It will add the necessary requestId, so that you don't have to generate it yourself.\nimport NativeEventEmitter from '../EventEmitter/NativeEventEmitter';\nimport Platform from '../Utilities/Platform';\nimport convertRequestBody from './convertRequestBody';\nimport NativeNetworkingAndroid from './NativeNetworkingAndroid';\n\ntype Header = [string, string];\n\n// Convert FormData headers to arrays, which are easier to consume in\n// native on Android.\nfunction convertHeadersMapToArray(headers: Object): Array<Header> {\n  const headerArray: Array<Header> = [];\n  for (const name in headers) {\n    headerArray.push([name, headers[name]]);\n  }\n  return headerArray;\n}\n\nlet _requestId = 1;\nfunction generateRequestId(): number {\n  return _requestId++;\n}\n\n/**\n * This class is a wrapper around the native RCTNetworking module. It adds a necessary unique\n * requestId to each network request that can be used to abort that request later on.\n */\n// FIXME: use typed events\nclass RCTNetworking extends NativeEventEmitter<$FlowFixMe> {\n  constructor() {\n    super(\n      // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n      // If you want to use the native module on other platforms, please remove this condition and test its behavior\n      Platform.OS !== 'ios' ? null : NativeNetworkingAndroid,\n    );\n  }\n\n  sendRequest(\n    method: string,\n    trackingName: string,\n    url: string,\n    headers: Object,\n    data: RequestBody,\n    responseType: 'text' | 'base64',\n    incrementalUpdates: boolean,\n    timeout: number,\n    callback: (requestId: number) => mixed,\n    withCredentials: boolean,\n  ) {\n    const body = convertRequestBody(data);\n    if (body && body.formData) {\n      body.formData = body.formData.map(part => ({\n        ...part,\n        headers: convertHeadersMapToArray(part.headers),\n      }));\n    }\n    const requestId = generateRequestId();\n    NativeNetworkingAndroid.sendRequest(\n      method,\n      url,\n      requestId,\n      convertHeadersMapToArray(headers),\n      {...body, trackingName},\n      responseType,\n      incrementalUpdates,\n      timeout,\n      withCredentials,\n    );\n    callback(requestId);\n  }\n\n  abortRequest(requestId: number) {\n    NativeNetworkingAndroid.abortRequest(requestId);\n  }\n\n  clearCookies(callback: (result: boolean) => any) {\n    NativeNetworkingAndroid.clearCookies(callback);\n  }\n}\n\nexport default (new RCTNetworking(): RCTNetworking);\n"],"mappings":"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"}