{"version":3,"file":"modules.js","names":["_fs","data","_interopRequireDefault","require","obj","__esModule","default","debug","statAsync","file","fs","promises","stat","fileExistsAsync","_await$statAsync$isFi","_await$statAsync","isFile","directoryExistsAsync","_await$statAsync$isDi","_await$statAsync2","isDirectory","fileExists","statSync","writeIfDifferentAsync","filePath","contents","existing","readFile","writeFile"],"sources":["../../src/utils/modules.ts"],"sourcesContent":["import fs from 'fs';\n\nconst debug = require('debug')('expo:config-plugins:fs') as typeof console.log;\n\n/**\n * A non-failing version of async FS stat.\n *\n * @param file\n */\nasync function statAsync(file: string): Promise<fs.Stats | null> {\n  try {\n    return await fs.promises.stat(file);\n  } catch {\n    return null;\n  }\n}\n\nexport async function fileExistsAsync(file: string): Promise<boolean> {\n  return (await statAsync(file))?.isFile() ?? false;\n}\n\nexport async function directoryExistsAsync(file: string): Promise<boolean> {\n  return (await statAsync(file))?.isDirectory() ?? false;\n}\n\nexport function fileExists(file: string): boolean {\n  try {\n    return fs.statSync(file).isFile();\n  } catch {\n    return false;\n  }\n}\n\n// An optimization to attempt to prevent Xcode cache invalidation on files that don't change.\nexport async function writeIfDifferentAsync(filePath: string, contents: string): Promise<void> {\n  if (!fileExists(filePath)) {\n    const existing = await fs.promises.readFile(filePath, 'utf8');\n    if (existing === contents) {\n      debug(`Skipping writing unchanged file: ${filePath}`);\n      return;\n    }\n  }\n  await fs.promises.writeFile(filePath, contents);\n}\n"],"mappings":";;;;;;;;;AAAA,SAAAA,IAAA;EAAA,MAAAC,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAH,GAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAAoB,SAAAC,uBAAAE,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAEpB,MAAMG,KAAK,GAAGJ,OAAO,CAAC,OAAO,CAAC,CAAC,wBAAwB,CAAuB;;AAE9E;AACA;AACA;AACA;AACA;AACA,eAAeK,SAASA,CAACC,IAAY,EAA4B;EAC/D,IAAI;IACF,OAAO,MAAMC,aAAE,CAACC,QAAQ,CAACC,IAAI,CAACH,IAAI,CAAC;EACrC,CAAC,CAAC,MAAM;IACN,OAAO,IAAI;EACb;AACF;AAEO,eAAeI,eAAeA,CAACJ,IAAY,EAAoB;EAAA,IAAAK,qBAAA,EAAAC,gBAAA;EACpE,QAAAD,qBAAA,IAAAC,gBAAA,GAAQ,MAAMP,SAAS,CAACC,IAAI,CAAC,cAAAM,gBAAA,uBAAtBA,gBAAA,CAAyBC,MAAM,EAAE,cAAAF,qBAAA,cAAAA,qBAAA,GAAI,KAAK;AACnD;AAEO,eAAeG,oBAAoBA,CAACR,IAAY,EAAoB;EAAA,IAAAS,qBAAA,EAAAC,iBAAA;EACzE,QAAAD,qBAAA,IAAAC,iBAAA,GAAQ,MAAMX,SAAS,CAACC,IAAI,CAAC,cAAAU,iBAAA,uBAAtBA,iBAAA,CAAyBC,WAAW,EAAE,cAAAF,qBAAA,cAAAA,qBAAA,GAAI,KAAK;AACxD;AAEO,SAASG,UAAUA,CAACZ,IAAY,EAAW;EAChD,IAAI;IACF,OAAOC,aAAE,CAACY,QAAQ,CAACb,IAAI,CAAC,CAACO,MAAM,EAAE;EACnC,CAAC,CAAC,MAAM;IACN,OAAO,KAAK;EACd;AACF;;AAEA;AACO,eAAeO,qBAAqBA,CAACC,QAAgB,EAAEC,QAAgB,EAAiB;EAC7F,IAAI,CAACJ,UAAU,CAACG,QAAQ,CAAC,EAAE;IACzB,MAAME,QAAQ,GAAG,MAAMhB,aAAE,CAACC,QAAQ,CAACgB,QAAQ,CAACH,QAAQ,EAAE,MAAM,CAAC;IAC7D,IAAIE,QAAQ,KAAKD,QAAQ,EAAE;MACzBlB,KAAK,CAAE,oCAAmCiB,QAAS,EAAC,CAAC;MACrD;IACF;EACF;EACA,MAAMd,aAAE,CAACC,QAAQ,CAACiB,SAAS,CAACJ,QAAQ,EAAEC,QAAQ,CAAC;AACjD"}