{"version":3,"file":"Updates.js","names":["_sdkRuntimeVersions","data","require","_fs","_interopRequireDefault","_getenv","_path","_resolveFrom","_semver","_","obj","__esModule","default","getExpoUpdatesPackageVersion","projectRoot","expoUpdatesPackageJsonPath","resolveFrom","silent","fs","existsSync","packageJson","JSON","parse","readFileSync","version","getUpdateUrl","config","_config$updates","_config$updates2","updateUrl","updates","url","enabledConfigSetting","enabled","Error","getAppVersion","_config$version","getNativeVersion","platform","IOSConfig","Version","getVersion","buildNumber","getBuildNumber","versionCode","AndroidConfig","getVersionCode","withRuntimeVersion","_config$ios","_config$android","ios","runtimeVersion","getRuntimeVersion","android","exports","getRuntimeVersionNullable","e","boolish","console","log","_config$platform$runt","_config$platform","policy","sdkVersion","getRuntimeVersionForSDKVersion","stringify","getSDKVersion","getUpdatesTimeout","_config$updates$fallb","_config$updates3","fallbackToCacheTimeout","getUpdatesCheckOnLaunch","expoUpdatesPackageVersion","_config$updates4","_config$updates5","_config$updates6","_config$updates7","checkAutomatically","semver","gte","getUpdatesCodeSigningCertificate","_config$updates8","codeSigningCertificatePath","codeSigningCertificate","undefined","finalPath","path","join","getUpdatesCodeSigningMetadata","_config$updates9","codeSigningMetadata","getUpdatesCodeSigningMetadataStringified","metadata","getUpdatesRequestHeaders","_config$updates10","requestHeaders","getUpdatesRequestHeadersStringified"],"sources":["../../src/utils/Updates.ts"],"sourcesContent":["import { Android, ExpoConfig, IOS } from '@expo/config-types';\nimport { getRuntimeVersionForSDKVersion } from '@expo/sdk-runtime-versions';\nimport fs from 'fs';\nimport { boolish } from 'getenv';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\nimport semver from 'semver';\n\nimport { AndroidConfig, IOSConfig } from '..';\n\nexport type ExpoConfigUpdates = Pick<\n  ExpoConfig,\n  'sdkVersion' | 'owner' | 'runtimeVersion' | 'updates' | 'slug'\n>;\n\nexport function getExpoUpdatesPackageVersion(projectRoot: string): string | null {\n  const expoUpdatesPackageJsonPath = resolveFrom.silent(projectRoot, 'expo-updates/package.json');\n  if (!expoUpdatesPackageJsonPath || !fs.existsSync(expoUpdatesPackageJsonPath)) {\n    return null;\n  }\n  const packageJson = JSON.parse(fs.readFileSync(expoUpdatesPackageJsonPath, 'utf8'));\n  return packageJson.version;\n}\n\nexport function getUpdateUrl(config: Pick<ExpoConfigUpdates, 'updates'>): string {\n  const updateUrl = config.updates?.url;\n\n  // The \"enabled\" config setting is deprecated. We want to tell people how to fix their setup if they were relying upon it.\n  // After this long set of checks, updateUrl is guaranteed to be non-null.\n  // These warnings can be removed in a few releases and replaced with a warning simply on the presence of updateUrl.\n  const enabledConfigSetting = config.updates?.enabled;\n  if (enabledConfigSetting === true) {\n    if (!updateUrl) {\n      throw new Error(\n        `The expo-updates library has not been configured, and must be configured before being built into a project. To fix this, either remove the expo-updates package from your project if you don't use it or configure expo-updates using EAS Update or your own configuration.`\n      );\n    } else {\n      // this case is ok since it was already enabled (both the enabled setting and updateUrl were truthy)\n    }\n  } else if (enabledConfigSetting === false) {\n    if (!updateUrl) {\n      throw new Error(\n        `The updates.enabled config setting has been deprecated. To fix this, remove the expo-updates package from your project. Or, if you wish to enable updates, configure expo-updates using EAS Update or your own configuration.`\n      );\n    } else {\n      throw new Error(\n        'The updates.enabled config setting has been deprecated. To disable updates, remove the expo-updates package from your project. Or, if you wish to enable updates, remove the deprecated config setting.'\n      );\n    }\n  } /* enabledConfigSetting === undefined */ else {\n    if (!updateUrl) {\n      throw new Error(\n        `The expo-updates library has not been configured, and must be configured before being built into a project. To fix this, configure expo-updates using EAS Update or your own configuration.`\n      );\n    } else {\n      // this case is ok since it was already enabled (updateUrl was truthy and thus enabled defaulted to true)\n    }\n  }\n\n  return updateUrl;\n}\n\nexport function getAppVersion(config: Pick<ExpoConfig, 'version'>): string {\n  return config.version ?? '1.0.0';\n}\n\nexport function getNativeVersion(\n  config: Pick<ExpoConfig, 'version'> & {\n    android?: Pick<Android, 'versionCode'>;\n    ios?: Pick<IOS, 'buildNumber'>;\n  },\n  platform: 'android' | 'ios'\n): string {\n  const version = IOSConfig.Version.getVersion(config);\n  switch (platform) {\n    case 'ios': {\n      const buildNumber = IOSConfig.Version.getBuildNumber(config);\n      return `${version}(${buildNumber})`;\n    }\n    case 'android': {\n      const versionCode = AndroidConfig.Version.getVersionCode(config);\n      return `${version}(${versionCode})`;\n    }\n    default: {\n      throw new Error(\n        `\"${platform}\" is not a supported platform. Choose either \"ios\" or \"android\".`\n      );\n    }\n  }\n}\n\n/**\n * Compute runtime version policies.\n * @return an expoConfig with only string valued platform specific runtime versions.\n */\nexport const withRuntimeVersion: (config: ExpoConfig) => ExpoConfig = (config) => {\n  if (config.ios?.runtimeVersion || config.runtimeVersion) {\n    const runtimeVersion = getRuntimeVersion(config, 'ios');\n    if (runtimeVersion) {\n      config.ios = {\n        ...config.ios,\n        runtimeVersion,\n      };\n    }\n  }\n  if (config.android?.runtimeVersion || config.runtimeVersion) {\n    const runtimeVersion = getRuntimeVersion(config, 'android');\n    if (runtimeVersion) {\n      config.android = {\n        ...config.android,\n        runtimeVersion,\n      };\n    }\n  }\n  delete config.runtimeVersion;\n  return config;\n};\n\nexport function getRuntimeVersionNullable(\n  ...[config, platform]: Parameters<typeof getRuntimeVersion>\n): string | null {\n  try {\n    return getRuntimeVersion(config, platform);\n  } catch (e) {\n    if (boolish('EXPO_DEBUG', false)) {\n      console.log(e);\n    }\n    return null;\n  }\n}\n\nexport function getRuntimeVersion(\n  config: Pick<ExpoConfig, 'version' | 'runtimeVersion' | 'sdkVersion'> & {\n    android?: Pick<Android, 'versionCode' | 'runtimeVersion'>;\n    ios?: Pick<IOS, 'buildNumber' | 'runtimeVersion'>;\n  },\n  platform: 'android' | 'ios'\n): string | null {\n  const runtimeVersion = config[platform]?.runtimeVersion ?? config.runtimeVersion;\n  if (!runtimeVersion) {\n    return null;\n  }\n\n  if (typeof runtimeVersion === 'string') {\n    return runtimeVersion;\n  } else if (runtimeVersion.policy === 'appVersion') {\n    return getAppVersion(config);\n  } else if (runtimeVersion.policy === 'nativeVersion') {\n    return getNativeVersion(config, platform);\n  } else if (runtimeVersion.policy === 'sdkVersion') {\n    if (!config.sdkVersion) {\n      throw new Error(\"An SDK version must be defined when using the 'sdkVersion' runtime policy.\");\n    }\n    return getRuntimeVersionForSDKVersion(config.sdkVersion);\n  }\n\n  throw new Error(\n    `\"${\n      typeof runtimeVersion === 'object' ? JSON.stringify(runtimeVersion) : runtimeVersion\n    }\" is not a valid runtime version. getRuntimeVersion only supports a string, \"sdkVersion\", \"appVersion\", or \"nativeVersion\" policy.`\n  );\n}\n\nexport function getSDKVersion(config: Pick<ExpoConfigUpdates, 'sdkVersion'>): string | null {\n  return typeof config.sdkVersion === 'string' ? config.sdkVersion : null;\n}\n\nexport function getUpdatesTimeout(config: Pick<ExpoConfigUpdates, 'updates'>): number {\n  return config.updates?.fallbackToCacheTimeout ?? 0;\n}\n\nexport function getUpdatesCheckOnLaunch(\n  config: Pick<ExpoConfigUpdates, 'updates'>,\n  expoUpdatesPackageVersion?: string | null\n): 'NEVER' | 'ERROR_RECOVERY_ONLY' | 'ALWAYS' | 'WIFI_ONLY' {\n  if (config.updates?.checkAutomatically === 'ON_ERROR_RECOVERY') {\n    // native 'ERROR_RECOVERY_ONLY' option was only introduced in 0.11.x\n    if (expoUpdatesPackageVersion && semver.gte(expoUpdatesPackageVersion, '0.11.0')) {\n      return 'ERROR_RECOVERY_ONLY';\n    }\n    return 'NEVER';\n  } else if (config.updates?.checkAutomatically === 'ON_LOAD') {\n    return 'ALWAYS';\n  } else if (config.updates?.checkAutomatically === 'WIFI_ONLY') {\n    return 'WIFI_ONLY';\n  } else if (config.updates?.checkAutomatically === 'NEVER') {\n    return 'NEVER';\n  }\n  return 'ALWAYS';\n}\n\nexport function getUpdatesCodeSigningCertificate(\n  projectRoot: string,\n  config: Pick<ExpoConfigUpdates, 'updates'>\n): string | undefined {\n  const codeSigningCertificatePath = config.updates?.codeSigningCertificate;\n  if (!codeSigningCertificatePath) {\n    return undefined;\n  }\n\n  const finalPath = path.join(projectRoot, codeSigningCertificatePath);\n  if (!fs.existsSync(finalPath)) {\n    throw new Error(`File not found at \\`updates.codeSigningCertificate\\` path: ${finalPath}`);\n  }\n\n  return fs.readFileSync(finalPath, 'utf8');\n}\n\nexport function getUpdatesCodeSigningMetadata(\n  config: Pick<ExpoConfigUpdates, 'updates'>\n): NonNullable<ExpoConfigUpdates['updates']>['codeSigningMetadata'] {\n  return config.updates?.codeSigningMetadata;\n}\n\nexport function getUpdatesCodeSigningMetadataStringified(\n  config: Pick<ExpoConfigUpdates, 'updates'>\n): string | undefined {\n  const metadata = getUpdatesCodeSigningMetadata(config);\n  if (!metadata) {\n    return undefined;\n  }\n\n  return JSON.stringify(metadata);\n}\n\nexport function getUpdatesRequestHeaders(\n  config: Pick<ExpoConfigUpdates, 'updates'>\n): NonNullable<ExpoConfigUpdates['updates']>['requestHeaders'] {\n  return config.updates?.requestHeaders;\n}\n\nexport function getUpdatesRequestHeadersStringified(\n  config: Pick<ExpoConfigUpdates, 'updates'>\n): string | undefined {\n  const metadata = getUpdatesRequestHeaders(config);\n  if (!metadata) {\n    return undefined;\n  }\n\n  return JSON.stringify(metadata);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AACA,SAAAA,oBAAA;EAAA,MAAAC,IAAA,GAAAC,OAAA;EAAAF,mBAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAE,IAAA;EAAA,MAAAF,IAAA,GAAAG,sBAAA,CAAAF,OAAA;EAAAC,GAAA,YAAAA,CAAA;IAAA,OAAAF,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAI,QAAA;EAAA,MAAAJ,IAAA,GAAAC,OAAA;EAAAG,OAAA,YAAAA,CAAA;IAAA,OAAAJ,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAK,MAAA;EAAA,MAAAL,IAAA,GAAAG,sBAAA,CAAAF,OAAA;EAAAI,KAAA,YAAAA,CAAA;IAAA,OAAAL,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAM,aAAA;EAAA,MAAAN,IAAA,GAAAG,sBAAA,CAAAF,OAAA;EAAAK,YAAA,YAAAA,CAAA;IAAA,OAAAN,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAO,QAAA;EAAA,MAAAP,IAAA,GAAAG,sBAAA,CAAAF,OAAA;EAAAM,OAAA,YAAAA,CAAA;IAAA,OAAAP,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,SAAAQ,EAAA;EAAA,MAAAR,IAAA,GAAAC,OAAA;EAAAO,CAAA,YAAAA,CAAA;IAAA,OAAAR,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAA8C,SAAAG,uBAAAM,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAOvC,SAASG,4BAA4BA,CAACC,WAAmB,EAAiB;EAC/E,MAAMC,0BAA0B,GAAGC,sBAAW,CAACC,MAAM,CAACH,WAAW,EAAE,2BAA2B,CAAC;EAC/F,IAAI,CAACC,0BAA0B,IAAI,CAACG,aAAE,CAACC,UAAU,CAACJ,0BAA0B,CAAC,EAAE;IAC7E,OAAO,IAAI;EACb;EACA,MAAMK,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACJ,aAAE,CAACK,YAAY,CAACR,0BAA0B,EAAE,MAAM,CAAC,CAAC;EACnF,OAAOK,WAAW,CAACI,OAAO;AAC5B;AAEO,SAASC,YAAYA,CAACC,MAA0C,EAAU;EAAA,IAAAC,eAAA,EAAAC,gBAAA;EAC/E,MAAMC,SAAS,IAAAF,eAAA,GAAGD,MAAM,CAACI,OAAO,cAAAH,eAAA,uBAAdA,eAAA,CAAgBI,GAAG;;EAErC;EACA;EACA;EACA,MAAMC,oBAAoB,IAAAJ,gBAAA,GAAGF,MAAM,CAACI,OAAO,cAAAF,gBAAA,uBAAdA,gBAAA,CAAgBK,OAAO;EACpD,IAAID,oBAAoB,KAAK,IAAI,EAAE;IACjC,IAAI,CAACH,SAAS,EAAE;MACd,MAAM,IAAIK,KAAK,CACZ,6QAA4Q,CAC9Q;IACH,CAAC,MAAM;MACL;IAAA;EAEJ,CAAC,MAAM,IAAIF,oBAAoB,KAAK,KAAK,EAAE;IACzC,IAAI,CAACH,SAAS,EAAE;MACd,MAAM,IAAIK,KAAK,CACZ,+NAA8N,CAChO;IACH,CAAC,MAAM;MACL,MAAM,IAAIA,KAAK,CACb,yMAAyM,CAC1M;IACH;EACF,CAAC,CAAC,6CAA8C;IAC9C,IAAI,CAACL,SAAS,EAAE;MACd,MAAM,IAAIK,KAAK,CACZ,6LAA4L,CAC9L;IACH,CAAC,MAAM;MACL;IAAA;EAEJ;EAEA,OAAOL,SAAS;AAClB;AAEO,SAASM,aAAaA,CAACT,MAAmC,EAAU;EAAA,IAAAU,eAAA;EACzE,QAAAA,eAAA,GAAOV,MAAM,CAACF,OAAO,cAAAY,eAAA,cAAAA,eAAA,GAAI,OAAO;AAClC;AAEO,SAASC,gBAAgBA,CAC9BX,MAGC,EACDY,QAA2B,EACnB;EACR,MAAMd,OAAO,GAAGe,aAAS,CAACC,OAAO,CAACC,UAAU,CAACf,MAAM,CAAC;EACpD,QAAQY,QAAQ;IACd,KAAK,KAAK;MAAE;QACV,MAAMI,WAAW,GAAGH,aAAS,CAACC,OAAO,CAACG,cAAc,CAACjB,MAAM,CAAC;QAC5D,OAAQ,GAAEF,OAAQ,IAAGkB,WAAY,GAAE;MACrC;IACA,KAAK,SAAS;MAAE;QACd,MAAME,WAAW,GAAGC,iBAAa,CAACL,OAAO,CAACM,cAAc,CAACpB,MAAM,CAAC;QAChE,OAAQ,GAAEF,OAAQ,IAAGoB,WAAY,GAAE;MACrC;IACA;MAAS;QACP,MAAM,IAAIV,KAAK,CACZ,IAAGI,QAAS,kEAAiE,CAC/E;MACH;EAAC;AAEL;;AAEA;AACA;AACA;AACA;AACO,MAAMS,kBAAsD,GAAIrB,MAAM,IAAK;EAAA,IAAAsB,WAAA,EAAAC,eAAA;EAChF,IAAI,CAAAD,WAAA,GAAAtB,MAAM,CAACwB,GAAG,cAAAF,WAAA,eAAVA,WAAA,CAAYG,cAAc,IAAIzB,MAAM,CAACyB,cAAc,EAAE;IACvD,MAAMA,cAAc,GAAGC,iBAAiB,CAAC1B,MAAM,EAAE,KAAK,CAAC;IACvD,IAAIyB,cAAc,EAAE;MAClBzB,MAAM,CAACwB,GAAG,GAAG;QACX,GAAGxB,MAAM,CAACwB,GAAG;QACbC;MACF,CAAC;IACH;EACF;EACA,IAAI,CAAAF,eAAA,GAAAvB,MAAM,CAAC2B,OAAO,cAAAJ,eAAA,eAAdA,eAAA,CAAgBE,cAAc,IAAIzB,MAAM,CAACyB,cAAc,EAAE;IAC3D,MAAMA,cAAc,GAAGC,iBAAiB,CAAC1B,MAAM,EAAE,SAAS,CAAC;IAC3D,IAAIyB,cAAc,EAAE;MAClBzB,MAAM,CAAC2B,OAAO,GAAG;QACf,GAAG3B,MAAM,CAAC2B,OAAO;QACjBF;MACF,CAAC;IACH;EACF;EACA,OAAOzB,MAAM,CAACyB,cAAc;EAC5B,OAAOzB,MAAM;AACf,CAAC;AAAC4B,OAAA,CAAAP,kBAAA,GAAAA,kBAAA;AAEK,SAASQ,yBAAyBA,CACvC,GAAG,CAAC7B,MAAM,EAAEY,QAAQ,CAAuC,EAC5C;EACf,IAAI;IACF,OAAOc,iBAAiB,CAAC1B,MAAM,EAAEY,QAAQ,CAAC;EAC5C,CAAC,CAAC,OAAOkB,CAAC,EAAE;IACV,IAAI,IAAAC,iBAAO,EAAC,YAAY,EAAE,KAAK,CAAC,EAAE;MAChCC,OAAO,CAACC,GAAG,CAACH,CAAC,CAAC;IAChB;IACA,OAAO,IAAI;EACb;AACF;AAEO,SAASJ,iBAAiBA,CAC/B1B,MAGC,EACDY,QAA2B,EACZ;EAAA,IAAAsB,qBAAA,EAAAC,gBAAA;EACf,MAAMV,cAAc,IAAAS,qBAAA,IAAAC,gBAAA,GAAGnC,MAAM,CAACY,QAAQ,CAAC,cAAAuB,gBAAA,uBAAhBA,gBAAA,CAAkBV,cAAc,cAAAS,qBAAA,cAAAA,qBAAA,GAAIlC,MAAM,CAACyB,cAAc;EAChF,IAAI,CAACA,cAAc,EAAE;IACnB,OAAO,IAAI;EACb;EAEA,IAAI,OAAOA,cAAc,KAAK,QAAQ,EAAE;IACtC,OAAOA,cAAc;EACvB,CAAC,MAAM,IAAIA,cAAc,CAACW,MAAM,KAAK,YAAY,EAAE;IACjD,OAAO3B,aAAa,CAACT,MAAM,CAAC;EAC9B,CAAC,MAAM,IAAIyB,cAAc,CAACW,MAAM,KAAK,eAAe,EAAE;IACpD,OAAOzB,gBAAgB,CAACX,MAAM,EAAEY,QAAQ,CAAC;EAC3C,CAAC,MAAM,IAAIa,cAAc,CAACW,MAAM,KAAK,YAAY,EAAE;IACjD,IAAI,CAACpC,MAAM,CAACqC,UAAU,EAAE;MACtB,MAAM,IAAI7B,KAAK,CAAC,4EAA4E,CAAC;IAC/F;IACA,OAAO,IAAA8B,oDAA8B,EAACtC,MAAM,CAACqC,UAAU,CAAC;EAC1D;EAEA,MAAM,IAAI7B,KAAK,CACZ,IACC,OAAOiB,cAAc,KAAK,QAAQ,GAAG9B,IAAI,CAAC4C,SAAS,CAACd,cAAc,CAAC,GAAGA,cACvE,oIAAmI,CACrI;AACH;AAEO,SAASe,aAAaA,CAACxC,MAA6C,EAAiB;EAC1F,OAAO,OAAOA,MAAM,CAACqC,UAAU,KAAK,QAAQ,GAAGrC,MAAM,CAACqC,UAAU,GAAG,IAAI;AACzE;AAEO,SAASI,iBAAiBA,CAACzC,MAA0C,EAAU;EAAA,IAAA0C,qBAAA,EAAAC,gBAAA;EACpF,QAAAD,qBAAA,IAAAC,gBAAA,GAAO3C,MAAM,CAACI,OAAO,cAAAuC,gBAAA,uBAAdA,gBAAA,CAAgBC,sBAAsB,cAAAF,qBAAA,cAAAA,qBAAA,GAAI,CAAC;AACpD;AAEO,SAASG,uBAAuBA,CACrC7C,MAA0C,EAC1C8C,yBAAyC,EACiB;EAAA,IAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA;EAC1D,IAAI,EAAAH,gBAAA,GAAA/C,MAAM,CAACI,OAAO,cAAA2C,gBAAA,uBAAdA,gBAAA,CAAgBI,kBAAkB,MAAK,mBAAmB,EAAE;IAC9D;IACA,IAAIL,yBAAyB,IAAIM,iBAAM,CAACC,GAAG,CAACP,yBAAyB,EAAE,QAAQ,CAAC,EAAE;MAChF,OAAO,qBAAqB;IAC9B;IACA,OAAO,OAAO;EAChB,CAAC,MAAM,IAAI,EAAAE,gBAAA,GAAAhD,MAAM,CAACI,OAAO,cAAA4C,gBAAA,uBAAdA,gBAAA,CAAgBG,kBAAkB,MAAK,SAAS,EAAE;IAC3D,OAAO,QAAQ;EACjB,CAAC,MAAM,IAAI,EAAAF,gBAAA,GAAAjD,MAAM,CAACI,OAAO,cAAA6C,gBAAA,uBAAdA,gBAAA,CAAgBE,kBAAkB,MAAK,WAAW,EAAE;IAC7D,OAAO,WAAW;EACpB,CAAC,MAAM,IAAI,EAAAD,gBAAA,GAAAlD,MAAM,CAACI,OAAO,cAAA8C,gBAAA,uBAAdA,gBAAA,CAAgBC,kBAAkB,MAAK,OAAO,EAAE;IACzD,OAAO,OAAO;EAChB;EACA,OAAO,QAAQ;AACjB;AAEO,SAASG,gCAAgCA,CAC9ClE,WAAmB,EACnBY,MAA0C,EACtB;EAAA,IAAAuD,gBAAA;EACpB,MAAMC,0BAA0B,IAAAD,gBAAA,GAAGvD,MAAM,CAACI,OAAO,cAAAmD,gBAAA,uBAAdA,gBAAA,CAAgBE,sBAAsB;EACzE,IAAI,CAACD,0BAA0B,EAAE;IAC/B,OAAOE,SAAS;EAClB;EAEA,MAAMC,SAAS,GAAGC,eAAI,CAACC,IAAI,CAACzE,WAAW,EAAEoE,0BAA0B,CAAC;EACpE,IAAI,CAAChE,aAAE,CAACC,UAAU,CAACkE,SAAS,CAAC,EAAE;IAC7B,MAAM,IAAInD,KAAK,CAAE,8DAA6DmD,SAAU,EAAC,CAAC;EAC5F;EAEA,OAAOnE,aAAE,CAACK,YAAY,CAAC8D,SAAS,EAAE,MAAM,CAAC;AAC3C;AAEO,SAASG,6BAA6BA,CAC3C9D,MAA0C,EACwB;EAAA,IAAA+D,gBAAA;EAClE,QAAAA,gBAAA,GAAO/D,MAAM,CAACI,OAAO,cAAA2D,gBAAA,uBAAdA,gBAAA,CAAgBC,mBAAmB;AAC5C;AAEO,SAASC,wCAAwCA,CACtDjE,MAA0C,EACtB;EACpB,MAAMkE,QAAQ,GAAGJ,6BAA6B,CAAC9D,MAAM,CAAC;EACtD,IAAI,CAACkE,QAAQ,EAAE;IACb,OAAOR,SAAS;EAClB;EAEA,OAAO/D,IAAI,CAAC4C,SAAS,CAAC2B,QAAQ,CAAC;AACjC;AAEO,SAASC,wBAAwBA,CACtCnE,MAA0C,EACmB;EAAA,IAAAoE,iBAAA;EAC7D,QAAAA,iBAAA,GAAOpE,MAAM,CAACI,OAAO,cAAAgE,iBAAA,uBAAdA,iBAAA,CAAgBC,cAAc;AACvC;AAEO,SAASC,mCAAmCA,CACjDtE,MAA0C,EACtB;EACpB,MAAMkE,QAAQ,GAAGC,wBAAwB,CAACnE,MAAM,CAAC;EACjD,IAAI,CAACkE,QAAQ,EAAE;IACb,OAAOR,SAAS;EAClB;EAEA,OAAO/D,IAAI,CAAC4C,SAAS,CAAC2B,QAAQ,CAAC;AACjC"}