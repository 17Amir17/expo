{"version":3,"file":"useBlurhash.js","sourceRoot":"","sources":["../../../src/utils/blurhash/useBlurhash.tsx"],"names":[],"mappings":"AAAA,gFAAgF;AAChF,oFAAoF;AACpF,qDAAqD;AAErD,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAErD,OAAO,MAAM,MAAM,UAAU,CAAC;AAC9B,OAAO,EAAE,gBAAgB,EAAE,MAAM,mBAAmB,CAAC;AAErD,MAAM,UAAU,WAAW,CACzB,QAA8E,EAC9E,QAAgB,CAAC;IAEjB,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;IAEnB,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,QAAQ,CAAgB,IAAI,CAAC,CAAC;IAEpD,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,UAAU,GAAG,KAAK,CAAC;QAEvB,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,GAAG,CAAC;YAAE,OAAO;QAE1E,MAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,QAAQ,EAAE,KAAK,IAAI,EAAE,EAAE,QAAQ,EAAE,MAAM,IAAI,EAAE,EAAE,KAAK,CAAC,CAAC;QAE1F,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAChD,MAAM,CAAC,KAAK,GAAG,QAAQ,EAAE,KAAK,IAAI,EAAE,CAAC;QACrC,MAAM,CAAC,MAAM,GAAG,QAAQ,EAAE,MAAM,IAAI,EAAE,CAAC;QACvC,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACxC,MAAM,SAAS,GAAG,OAAQ,CAAC,eAAe,CAAC,QAAQ,EAAE,KAAK,IAAI,EAAE,EAAE,QAAQ,EAAE,MAAM,IAAI,EAAE,CAAC,CAAC;QAC1F,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC3B,OAAQ,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACvC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE;YACrB,IAAI,CAAC,UAAU,EAAE;gBACf,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE;oBAChB,IAAI,MAAM,EAAE;wBACV,GAAG,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;qBAC7B;oBACD,OAAO,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;gBACnD,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,SAAS,eAAe;YAC7B,UAAU,GAAG,IAAI,CAAC;YAClB,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE;gBAChB,IAAI,MAAM,EAAE;oBACV,GAAG,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;iBAC7B;gBACD,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;IAC9D,OAAO,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AACtD,CAAC","sourcesContent":["// adapted from https://gist.github.com/ngbrown/d62eb518753378eb0a9bf02bb4723235\n// modified from https://gist.github.com/WorldMaker/a3cbe0059acd827edee568198376b95a\n// https://github.com/woltapp/react-blurhash/issues/3\n\nimport { useEffect, useState, useMemo } from 'react';\n\nimport decode from './decode';\nimport { isBlurhashString } from '../resolveSources';\n\nexport function useBlurhash(\n  blurhash: { uri?: string; width?: number; height?: number } | undefined | null,\n  punch: number = 1\n) {\n  punch = punch || 1;\n\n  const [uri, setUri] = useState<string | null>(null);\n\n  useEffect(() => {\n    let isCanceled = false;\n\n    if (!blurhash || !blurhash.uri || !isBlurhashString(blurhash.uri)) return;\n\n    const pixels = decode(blurhash.uri, blurhash?.width ?? 32, blurhash?.height ?? 32, punch);\n\n    const canvas = document.createElement('canvas');\n    canvas.width = blurhash?.width ?? 32;\n    canvas.height = blurhash?.height ?? 32;\n    const context = canvas.getContext('2d');\n    const imageData = context!.createImageData(blurhash?.width ?? 32, blurhash?.height ?? 32);\n    imageData.data.set(pixels);\n    context!.putImageData(imageData, 0, 0);\n    canvas.toBlob((blob) => {\n      if (!isCanceled) {\n        setUri((oldUrl) => {\n          if (oldUrl) {\n            URL.revokeObjectURL(oldUrl);\n          }\n          return blob ? URL.createObjectURL(blob) : oldUrl;\n        });\n      }\n    });\n\n    return function cleanupBlurhash() {\n      isCanceled = true;\n      setUri((oldUrl) => {\n        if (oldUrl) {\n          URL.revokeObjectURL(oldUrl);\n        }\n        return null;\n      });\n    };\n  }, [blurhash?.uri, blurhash?.height, blurhash?.width, punch]);\n  return useMemo(() => (uri ? { uri } : null), [uri]);\n}\n"]}